/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/pingcap/tidb-operator/pkg/apis/pingcap.com/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TidbSidecarLister helps list TidbSidecars.
type TidbSidecarLister interface {
	// List lists all TidbSidecars in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.TidbSidecar, err error)
	// TidbSidecars returns an object that can list and get TidbSidecars.
	TidbSidecars(namespace string) TidbSidecarNamespaceLister
	TidbSidecarListerExpansion
}

// tidbSidecarLister implements the TidbSidecarLister interface.
type tidbSidecarLister struct {
	indexer cache.Indexer
}

// NewTidbSidecarLister returns a new TidbSidecarLister.
func NewTidbSidecarLister(indexer cache.Indexer) TidbSidecarLister {
	return &tidbSidecarLister{indexer: indexer}
}

// List lists all TidbSidecars in the indexer.
func (s *tidbSidecarLister) List(selector labels.Selector) (ret []*v1alpha1.TidbSidecar, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TidbSidecar))
	})
	return ret, err
}

// TidbSidecars returns an object that can list and get TidbSidecars.
func (s *tidbSidecarLister) TidbSidecars(namespace string) TidbSidecarNamespaceLister {
	return tidbSidecarNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TidbSidecarNamespaceLister helps list and get TidbSidecars.
type TidbSidecarNamespaceLister interface {
	// List lists all TidbSidecars in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.TidbSidecar, err error)
	// Get retrieves the TidbSidecar from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.TidbSidecar, error)
	TidbSidecarNamespaceListerExpansion
}

// tidbSidecarNamespaceLister implements the TidbSidecarNamespaceLister
// interface.
type tidbSidecarNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TidbSidecars in the indexer for a given namespace.
func (s tidbSidecarNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TidbSidecar, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TidbSidecar))
	})
	return ret, err
}

// Get retrieves the TidbSidecar from the indexer for a given namespace and name.
func (s tidbSidecarNamespaceLister) Get(name string) (*v1alpha1.TidbSidecar, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("tidbsidecar"), name)
	}
	return obj.(*v1alpha1.TidbSidecar), nil
}
