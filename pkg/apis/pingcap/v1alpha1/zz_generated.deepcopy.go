// +build !ignore_autogenerated

// Copyright 2019. PingCAP, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	appsv1 "k8s.io/api/apps/v1"
	v1 "k8s.io/api/core/v1"
	v1beta1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1beta1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Backup) DeepCopyInto(out *Backup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Backup.
func (in *Backup) DeepCopy() *Backup {
	if in == nil {
		return nil
	}
	out := new(Backup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Backup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupCondition) DeepCopyInto(out *BackupCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupCondition.
func (in *BackupCondition) DeepCopy() *BackupCondition {
	if in == nil {
		return nil
	}
	out := new(BackupCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupList) DeepCopyInto(out *BackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Backup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupList.
func (in *BackupList) DeepCopy() *BackupList {
	if in == nil {
		return nil
	}
	out := new(BackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupSchedule) DeepCopyInto(out *BackupSchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupSchedule.
func (in *BackupSchedule) DeepCopy() *BackupSchedule {
	if in == nil {
		return nil
	}
	out := new(BackupSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupSchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupScheduleList) DeepCopyInto(out *BackupScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BackupSchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupScheduleList.
func (in *BackupScheduleList) DeepCopy() *BackupScheduleList {
	if in == nil {
		return nil
	}
	out := new(BackupScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupScheduleSpec) DeepCopyInto(out *BackupScheduleSpec) {
	*out = *in
	if in.MaxBackups != nil {
		in, out := &in.MaxBackups, &out.MaxBackups
		*out = new(int32)
		**out = **in
	}
	if in.MaxReservedTime != nil {
		in, out := &in.MaxReservedTime, &out.MaxReservedTime
		*out = new(string)
		**out = **in
	}
	in.BackupTemplate.DeepCopyInto(&out.BackupTemplate)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupScheduleSpec.
func (in *BackupScheduleSpec) DeepCopy() *BackupScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(BackupScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupScheduleStatus) DeepCopyInto(out *BackupScheduleStatus) {
	*out = *in
	if in.LastBackupTime != nil {
		in, out := &in.LastBackupTime, &out.LastBackupTime
		*out = (*in).DeepCopy()
	}
	if in.AllBackupCleanTime != nil {
		in, out := &in.AllBackupCleanTime, &out.AllBackupCleanTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupScheduleStatus.
func (in *BackupScheduleStatus) DeepCopy() *BackupScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(BackupScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupSpec) DeepCopyInto(out *BackupSpec) {
	*out = *in
	out.From = in.From
	in.StorageProvider.DeepCopyInto(&out.StorageProvider)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupSpec.
func (in *BackupSpec) DeepCopy() *BackupSpec {
	if in == nil {
		return nil
	}
	out := new(BackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupStatus) DeepCopyInto(out *BackupStatus) {
	*out = *in
	in.TimeStarted.DeepCopyInto(&out.TimeStarted)
	in.TimeCompleted.DeepCopyInto(&out.TimeCompleted)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]BackupCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupStatus.
func (in *BackupStatus) DeepCopy() *BackupStatus {
	if in == nil {
		return nil
	}
	out := new(BackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Binlog) DeepCopyInto(out *Binlog) {
	*out = *in
	if in.WriteTimeout != nil {
		in, out := &in.WriteTimeout, &out.WriteTimeout
		*out = new(string)
		**out = **in
	}
	if in.IgnoreError != nil {
		in, out := &in.IgnoreError, &out.IgnoreError
		*out = new(bool)
		**out = **in
	}
	if in.BinlogSocket != nil {
		in, out := &in.BinlogSocket, &out.BinlogSocket
		*out = new(string)
		**out = **in
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Binlog.
func (in *Binlog) DeepCopy() *Binlog {
	if in == nil {
		return nil
	}
	out := new(Binlog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentSpec) DeepCopyInto(out *ComponentSpec) {
	*out = *in
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(v1.PullPolicy)
		**out = **in
	}
	if in.HostNetwork != nil {
		in, out := &in.HostNetwork, &out.HostNetwork
		*out = new(bool)
		**out = **in
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodSecurityContext != nil {
		in, out := &in.PodSecurityContext, &out.PodSecurityContext
		*out = new(v1.PodSecurityContext)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentSpec.
func (in *ComponentSpec) DeepCopy() *ComponentSpec {
	if in == nil {
		return nil
	}
	out := new(ComponentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrdKind) DeepCopyInto(out *CrdKind) {
	*out = *in
	if in.ShortNames != nil {
		in, out := &in.ShortNames, &out.ShortNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AdditionalPrinterColums != nil {
		in, out := &in.AdditionalPrinterColums, &out.AdditionalPrinterColums
		*out = make([]v1beta1.CustomResourceColumnDefinition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrdKind.
func (in *CrdKind) DeepCopy() *CrdKind {
	if in == nil {
		return nil
	}
	out := new(CrdKind)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrdKinds) DeepCopyInto(out *CrdKinds) {
	*out = *in
	in.TiDBCluster.DeepCopyInto(&out.TiDBCluster)
	in.Backup.DeepCopyInto(&out.Backup)
	in.Restore.DeepCopyInto(&out.Restore)
	in.BackupSchedule.DeepCopyInto(&out.BackupSchedule)
	in.TiDBMonitor.DeepCopyInto(&out.TiDBMonitor)
	in.TiDBInitializer.DeepCopyInto(&out.TiDBInitializer)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrdKinds.
func (in *CrdKinds) DeepCopy() *CrdKinds {
	if in == nil {
		return nil
	}
	out := new(CrdKinds)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataResource) DeepCopyInto(out *DataResource) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataResource.
func (in *DataResource) DeepCopy() *DataResource {
	if in == nil {
		return nil
	}
	out := new(DataResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataResource) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataResourceList) DeepCopyInto(out *DataResourceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataResourceList.
func (in *DataResourceList) DeepCopy() *DataResourceList {
	if in == nil {
		return nil
	}
	out := new(DataResourceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataResourceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileLogConfig) DeepCopyInto(out *FileLogConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileLogConfig.
func (in *FileLogConfig) DeepCopy() *FileLogConfig {
	if in == nil {
		return nil
	}
	out := new(FileLogConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsStorageProvider) DeepCopyInto(out *GcsStorageProvider) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsStorageProvider.
func (in *GcsStorageProvider) DeepCopy() *GcsStorageProvider {
	if in == nil {
		return nil
	}
	out := new(GcsStorageProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrafanaSpec) DeepCopyInto(out *GrafanaSpec) {
	*out = *in
	in.MonitorContainer.DeepCopyInto(&out.MonitorContainer)
	in.Service.DeepCopyInto(&out.Service)
	if in.Envs != nil {
		in, out := &in.Envs, &out.Envs
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrafanaSpec.
func (in *GrafanaSpec) DeepCopy() *GrafanaSpec {
	if in == nil {
		return nil
	}
	out := new(GrafanaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelperSpec) DeepCopyInto(out *HelperSpec) {
	*out = *in
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(v1.PullPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelperSpec.
func (in *HelperSpec) DeepCopy() *HelperSpec {
	if in == nil {
		return nil
	}
	out := new(HelperSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitializerSpec) DeepCopyInto(out *InitializerSpec) {
	*out = *in
	in.MonitorContainer.DeepCopyInto(&out.MonitorContainer)
	if in.Envs != nil {
		in, out := &in.Envs, &out.Envs
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitializerSpec.
func (in *InitializerSpec) DeepCopy() *InitializerSpec {
	if in == nil {
		return nil
	}
	out := new(InitializerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Log) DeepCopyInto(out *Log) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.DisableTimestamp != nil {
		in, out := &in.DisableTimestamp, &out.DisableTimestamp
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(FileLogConfig)
		**out = **in
	}
	if in.SlowThreshold != nil {
		in, out := &in.SlowThreshold, &out.SlowThreshold
		*out = new(uint64)
		**out = **in
	}
	if in.ExpensiveThreshold != nil {
		in, out := &in.ExpensiveThreshold, &out.ExpensiveThreshold
		*out = new(uint)
		**out = **in
	}
	if in.QueryLogMaxLen != nil {
		in, out := &in.QueryLogMaxLen, &out.QueryLogMaxLen
		*out = new(uint64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Log.
func (in *Log) DeepCopy() *Log {
	if in == nil {
		return nil
	}
	out := new(Log)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorContainer) DeepCopyInto(out *MonitorContainer) {
	*out = *in
	in.Resources.DeepCopyInto(&out.Resources)
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(v1.PullPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorContainer.
func (in *MonitorContainer) DeepCopy() *MonitorContainer {
	if in == nil {
		return nil
	}
	out := new(MonitorContainer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenTracing) DeepCopyInto(out *OpenTracing) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	in.Sampler.DeepCopyInto(&out.Sampler)
	in.Reporter.DeepCopyInto(&out.Reporter)
	if in.RPCMetrics != nil {
		in, out := &in.RPCMetrics, &out.RPCMetrics
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenTracing.
func (in *OpenTracing) DeepCopy() *OpenTracing {
	if in == nil {
		return nil
	}
	out := new(OpenTracing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenTracingReporter) DeepCopyInto(out *OpenTracingReporter) {
	*out = *in
	if in.QueueSize != nil {
		in, out := &in.QueueSize, &out.QueueSize
		*out = new(int)
		**out = **in
	}
	if in.LogSpans != nil {
		in, out := &in.LogSpans, &out.LogSpans
		*out = new(bool)
		**out = **in
	}
	if in.LocalAgentHostPort != nil {
		in, out := &in.LocalAgentHostPort, &out.LocalAgentHostPort
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenTracingReporter.
func (in *OpenTracingReporter) DeepCopy() *OpenTracingReporter {
	if in == nil {
		return nil
	}
	out := new(OpenTracingReporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenTracingSampler) DeepCopyInto(out *OpenTracingSampler) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Param != nil {
		in, out := &in.Param, &out.Param
		*out = new(float64)
		**out = **in
	}
	if in.SamplingServerURL != nil {
		in, out := &in.SamplingServerURL, &out.SamplingServerURL
		*out = new(string)
		**out = **in
	}
	if in.MaxOperations != nil {
		in, out := &in.MaxOperations, &out.MaxOperations
		*out = new(int)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenTracingSampler.
func (in *OpenTracingSampler) DeepCopy() *OpenTracingSampler {
	if in == nil {
		return nil
	}
	out := new(OpenTracingSampler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDConfig) DeepCopyInto(out *PDConfig) {
	*out = *in
	if in.ForceNewCluster != nil {
		in, out := &in.ForceNewCluster, &out.ForceNewCluster
		*out = new(bool)
		**out = **in
	}
	if in.EnableGRPCGateway != nil {
		in, out := &in.EnableGRPCGateway, &out.EnableGRPCGateway
		*out = new(bool)
		**out = **in
	}
	if in.LeaderLease != nil {
		in, out := &in.LeaderLease, &out.LeaderLease
		*out = new(int64)
		**out = **in
	}
	if in.Log != nil {
		in, out := &in.Log, &out.Log
		*out = new(PDLogConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(PDMetricConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(PDScheduleConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Replication != nil {
		in, out := &in.Replication, &out.Replication
		*out = new(PDReplicationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make(map[string]PDNamespaceConfig, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.PDServerCfg != nil {
		in, out := &in.PDServerCfg, &out.PDServerCfg
		*out = new(PDServerConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.PreVote != nil {
		in, out := &in.PreVote, &out.PreVote
		*out = new(bool)
		**out = **in
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = new(PDSecurityConfig)
		**out = **in
	}
	if in.LabelProperty != nil {
		in, out := &in.LabelProperty, &out.LabelProperty
		*out = new(PDLabelPropertyConfig)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]PDStoreLabels, len(*in))
			for key, val := range *in {
				var outVal []PDStoreLabel
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = make(PDStoreLabels, len(*in))
					copy(*out, *in)
				}
				(*out)[key] = outVal
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDConfig.
func (in *PDConfig) DeepCopy() *PDConfig {
	if in == nil {
		return nil
	}
	out := new(PDConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDFailureMember) DeepCopyInto(out *PDFailureMember) {
	*out = *in
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDFailureMember.
func (in *PDFailureMember) DeepCopy() *PDFailureMember {
	if in == nil {
		return nil
	}
	out := new(PDFailureMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in PDLabelPropertyConfig) DeepCopyInto(out *PDLabelPropertyConfig) {
	{
		in := &in
		*out = make(PDLabelPropertyConfig, len(*in))
		for key, val := range *in {
			var outVal []PDStoreLabel
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(PDStoreLabels, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDLabelPropertyConfig.
func (in PDLabelPropertyConfig) DeepCopy() PDLabelPropertyConfig {
	if in == nil {
		return nil
	}
	out := new(PDLabelPropertyConfig)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDLogConfig) DeepCopyInto(out *PDLogConfig) {
	*out = *in
	if in.DisableTimestamp != nil {
		in, out := &in.DisableTimestamp, &out.DisableTimestamp
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(FileLogConfig)
		**out = **in
	}
	if in.Development != nil {
		in, out := &in.Development, &out.Development
		*out = new(bool)
		**out = **in
	}
	if in.DisableCaller != nil {
		in, out := &in.DisableCaller, &out.DisableCaller
		*out = new(bool)
		**out = **in
	}
	if in.DisableStacktrace != nil {
		in, out := &in.DisableStacktrace, &out.DisableStacktrace
		*out = new(bool)
		**out = **in
	}
	if in.DisableErrorVerbose != nil {
		in, out := &in.DisableErrorVerbose, &out.DisableErrorVerbose
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDLogConfig.
func (in *PDLogConfig) DeepCopy() *PDLogConfig {
	if in == nil {
		return nil
	}
	out := new(PDLogConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDMember) DeepCopyInto(out *PDMember) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDMember.
func (in *PDMember) DeepCopy() *PDMember {
	if in == nil {
		return nil
	}
	out := new(PDMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDMetricConfig) DeepCopyInto(out *PDMetricConfig) {
	*out = *in
	if in.PushJob != nil {
		in, out := &in.PushJob, &out.PushJob
		*out = new(string)
		**out = **in
	}
	if in.PushAddress != nil {
		in, out := &in.PushAddress, &out.PushAddress
		*out = new(string)
		**out = **in
	}
	if in.PushInterval != nil {
		in, out := &in.PushInterval, &out.PushInterval
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDMetricConfig.
func (in *PDMetricConfig) DeepCopy() *PDMetricConfig {
	if in == nil {
		return nil
	}
	out := new(PDMetricConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDNamespaceConfig) DeepCopyInto(out *PDNamespaceConfig) {
	*out = *in
	if in.LeaderScheduleLimit != nil {
		in, out := &in.LeaderScheduleLimit, &out.LeaderScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.RegionScheduleLimit != nil {
		in, out := &in.RegionScheduleLimit, &out.RegionScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.ReplicaScheduleLimit != nil {
		in, out := &in.ReplicaScheduleLimit, &out.ReplicaScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.MergeScheduleLimit != nil {
		in, out := &in.MergeScheduleLimit, &out.MergeScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.HotRegionScheduleLimit != nil {
		in, out := &in.HotRegionScheduleLimit, &out.HotRegionScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.MaxReplicas != nil {
		in, out := &in.MaxReplicas, &out.MaxReplicas
		*out = new(uint64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDNamespaceConfig.
func (in *PDNamespaceConfig) DeepCopy() *PDNamespaceConfig {
	if in == nil {
		return nil
	}
	out := new(PDNamespaceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDReplicationConfig) DeepCopyInto(out *PDReplicationConfig) {
	*out = *in
	if in.MaxReplicas != nil {
		in, out := &in.MaxReplicas, &out.MaxReplicas
		*out = new(uint64)
		**out = **in
	}
	if in.LocationLabels != nil {
		in, out := &in.LocationLabels, &out.LocationLabels
		*out = make(StringSlice, len(*in))
		copy(*out, *in)
	}
	if in.StrictlyMatchLabel != nil {
		in, out := &in.StrictlyMatchLabel, &out.StrictlyMatchLabel
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDReplicationConfig.
func (in *PDReplicationConfig) DeepCopy() *PDReplicationConfig {
	if in == nil {
		return nil
	}
	out := new(PDReplicationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDScheduleConfig) DeepCopyInto(out *PDScheduleConfig) {
	*out = *in
	if in.MaxSnapshotCount != nil {
		in, out := &in.MaxSnapshotCount, &out.MaxSnapshotCount
		*out = new(uint64)
		**out = **in
	}
	if in.MaxPendingPeerCount != nil {
		in, out := &in.MaxPendingPeerCount, &out.MaxPendingPeerCount
		*out = new(uint64)
		**out = **in
	}
	if in.MaxMergeRegionSize != nil {
		in, out := &in.MaxMergeRegionSize, &out.MaxMergeRegionSize
		*out = new(uint64)
		**out = **in
	}
	if in.MaxMergeRegionKeys != nil {
		in, out := &in.MaxMergeRegionKeys, &out.MaxMergeRegionKeys
		*out = new(uint64)
		**out = **in
	}
	if in.LeaderScheduleLimit != nil {
		in, out := &in.LeaderScheduleLimit, &out.LeaderScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.RegionScheduleLimit != nil {
		in, out := &in.RegionScheduleLimit, &out.RegionScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.ReplicaScheduleLimit != nil {
		in, out := &in.ReplicaScheduleLimit, &out.ReplicaScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.MergeScheduleLimit != nil {
		in, out := &in.MergeScheduleLimit, &out.MergeScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.HotRegionScheduleLimit != nil {
		in, out := &in.HotRegionScheduleLimit, &out.HotRegionScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.HotRegionCacheHitsThreshold != nil {
		in, out := &in.HotRegionCacheHitsThreshold, &out.HotRegionCacheHitsThreshold
		*out = new(uint64)
		**out = **in
	}
	if in.TolerantSizeRatio != nil {
		in, out := &in.TolerantSizeRatio, &out.TolerantSizeRatio
		*out = new(float64)
		**out = **in
	}
	if in.LowSpaceRatio != nil {
		in, out := &in.LowSpaceRatio, &out.LowSpaceRatio
		*out = new(float64)
		**out = **in
	}
	if in.HighSpaceRatio != nil {
		in, out := &in.HighSpaceRatio, &out.HighSpaceRatio
		*out = new(float64)
		**out = **in
	}
	if in.DisableLearner != nil {
		in, out := &in.DisableLearner, &out.DisableLearner
		*out = new(bool)
		**out = **in
	}
	if in.DisableRemoveDownReplica != nil {
		in, out := &in.DisableRemoveDownReplica, &out.DisableRemoveDownReplica
		*out = new(bool)
		**out = **in
	}
	if in.DisableReplaceOfflineReplica != nil {
		in, out := &in.DisableReplaceOfflineReplica, &out.DisableReplaceOfflineReplica
		*out = new(bool)
		**out = **in
	}
	if in.DisableMakeUpReplica != nil {
		in, out := &in.DisableMakeUpReplica, &out.DisableMakeUpReplica
		*out = new(bool)
		**out = **in
	}
	if in.DisableRemoveExtraReplica != nil {
		in, out := &in.DisableRemoveExtraReplica, &out.DisableRemoveExtraReplica
		*out = new(bool)
		**out = **in
	}
	if in.DisableLocationReplacement != nil {
		in, out := &in.DisableLocationReplacement, &out.DisableLocationReplacement
		*out = new(bool)
		**out = **in
	}
	if in.DisableNamespaceRelocation != nil {
		in, out := &in.DisableNamespaceRelocation, &out.DisableNamespaceRelocation
		*out = new(bool)
		**out = **in
	}
	if in.Schedulers != nil {
		in, out := &in.Schedulers, &out.Schedulers
		*out = new(PDSchedulerConfigs)
		if **in != nil {
			in, out := *in, *out
			*out = make([]PDSchedulerConfig, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDScheduleConfig.
func (in *PDScheduleConfig) DeepCopy() *PDScheduleConfig {
	if in == nil {
		return nil
	}
	out := new(PDScheduleConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDSchedulerConfig) DeepCopyInto(out *PDSchedulerConfig) {
	*out = *in
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Disable != nil {
		in, out := &in.Disable, &out.Disable
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDSchedulerConfig.
func (in *PDSchedulerConfig) DeepCopy() *PDSchedulerConfig {
	if in == nil {
		return nil
	}
	out := new(PDSchedulerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in PDSchedulerConfigs) DeepCopyInto(out *PDSchedulerConfigs) {
	{
		in := &in
		*out = make(PDSchedulerConfigs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDSchedulerConfigs.
func (in PDSchedulerConfigs) DeepCopy() PDSchedulerConfigs {
	if in == nil {
		return nil
	}
	out := new(PDSchedulerConfigs)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDSecurityConfig) DeepCopyInto(out *PDSecurityConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDSecurityConfig.
func (in *PDSecurityConfig) DeepCopy() *PDSecurityConfig {
	if in == nil {
		return nil
	}
	out := new(PDSecurityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDServerConfig) DeepCopyInto(out *PDServerConfig) {
	*out = *in
	if in.UseRegionStorage != nil {
		in, out := &in.UseRegionStorage, &out.UseRegionStorage
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDServerConfig.
func (in *PDServerConfig) DeepCopy() *PDServerConfig {
	if in == nil {
		return nil
	}
	out := new(PDServerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDSpec) DeepCopyInto(out *PDSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(ServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(PDConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDSpec.
func (in *PDSpec) DeepCopy() *PDSpec {
	if in == nil {
		return nil
	}
	out := new(PDSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDStatus) DeepCopyInto(out *PDStatus) {
	*out = *in
	if in.StatefulSet != nil {
		in, out := &in.StatefulSet, &out.StatefulSet
		*out = new(appsv1.StatefulSetStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make(map[string]PDMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	in.Leader.DeepCopyInto(&out.Leader)
	if in.FailureMembers != nil {
		in, out := &in.FailureMembers, &out.FailureMembers
		*out = make(map[string]PDFailureMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDStatus.
func (in *PDStatus) DeepCopy() *PDStatus {
	if in == nil {
		return nil
	}
	out := new(PDStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDStoreLabel) DeepCopyInto(out *PDStoreLabel) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDStoreLabel.
func (in *PDStoreLabel) DeepCopy() *PDStoreLabel {
	if in == nil {
		return nil
	}
	out := new(PDStoreLabel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in PDStoreLabels) DeepCopyInto(out *PDStoreLabels) {
	{
		in := &in
		*out = make(PDStoreLabels, len(*in))
		copy(*out, *in)
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDStoreLabels.
func (in PDStoreLabels) DeepCopy() PDStoreLabels {
	if in == nil {
		return nil
	}
	out := new(PDStoreLabels)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Performance) DeepCopyInto(out *Performance) {
	*out = *in
	if in.MaxProcs != nil {
		in, out := &in.MaxProcs, &out.MaxProcs
		*out = new(uint)
		**out = **in
	}
	if in.MaxMemory != nil {
		in, out := &in.MaxMemory, &out.MaxMemory
		*out = new(uint64)
		**out = **in
	}
	if in.TCPKeepAlive != nil {
		in, out := &in.TCPKeepAlive, &out.TCPKeepAlive
		*out = new(bool)
		**out = **in
	}
	if in.CrossJoin != nil {
		in, out := &in.CrossJoin, &out.CrossJoin
		*out = new(bool)
		**out = **in
	}
	if in.StatsLease != nil {
		in, out := &in.StatsLease, &out.StatsLease
		*out = new(string)
		**out = **in
	}
	if in.RunAutoAnalyze != nil {
		in, out := &in.RunAutoAnalyze, &out.RunAutoAnalyze
		*out = new(bool)
		**out = **in
	}
	if in.StmtCountLimit != nil {
		in, out := &in.StmtCountLimit, &out.StmtCountLimit
		*out = new(uint)
		**out = **in
	}
	if in.FeedbackProbability != nil {
		in, out := &in.FeedbackProbability, &out.FeedbackProbability
		*out = new(float64)
		**out = **in
	}
	if in.QueryFeedbackLimit != nil {
		in, out := &in.QueryFeedbackLimit, &out.QueryFeedbackLimit
		*out = new(uint)
		**out = **in
	}
	if in.PseudoEstimateRatio != nil {
		in, out := &in.PseudoEstimateRatio, &out.PseudoEstimateRatio
		*out = new(float64)
		**out = **in
	}
	if in.ForcePriority != nil {
		in, out := &in.ForcePriority, &out.ForcePriority
		*out = new(string)
		**out = **in
	}
	if in.BindInfoLease != nil {
		in, out := &in.BindInfoLease, &out.BindInfoLease
		*out = new(string)
		**out = **in
	}
	if in.TxnEntryCountLimit != nil {
		in, out := &in.TxnEntryCountLimit, &out.TxnEntryCountLimit
		*out = new(uint64)
		**out = **in
	}
	if in.TxnTotalSizeLimit != nil {
		in, out := &in.TxnTotalSizeLimit, &out.TxnTotalSizeLimit
		*out = new(uint64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Performance.
func (in *Performance) DeepCopy() *Performance {
	if in == nil {
		return nil
	}
	out := new(Performance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PessimisticTxn) DeepCopyInto(out *PessimisticTxn) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.MaxRetryCount != nil {
		in, out := &in.MaxRetryCount, &out.MaxRetryCount
		*out = new(uint)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PessimisticTxn.
func (in *PessimisticTxn) DeepCopy() *PessimisticTxn {
	if in == nil {
		return nil
	}
	out := new(PessimisticTxn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanCache) DeepCopyInto(out *PlanCache) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(uint)
		**out = **in
	}
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = new(uint)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanCache.
func (in *PlanCache) DeepCopy() *PlanCache {
	if in == nil {
		return nil
	}
	out := new(PlanCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Plugin) DeepCopyInto(out *Plugin) {
	*out = *in
	if in.Dir != nil {
		in, out := &in.Dir, &out.Dir
		*out = new(string)
		**out = **in
	}
	if in.Load != nil {
		in, out := &in.Load, &out.Load
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Plugin.
func (in *Plugin) DeepCopy() *Plugin {
	if in == nil {
		return nil
	}
	out := new(Plugin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreparedPlanCache) DeepCopyInto(out *PreparedPlanCache) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(uint)
		**out = **in
	}
	if in.MemoryGuardRatio != nil {
		in, out := &in.MemoryGuardRatio, &out.MemoryGuardRatio
		*out = new(float64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreparedPlanCache.
func (in *PreparedPlanCache) DeepCopy() *PreparedPlanCache {
	if in == nil {
		return nil
	}
	out := new(PreparedPlanCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusSpec) DeepCopyInto(out *PrometheusSpec) {
	*out = *in
	in.MonitorContainer.DeepCopyInto(&out.MonitorContainer)
	in.Service.DeepCopyInto(&out.Service)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusSpec.
func (in *PrometheusSpec) DeepCopy() *PrometheusSpec {
	if in == nil {
		return nil
	}
	out := new(PrometheusSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyProtocol) DeepCopyInto(out *ProxyProtocol) {
	*out = *in
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = new(string)
		**out = **in
	}
	if in.HeaderTimeout != nil {
		in, out := &in.HeaderTimeout, &out.HeaderTimeout
		*out = new(uint)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyProtocol.
func (in *ProxyProtocol) DeepCopy() *ProxyProtocol {
	if in == nil {
		return nil
	}
	out := new(ProxyProtocol)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PumpSpec) DeepCopyInto(out *PumpSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	in.GenericConfig.DeepCopyInto(&out.GenericConfig)
	if in.SetTimeZone != nil {
		in, out := &in.SetTimeZone, &out.SetTimeZone
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PumpSpec.
func (in *PumpSpec) DeepCopy() *PumpSpec {
	if in == nil {
		return nil
	}
	out := new(PumpSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PumpStatus) DeepCopyInto(out *PumpStatus) {
	*out = *in
	if in.StatefulSet != nil {
		in, out := &in.StatefulSet, &out.StatefulSet
		*out = new(appsv1.StatefulSetStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PumpStatus.
func (in *PumpStatus) DeepCopy() *PumpStatus {
	if in == nil {
		return nil
	}
	out := new(PumpStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReloaderSpec) DeepCopyInto(out *ReloaderSpec) {
	*out = *in
	in.MonitorContainer.DeepCopyInto(&out.MonitorContainer)
	in.Service.DeepCopyInto(&out.Service)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReloaderSpec.
func (in *ReloaderSpec) DeepCopy() *ReloaderSpec {
	if in == nil {
		return nil
	}
	out := new(ReloaderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Restore) DeepCopyInto(out *Restore) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Restore.
func (in *Restore) DeepCopy() *Restore {
	if in == nil {
		return nil
	}
	out := new(Restore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Restore) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreCondition) DeepCopyInto(out *RestoreCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreCondition.
func (in *RestoreCondition) DeepCopy() *RestoreCondition {
	if in == nil {
		return nil
	}
	out := new(RestoreCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreList) DeepCopyInto(out *RestoreList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Restore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreList.
func (in *RestoreList) DeepCopy() *RestoreList {
	if in == nil {
		return nil
	}
	out := new(RestoreList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RestoreList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreSpec) DeepCopyInto(out *RestoreSpec) {
	*out = *in
	out.To = in.To
	in.StorageProvider.DeepCopyInto(&out.StorageProvider)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreSpec.
func (in *RestoreSpec) DeepCopy() *RestoreSpec {
	if in == nil {
		return nil
	}
	out := new(RestoreSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreStatus) DeepCopyInto(out *RestoreStatus) {
	*out = *in
	in.TimeStarted.DeepCopyInto(&out.TimeStarted)
	in.TimeCompleted.DeepCopyInto(&out.TimeCompleted)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]RestoreCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreStatus.
func (in *RestoreStatus) DeepCopy() *RestoreStatus {
	if in == nil {
		return nil
	}
	out := new(RestoreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3StorageProvider) DeepCopyInto(out *S3StorageProvider) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3StorageProvider.
func (in *S3StorageProvider) DeepCopy() *S3StorageProvider {
	if in == nil {
		return nil
	}
	out := new(S3StorageProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security) DeepCopyInto(out *Security) {
	*out = *in
	if in.SkipGrantTable != nil {
		in, out := &in.SkipGrantTable, &out.SkipGrantTable
		*out = new(bool)
		**out = **in
	}
	if in.SSLCA != nil {
		in, out := &in.SSLCA, &out.SSLCA
		*out = new(string)
		**out = **in
	}
	if in.SSLCert != nil {
		in, out := &in.SSLCert, &out.SSLCert
		*out = new(string)
		**out = **in
	}
	if in.SSLKey != nil {
		in, out := &in.SSLKey, &out.SSLKey
		*out = new(string)
		**out = **in
	}
	if in.ClusterSSLCA != nil {
		in, out := &in.ClusterSSLCA, &out.ClusterSSLCA
		*out = new(string)
		**out = **in
	}
	if in.ClusterSSLCert != nil {
		in, out := &in.ClusterSSLCert, &out.ClusterSSLCert
		*out = new(string)
		**out = **in
	}
	if in.ClusterSSLKey != nil {
		in, out := &in.ClusterSSLKey, &out.ClusterSSLKey
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security.
func (in *Security) DeepCopy() *Security {
	if in == nil {
		return nil
	}
	out := new(Security)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Service) DeepCopyInto(out *Service) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Service.
func (in *Service) DeepCopy() *Service {
	if in == nil {
		return nil
	}
	out := new(Service)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSpec) DeepCopyInto(out *ServiceSpec) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSpec.
func (in *ServiceSpec) DeepCopy() *ServiceSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Status) DeepCopyInto(out *Status) {
	*out = *in
	if in.ReportStatus != nil {
		in, out := &in.ReportStatus, &out.ReportStatus
		*out = new(bool)
		**out = **in
	}
	if in.MetricsAddr != nil {
		in, out := &in.MetricsAddr, &out.MetricsAddr
		*out = new(string)
		**out = **in
	}
	if in.MetricsInterval != nil {
		in, out := &in.MetricsInterval, &out.MetricsInterval
		*out = new(uint)
		**out = **in
	}
	if in.RecordQPSbyDB != nil {
		in, out := &in.RecordQPSbyDB, &out.RecordQPSbyDB
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Status.
func (in *Status) DeepCopy() *Status {
	if in == nil {
		return nil
	}
	out := new(Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StmtSummary) DeepCopyInto(out *StmtSummary) {
	*out = *in
	if in.MaxStmtCount != nil {
		in, out := &in.MaxStmtCount, &out.MaxStmtCount
		*out = new(uint)
		**out = **in
	}
	if in.MaxSQLLength != nil {
		in, out := &in.MaxSQLLength, &out.MaxSQLLength
		*out = new(uint)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StmtSummary.
func (in *StmtSummary) DeepCopy() *StmtSummary {
	if in == nil {
		return nil
	}
	out := new(StmtSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageProvider) DeepCopyInto(out *StorageProvider) {
	*out = *in
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = new(S3StorageProvider)
		**out = **in
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = new(GcsStorageProvider)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageProvider.
func (in *StorageProvider) DeepCopy() *StorageProvider {
	if in == nil {
		return nil
	}
	out := new(StorageProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in StringSlice) DeepCopyInto(out *StringSlice) {
	{
		in := &in
		*out = make(StringSlice, len(*in))
		copy(*out, *in)
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StringSlice.
func (in StringSlice) DeepCopy() StringSlice {
	if in == nil {
		return nil
	}
	out := new(StringSlice)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBAccessConfig) DeepCopyInto(out *TiDBAccessConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBAccessConfig.
func (in *TiDBAccessConfig) DeepCopy() *TiDBAccessConfig {
	if in == nil {
		return nil
	}
	out := new(TiDBAccessConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBConfig) DeepCopyInto(out *TiDBConfig) {
	*out = *in
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = new(string)
		**out = **in
	}
	if in.Socket != nil {
		in, out := &in.Socket, &out.Socket
		*out = new(string)
		**out = **in
	}
	if in.Lease != nil {
		in, out := &in.Lease, &out.Lease
		*out = new(string)
		**out = **in
	}
	if in.RunDDL != nil {
		in, out := &in.RunDDL, &out.RunDDL
		*out = new(bool)
		**out = **in
	}
	if in.SplitTable != nil {
		in, out := &in.SplitTable, &out.SplitTable
		*out = new(bool)
		**out = **in
	}
	if in.TokenLimit != nil {
		in, out := &in.TokenLimit, &out.TokenLimit
		*out = new(uint)
		**out = **in
	}
	if in.OOMAction != nil {
		in, out := &in.OOMAction, &out.OOMAction
		*out = new(string)
		**out = **in
	}
	if in.MemQuotaQuery != nil {
		in, out := &in.MemQuotaQuery, &out.MemQuotaQuery
		*out = new(int64)
		**out = **in
	}
	if in.EnableStreaming != nil {
		in, out := &in.EnableStreaming, &out.EnableStreaming
		*out = new(bool)
		**out = **in
	}
	if in.EnableBatchDML != nil {
		in, out := &in.EnableBatchDML, &out.EnableBatchDML
		*out = new(bool)
		**out = **in
	}
	if in.TxnLocalLatches != nil {
		in, out := &in.TxnLocalLatches, &out.TxnLocalLatches
		*out = new(TxnLocalLatches)
		(*in).DeepCopyInto(*out)
	}
	if in.LowerCaseTableNames != nil {
		in, out := &in.LowerCaseTableNames, &out.LowerCaseTableNames
		*out = new(int)
		**out = **in
	}
	if in.Log != nil {
		in, out := &in.Log, &out.Log
		*out = new(Log)
		(*in).DeepCopyInto(*out)
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = new(Security)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Performance != nil {
		in, out := &in.Performance, &out.Performance
		*out = new(Performance)
		(*in).DeepCopyInto(*out)
	}
	if in.PreparedPlanCache != nil {
		in, out := &in.PreparedPlanCache, &out.PreparedPlanCache
		*out = new(PreparedPlanCache)
		(*in).DeepCopyInto(*out)
	}
	if in.OpenTracing != nil {
		in, out := &in.OpenTracing, &out.OpenTracing
		*out = new(OpenTracing)
		(*in).DeepCopyInto(*out)
	}
	if in.ProxyProtocol != nil {
		in, out := &in.ProxyProtocol, &out.ProxyProtocol
		*out = new(ProxyProtocol)
		(*in).DeepCopyInto(*out)
	}
	if in.TiKVClient != nil {
		in, out := &in.TiKVClient, &out.TiKVClient
		*out = new(TiKVClient)
		(*in).DeepCopyInto(*out)
	}
	if in.Binlog != nil {
		in, out := &in.Binlog, &out.Binlog
		*out = new(Binlog)
		(*in).DeepCopyInto(*out)
	}
	if in.CompatibleKillQuery != nil {
		in, out := &in.CompatibleKillQuery, &out.CompatibleKillQuery
		*out = new(bool)
		**out = **in
	}
	if in.Plugin != nil {
		in, out := &in.Plugin, &out.Plugin
		*out = new(Plugin)
		(*in).DeepCopyInto(*out)
	}
	if in.PessimisticTxn != nil {
		in, out := &in.PessimisticTxn, &out.PessimisticTxn
		*out = new(PessimisticTxn)
		(*in).DeepCopyInto(*out)
	}
	if in.CheckMb4ValueInUTF8 != nil {
		in, out := &in.CheckMb4ValueInUTF8, &out.CheckMb4ValueInUTF8
		*out = new(bool)
		**out = **in
	}
	if in.AlterPrimaryKey != nil {
		in, out := &in.AlterPrimaryKey, &out.AlterPrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.TreatOldVersionUTF8AsUTF8MB4 != nil {
		in, out := &in.TreatOldVersionUTF8AsUTF8MB4, &out.TreatOldVersionUTF8AsUTF8MB4
		*out = new(bool)
		**out = **in
	}
	if in.SplitRegionMaxNum != nil {
		in, out := &in.SplitRegionMaxNum, &out.SplitRegionMaxNum
		*out = new(uint64)
		**out = **in
	}
	if in.StmtSummary != nil {
		in, out := &in.StmtSummary, &out.StmtSummary
		*out = new(StmtSummary)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBConfig.
func (in *TiDBConfig) DeepCopy() *TiDBConfig {
	if in == nil {
		return nil
	}
	out := new(TiDBConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBFailureMember) DeepCopyInto(out *TiDBFailureMember) {
	*out = *in
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBFailureMember.
func (in *TiDBFailureMember) DeepCopy() *TiDBFailureMember {
	if in == nil {
		return nil
	}
	out := new(TiDBFailureMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBMember) DeepCopyInto(out *TiDBMember) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBMember.
func (in *TiDBMember) DeepCopy() *TiDBMember {
	if in == nil {
		return nil
	}
	out := new(TiDBMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBServiceSpec) DeepCopyInto(out *TiDBServiceSpec) {
	*out = *in
	in.ServiceSpec.DeepCopyInto(&out.ServiceSpec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBServiceSpec.
func (in *TiDBServiceSpec) DeepCopy() *TiDBServiceSpec {
	if in == nil {
		return nil
	}
	out := new(TiDBServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBSlowLogTailerSpec) DeepCopyInto(out *TiDBSlowLogTailerSpec) {
	*out = *in
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(v1.PullPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBSlowLogTailerSpec.
func (in *TiDBSlowLogTailerSpec) DeepCopy() *TiDBSlowLogTailerSpec {
	if in == nil {
		return nil
	}
	out := new(TiDBSlowLogTailerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBSpec) DeepCopyInto(out *TiDBSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(TiDBServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	in.SlowLogTailer.DeepCopyInto(&out.SlowLogTailer)
	if in.Plugins != nil {
		in, out := &in.Plugins, &out.Plugins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(TiDBConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBSpec.
func (in *TiDBSpec) DeepCopy() *TiDBSpec {
	if in == nil {
		return nil
	}
	out := new(TiDBSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBStatus) DeepCopyInto(out *TiDBStatus) {
	*out = *in
	if in.StatefulSet != nil {
		in, out := &in.StatefulSet, &out.StatefulSet
		*out = new(appsv1.StatefulSetStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make(map[string]TiDBMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.FailureMembers != nil {
		in, out := &in.FailureMembers, &out.FailureMembers
		*out = make(map[string]TiDBFailureMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBStatus.
func (in *TiDBStatus) DeepCopy() *TiDBStatus {
	if in == nil {
		return nil
	}
	out := new(TiDBStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVBlockCacheConfig) DeepCopyInto(out *TiKVBlockCacheConfig) {
	*out = *in
	if in.Shared != nil {
		in, out := &in.Shared, &out.Shared
		*out = new(bool)
		**out = **in
	}
	if in.NumShardBits != nil {
		in, out := &in.NumShardBits, &out.NumShardBits
		*out = new(int64)
		**out = **in
	}
	if in.StrictCapacityLimit != nil {
		in, out := &in.StrictCapacityLimit, &out.StrictCapacityLimit
		*out = new(bool)
		**out = **in
	}
	if in.HighPriPoolRatio != nil {
		in, out := &in.HighPriPoolRatio, &out.HighPriPoolRatio
		*out = new(float64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVBlockCacheConfig.
func (in *TiKVBlockCacheConfig) DeepCopy() *TiKVBlockCacheConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVBlockCacheConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVCfConfig) DeepCopyInto(out *TiKVCfConfig) {
	*out = *in
	if in.DisableBlockCache != nil {
		in, out := &in.DisableBlockCache, &out.DisableBlockCache
		*out = new(bool)
		**out = **in
	}
	if in.CacheIndexAndFilterBlocks != nil {
		in, out := &in.CacheIndexAndFilterBlocks, &out.CacheIndexAndFilterBlocks
		*out = new(bool)
		**out = **in
	}
	if in.PinL0FilterAndIndexBlocks != nil {
		in, out := &in.PinL0FilterAndIndexBlocks, &out.PinL0FilterAndIndexBlocks
		*out = new(bool)
		**out = **in
	}
	if in.UseBloomFilter != nil {
		in, out := &in.UseBloomFilter, &out.UseBloomFilter
		*out = new(bool)
		**out = **in
	}
	if in.OptimizeFiltersForHits != nil {
		in, out := &in.OptimizeFiltersForHits, &out.OptimizeFiltersForHits
		*out = new(bool)
		**out = **in
	}
	if in.WholeKeyFiltering != nil {
		in, out := &in.WholeKeyFiltering, &out.WholeKeyFiltering
		*out = new(bool)
		**out = **in
	}
	if in.BloomFilterBitsPerKey != nil {
		in, out := &in.BloomFilterBitsPerKey, &out.BloomFilterBitsPerKey
		*out = new(int64)
		**out = **in
	}
	if in.BlockBasedBloomFilter != nil {
		in, out := &in.BlockBasedBloomFilter, &out.BlockBasedBloomFilter
		*out = new(bool)
		**out = **in
	}
	if in.ReadAmpBytesPerBit != nil {
		in, out := &in.ReadAmpBytesPerBit, &out.ReadAmpBytesPerBit
		*out = new(int64)
		**out = **in
	}
	if in.CompressionPerLevel != nil {
		in, out := &in.CompressionPerLevel, &out.CompressionPerLevel
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MaxWriteBufferNumber != nil {
		in, out := &in.MaxWriteBufferNumber, &out.MaxWriteBufferNumber
		*out = new(int64)
		**out = **in
	}
	if in.MinWriteBufferNumberToMerge != nil {
		in, out := &in.MinWriteBufferNumberToMerge, &out.MinWriteBufferNumberToMerge
		*out = new(int64)
		**out = **in
	}
	if in.Level0FileNumCompactionTrigger != nil {
		in, out := &in.Level0FileNumCompactionTrigger, &out.Level0FileNumCompactionTrigger
		*out = new(int64)
		**out = **in
	}
	if in.Level0SlowdownWritesTrigger != nil {
		in, out := &in.Level0SlowdownWritesTrigger, &out.Level0SlowdownWritesTrigger
		*out = new(int64)
		**out = **in
	}
	if in.Level0StopWritesTrigger != nil {
		in, out := &in.Level0StopWritesTrigger, &out.Level0StopWritesTrigger
		*out = new(int64)
		**out = **in
	}
	if in.CompactionPri != nil {
		in, out := &in.CompactionPri, &out.CompactionPri
		*out = new(int64)
		**out = **in
	}
	if in.DynamicLevelBytes != nil {
		in, out := &in.DynamicLevelBytes, &out.DynamicLevelBytes
		*out = new(bool)
		**out = **in
	}
	if in.NumLevels != nil {
		in, out := &in.NumLevels, &out.NumLevels
		*out = new(int64)
		**out = **in
	}
	if in.MaxBytesForLevelMultiplier != nil {
		in, out := &in.MaxBytesForLevelMultiplier, &out.MaxBytesForLevelMultiplier
		*out = new(int64)
		**out = **in
	}
	if in.CompactionStyle != nil {
		in, out := &in.CompactionStyle, &out.CompactionStyle
		*out = new(int64)
		**out = **in
	}
	if in.DisableAutoCompactions != nil {
		in, out := &in.DisableAutoCompactions, &out.DisableAutoCompactions
		*out = new(bool)
		**out = **in
	}
	if in.ForceConsistencyChecks != nil {
		in, out := &in.ForceConsistencyChecks, &out.ForceConsistencyChecks
		*out = new(bool)
		**out = **in
	}
	if in.PropSizeIndexDistance != nil {
		in, out := &in.PropSizeIndexDistance, &out.PropSizeIndexDistance
		*out = new(int64)
		**out = **in
	}
	if in.PropKeysIndexDistance != nil {
		in, out := &in.PropKeysIndexDistance, &out.PropKeysIndexDistance
		*out = new(int64)
		**out = **in
	}
	if in.EnableDoublySkiplist != nil {
		in, out := &in.EnableDoublySkiplist, &out.EnableDoublySkiplist
		*out = new(bool)
		**out = **in
	}
	if in.Titan != nil {
		in, out := &in.Titan, &out.Titan
		*out = new(TiKVTitanCfConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVCfConfig.
func (in *TiKVCfConfig) DeepCopy() *TiKVCfConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVCfConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVClient) DeepCopyInto(out *TiKVClient) {
	*out = *in
	if in.GrpcConnectionCount != nil {
		in, out := &in.GrpcConnectionCount, &out.GrpcConnectionCount
		*out = new(uint)
		**out = **in
	}
	if in.GrpcKeepAliveTime != nil {
		in, out := &in.GrpcKeepAliveTime, &out.GrpcKeepAliveTime
		*out = new(uint)
		**out = **in
	}
	if in.GrpcKeepAliveTimeout != nil {
		in, out := &in.GrpcKeepAliveTimeout, &out.GrpcKeepAliveTimeout
		*out = new(uint)
		**out = **in
	}
	if in.CommitTimeout != nil {
		in, out := &in.CommitTimeout, &out.CommitTimeout
		*out = new(string)
		**out = **in
	}
	if in.MaxTxnTimeUse != nil {
		in, out := &in.MaxTxnTimeUse, &out.MaxTxnTimeUse
		*out = new(uint)
		**out = **in
	}
	if in.MaxBatchSize != nil {
		in, out := &in.MaxBatchSize, &out.MaxBatchSize
		*out = new(uint)
		**out = **in
	}
	if in.OverloadThreshold != nil {
		in, out := &in.OverloadThreshold, &out.OverloadThreshold
		*out = new(uint)
		**out = **in
	}
	if in.BatchWaitSize != nil {
		in, out := &in.BatchWaitSize, &out.BatchWaitSize
		*out = new(uint)
		**out = **in
	}
	if in.RegionCacheTTL != nil {
		in, out := &in.RegionCacheTTL, &out.RegionCacheTTL
		*out = new(uint)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVClient.
func (in *TiKVClient) DeepCopy() *TiKVClient {
	if in == nil {
		return nil
	}
	out := new(TiKVClient)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVConfig) DeepCopyInto(out *TiKVConfig) {
	*out = *in
	if in.PanicWhenUnexpectedKeyOrData != nil {
		in, out := &in.PanicWhenUnexpectedKeyOrData, &out.PanicWhenUnexpectedKeyOrData
		*out = new(bool)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(TiKVServerConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(TiKVStorageConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Raftstore != nil {
		in, out := &in.Raftstore, &out.Raftstore
		*out = new(TiKVRaftstoreConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Rocksdb != nil {
		in, out := &in.Rocksdb, &out.Rocksdb
		*out = new(TiKVDbConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Coprocessor != nil {
		in, out := &in.Coprocessor, &out.Coprocessor
		*out = new(TiKVCoprocessorConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadPool != nil {
		in, out := &in.ReadPool, &out.ReadPool
		*out = new(TiKVReadPoolConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.RaftDB != nil {
		in, out := &in.RaftDB, &out.RaftDB
		*out = new(TiKVRaftDBConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Import != nil {
		in, out := &in.Import, &out.Import
		*out = new(TiKVImportConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.GC != nil {
		in, out := &in.GC, &out.GC
		*out = new(TiKVGCConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.PD != nil {
		in, out := &in.PD, &out.PD
		*out = new(TiKVPDConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = new(TiKVSecurityConfig)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVConfig.
func (in *TiKVConfig) DeepCopy() *TiKVConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVCoprocessorConfig) DeepCopyInto(out *TiKVCoprocessorConfig) {
	*out = *in
	if in.SplitRegionOnTable != nil {
		in, out := &in.SplitRegionOnTable, &out.SplitRegionOnTable
		*out = new(bool)
		**out = **in
	}
	if in.BatchSplitLimit != nil {
		in, out := &in.BatchSplitLimit, &out.BatchSplitLimit
		*out = new(int64)
		**out = **in
	}
	if in.RegionMaxKeys != nil {
		in, out := &in.RegionMaxKeys, &out.RegionMaxKeys
		*out = new(int64)
		**out = **in
	}
	if in.RegionSplitKeys != nil {
		in, out := &in.RegionSplitKeys, &out.RegionSplitKeys
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVCoprocessorConfig.
func (in *TiKVCoprocessorConfig) DeepCopy() *TiKVCoprocessorConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVCoprocessorConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVCoprocessorReadPoolConfig) DeepCopyInto(out *TiKVCoprocessorReadPoolConfig) {
	*out = *in
	if in.HighConcurrency != nil {
		in, out := &in.HighConcurrency, &out.HighConcurrency
		*out = new(int64)
		**out = **in
	}
	if in.NormalConcurrency != nil {
		in, out := &in.NormalConcurrency, &out.NormalConcurrency
		*out = new(int64)
		**out = **in
	}
	if in.LowConcurrency != nil {
		in, out := &in.LowConcurrency, &out.LowConcurrency
		*out = new(int64)
		**out = **in
	}
	if in.MaxTasksPerWorkerHigh != nil {
		in, out := &in.MaxTasksPerWorkerHigh, &out.MaxTasksPerWorkerHigh
		*out = new(int64)
		**out = **in
	}
	if in.MaxTasksPerWorkerNormal != nil {
		in, out := &in.MaxTasksPerWorkerNormal, &out.MaxTasksPerWorkerNormal
		*out = new(int64)
		**out = **in
	}
	if in.MaxTasksPerWorkerLow != nil {
		in, out := &in.MaxTasksPerWorkerLow, &out.MaxTasksPerWorkerLow
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVCoprocessorReadPoolConfig.
func (in *TiKVCoprocessorReadPoolConfig) DeepCopy() *TiKVCoprocessorReadPoolConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVCoprocessorReadPoolConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVDbConfig) DeepCopyInto(out *TiKVDbConfig) {
	*out = *in
	if in.WalRecoveryMode != nil {
		in, out := &in.WalRecoveryMode, &out.WalRecoveryMode
		*out = new(int64)
		**out = **in
	}
	if in.WalTTLSeconds != nil {
		in, out := &in.WalTTLSeconds, &out.WalTTLSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaxBackgroundJobs != nil {
		in, out := &in.MaxBackgroundJobs, &out.MaxBackgroundJobs
		*out = new(int64)
		**out = **in
	}
	if in.CreateIfMissing != nil {
		in, out := &in.CreateIfMissing, &out.CreateIfMissing
		*out = new(bool)
		**out = **in
	}
	if in.MaxOpenFiles != nil {
		in, out := &in.MaxOpenFiles, &out.MaxOpenFiles
		*out = new(int64)
		**out = **in
	}
	if in.EnableStatistics != nil {
		in, out := &in.EnableStatistics, &out.EnableStatistics
		*out = new(bool)
		**out = **in
	}
	if in.InfoLogKeepLogFileNum != nil {
		in, out := &in.InfoLogKeepLogFileNum, &out.InfoLogKeepLogFileNum
		*out = new(int64)
		**out = **in
	}
	if in.RateLimiterMode != nil {
		in, out := &in.RateLimiterMode, &out.RateLimiterMode
		*out = new(int64)
		**out = **in
	}
	if in.AutoTuned != nil {
		in, out := &in.AutoTuned, &out.AutoTuned
		*out = new(bool)
		**out = **in
	}
	if in.MaxSubCompactions != nil {
		in, out := &in.MaxSubCompactions, &out.MaxSubCompactions
		*out = new(int64)
		**out = **in
	}
	if in.UseDirectIoForFlushAndCompaction != nil {
		in, out := &in.UseDirectIoForFlushAndCompaction, &out.UseDirectIoForFlushAndCompaction
		*out = new(bool)
		**out = **in
	}
	if in.EnablePipelinedWrite != nil {
		in, out := &in.EnablePipelinedWrite, &out.EnablePipelinedWrite
		*out = new(bool)
		**out = **in
	}
	if in.Defaultcf != nil {
		in, out := &in.Defaultcf, &out.Defaultcf
		*out = new(TiKVCfConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Writecf != nil {
		in, out := &in.Writecf, &out.Writecf
		*out = new(TiKVCfConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Lockcf != nil {
		in, out := &in.Lockcf, &out.Lockcf
		*out = new(TiKVCfConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Raftcf != nil {
		in, out := &in.Raftcf, &out.Raftcf
		*out = new(TiKVCfConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Titan != nil {
		in, out := &in.Titan, &out.Titan
		*out = new(TiKVTitanDBConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVDbConfig.
func (in *TiKVDbConfig) DeepCopy() *TiKVDbConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVDbConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVFailureStore) DeepCopyInto(out *TiKVFailureStore) {
	*out = *in
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVFailureStore.
func (in *TiKVFailureStore) DeepCopy() *TiKVFailureStore {
	if in == nil {
		return nil
	}
	out := new(TiKVFailureStore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVGCConfig) DeepCopyInto(out *TiKVGCConfig) {
	*out = *in
	if in.BatchKeys != nil {
		in, out := &in.BatchKeys, &out.BatchKeys
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVGCConfig.
func (in *TiKVGCConfig) DeepCopy() *TiKVGCConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVGCConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVImportConfig) DeepCopyInto(out *TiKVImportConfig) {
	*out = *in
	if in.NumThreads != nil {
		in, out := &in.NumThreads, &out.NumThreads
		*out = new(int64)
		**out = **in
	}
	if in.NumImportJobs != nil {
		in, out := &in.NumImportJobs, &out.NumImportJobs
		*out = new(int64)
		**out = **in
	}
	if in.NumImportSstJobs != nil {
		in, out := &in.NumImportSstJobs, &out.NumImportSstJobs
		*out = new(int64)
		**out = **in
	}
	if in.StreamChannelWindow != nil {
		in, out := &in.StreamChannelWindow, &out.StreamChannelWindow
		*out = new(int64)
		**out = **in
	}
	if in.MaxOpenEngines != nil {
		in, out := &in.MaxOpenEngines, &out.MaxOpenEngines
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVImportConfig.
func (in *TiKVImportConfig) DeepCopy() *TiKVImportConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVImportConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVPDConfig) DeepCopyInto(out *TiKVPDConfig) {
	*out = *in
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RetryMaxCount != nil {
		in, out := &in.RetryMaxCount, &out.RetryMaxCount
		*out = new(int64)
		**out = **in
	}
	if in.RetryLogEvery != nil {
		in, out := &in.RetryLogEvery, &out.RetryLogEvery
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVPDConfig.
func (in *TiKVPDConfig) DeepCopy() *TiKVPDConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVPDConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVRaftDBConfig) DeepCopyInto(out *TiKVRaftDBConfig) {
	*out = *in
	if in.WalTtlSeconds != nil {
		in, out := &in.WalTtlSeconds, &out.WalTtlSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaxBackgroundJobs != nil {
		in, out := &in.MaxBackgroundJobs, &out.MaxBackgroundJobs
		*out = new(int64)
		**out = **in
	}
	if in.CreateIfMissing != nil {
		in, out := &in.CreateIfMissing, &out.CreateIfMissing
		*out = new(bool)
		**out = **in
	}
	if in.MaxOpenFiles != nil {
		in, out := &in.MaxOpenFiles, &out.MaxOpenFiles
		*out = new(int64)
		**out = **in
	}
	if in.EnableStatistics != nil {
		in, out := &in.EnableStatistics, &out.EnableStatistics
		*out = new(bool)
		**out = **in
	}
	if in.InfoLogKeepLogFileNum != nil {
		in, out := &in.InfoLogKeepLogFileNum, &out.InfoLogKeepLogFileNum
		*out = new(int64)
		**out = **in
	}
	if in.MaxSubCompactions != nil {
		in, out := &in.MaxSubCompactions, &out.MaxSubCompactions
		*out = new(int64)
		**out = **in
	}
	if in.UseDirectIoForFlushAndCompaction != nil {
		in, out := &in.UseDirectIoForFlushAndCompaction, &out.UseDirectIoForFlushAndCompaction
		*out = new(bool)
		**out = **in
	}
	if in.EnablePipelinedWrite != nil {
		in, out := &in.EnablePipelinedWrite, &out.EnablePipelinedWrite
		*out = new(bool)
		**out = **in
	}
	if in.AllowConcurrentMemtableWrite != nil {
		in, out := &in.AllowConcurrentMemtableWrite, &out.AllowConcurrentMemtableWrite
		*out = new(bool)
		**out = **in
	}
	if in.Defaultcf != nil {
		in, out := &in.Defaultcf, &out.Defaultcf
		*out = new(TiKVCfConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVRaftDBConfig.
func (in *TiKVRaftDBConfig) DeepCopy() *TiKVRaftDBConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVRaftDBConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVRaftstoreConfig) DeepCopyInto(out *TiKVRaftstoreConfig) {
	*out = *in
	if in.SyncLog != nil {
		in, out := &in.SyncLog, &out.SyncLog
		*out = new(bool)
		**out = **in
	}
	if in.Prevote != nil {
		in, out := &in.Prevote, &out.Prevote
		*out = new(bool)
		**out = **in
	}
	if in.RaftHeartbeatTicks != nil {
		in, out := &in.RaftHeartbeatTicks, &out.RaftHeartbeatTicks
		*out = new(int64)
		**out = **in
	}
	if in.RaftElectionTimeoutTicks != nil {
		in, out := &in.RaftElectionTimeoutTicks, &out.RaftElectionTimeoutTicks
		*out = new(int64)
		**out = **in
	}
	if in.RaftLogGCThreshold != nil {
		in, out := &in.RaftLogGCThreshold, &out.RaftLogGCThreshold
		*out = new(int64)
		**out = **in
	}
	if in.RaftLogGCCountLimit != nil {
		in, out := &in.RaftLogGCCountLimit, &out.RaftLogGCCountLimit
		*out = new(int64)
		**out = **in
	}
	if in.RegionCompactCheckStep != nil {
		in, out := &in.RegionCompactCheckStep, &out.RegionCompactCheckStep
		*out = new(int64)
		**out = **in
	}
	if in.RegionCompactMinTombstones != nil {
		in, out := &in.RegionCompactMinTombstones, &out.RegionCompactMinTombstones
		*out = new(int64)
		**out = **in
	}
	if in.RegionCompactTombstonesPercent != nil {
		in, out := &in.RegionCompactTombstonesPercent, &out.RegionCompactTombstonesPercent
		*out = new(int64)
		**out = **in
	}
	if in.NotifyCapacity != nil {
		in, out := &in.NotifyCapacity, &out.NotifyCapacity
		*out = new(int64)
		**out = **in
	}
	if in.MessagesPerTick != nil {
		in, out := &in.MessagesPerTick, &out.MessagesPerTick
		*out = new(int64)
		**out = **in
	}
	if in.LeaderTransferMaxLogLag != nil {
		in, out := &in.LeaderTransferMaxLogLag, &out.LeaderTransferMaxLogLag
		*out = new(int64)
		**out = **in
	}
	if in.RightDeriveWhenSplit != nil {
		in, out := &in.RightDeriveWhenSplit, &out.RightDeriveWhenSplit
		*out = new(bool)
		**out = **in
	}
	if in.AllowRemoveLeader != nil {
		in, out := &in.AllowRemoveLeader, &out.AllowRemoveLeader
		*out = new(bool)
		**out = **in
	}
	if in.MergeMaxLogGap != nil {
		in, out := &in.MergeMaxLogGap, &out.MergeMaxLogGap
		*out = new(int64)
		**out = **in
	}
	if in.UseDeleteRange != nil {
		in, out := &in.UseDeleteRange, &out.UseDeleteRange
		*out = new(bool)
		**out = **in
	}
	if in.ApplyMaxBatchSize != nil {
		in, out := &in.ApplyMaxBatchSize, &out.ApplyMaxBatchSize
		*out = new(int64)
		**out = **in
	}
	if in.ApplyPoolSize != nil {
		in, out := &in.ApplyPoolSize, &out.ApplyPoolSize
		*out = new(int64)
		**out = **in
	}
	if in.StoreMaxBatchSize != nil {
		in, out := &in.StoreMaxBatchSize, &out.StoreMaxBatchSize
		*out = new(int64)
		**out = **in
	}
	if in.StorePoolSize != nil {
		in, out := &in.StorePoolSize, &out.StorePoolSize
		*out = new(int64)
		**out = **in
	}
	if in.HibernateRegions != nil {
		in, out := &in.HibernateRegions, &out.HibernateRegions
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVRaftstoreConfig.
func (in *TiKVRaftstoreConfig) DeepCopy() *TiKVRaftstoreConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVRaftstoreConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVReadPoolConfig) DeepCopyInto(out *TiKVReadPoolConfig) {
	*out = *in
	if in.Coprocessor != nil {
		in, out := &in.Coprocessor, &out.Coprocessor
		*out = new(TiKVCoprocessorReadPoolConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(TiKVStorageReadPoolConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVReadPoolConfig.
func (in *TiKVReadPoolConfig) DeepCopy() *TiKVReadPoolConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVReadPoolConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVSecurityConfig) DeepCopyInto(out *TiKVSecurityConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVSecurityConfig.
func (in *TiKVSecurityConfig) DeepCopy() *TiKVSecurityConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVSecurityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVServerConfig) DeepCopyInto(out *TiKVServerConfig) {
	*out = *in
	if in.GrpcConcurrency != nil {
		in, out := &in.GrpcConcurrency, &out.GrpcConcurrency
		*out = new(uint)
		**out = **in
	}
	if in.GrpcConcurrentStream != nil {
		in, out := &in.GrpcConcurrentStream, &out.GrpcConcurrentStream
		*out = new(uint)
		**out = **in
	}
	if in.GrpcMemoryQuota != nil {
		in, out := &in.GrpcMemoryQuota, &out.GrpcMemoryQuota
		*out = new(string)
		**out = **in
	}
	if in.GrpcRaftConnNum != nil {
		in, out := &in.GrpcRaftConnNum, &out.GrpcRaftConnNum
		*out = new(uint)
		**out = **in
	}
	if in.ConcurrentSendSnapLimit != nil {
		in, out := &in.ConcurrentSendSnapLimit, &out.ConcurrentSendSnapLimit
		*out = new(uint)
		**out = **in
	}
	if in.ConcurrentRecvSnapLimit != nil {
		in, out := &in.ConcurrentRecvSnapLimit, &out.ConcurrentRecvSnapLimit
		*out = new(uint)
		**out = **in
	}
	if in.EndPointRecursionLimit != nil {
		in, out := &in.EndPointRecursionLimit, &out.EndPointRecursionLimit
		*out = new(uint)
		**out = **in
	}
	if in.EndPointStreamChannelSize != nil {
		in, out := &in.EndPointStreamChannelSize, &out.EndPointStreamChannelSize
		*out = new(uint)
		**out = **in
	}
	if in.EndPointBatchRowLimit != nil {
		in, out := &in.EndPointBatchRowLimit, &out.EndPointBatchRowLimit
		*out = new(uint)
		**out = **in
	}
	if in.EndPointStreamBatchRowLimit != nil {
		in, out := &in.EndPointStreamBatchRowLimit, &out.EndPointStreamBatchRowLimit
		*out = new(uint)
		**out = **in
	}
	if in.EndPointEnableBatchIfPossible != nil {
		in, out := &in.EndPointEnableBatchIfPossible, &out.EndPointEnableBatchIfPossible
		*out = new(uint)
		**out = **in
	}
	if in.StatsConcurrency != nil {
		in, out := &in.StatsConcurrency, &out.StatsConcurrency
		*out = new(uint)
		**out = **in
	}
	if in.HeavyLoadThreshold != nil {
		in, out := &in.HeavyLoadThreshold, &out.HeavyLoadThreshold
		*out = new(uint)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVServerConfig.
func (in *TiKVServerConfig) DeepCopy() *TiKVServerConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVServerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVSpec) DeepCopyInto(out *TiKVSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(ServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(TiKVConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVSpec.
func (in *TiKVSpec) DeepCopy() *TiKVSpec {
	if in == nil {
		return nil
	}
	out := new(TiKVSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVStatus) DeepCopyInto(out *TiKVStatus) {
	*out = *in
	if in.StatefulSet != nil {
		in, out := &in.StatefulSet, &out.StatefulSet
		*out = new(appsv1.StatefulSetStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.Stores != nil {
		in, out := &in.Stores, &out.Stores
		*out = make(map[string]TiKVStore, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.TombstoneStores != nil {
		in, out := &in.TombstoneStores, &out.TombstoneStores
		*out = make(map[string]TiKVStore, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.FailureStores != nil {
		in, out := &in.FailureStores, &out.FailureStores
		*out = make(map[string]TiKVFailureStore, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVStatus.
func (in *TiKVStatus) DeepCopy() *TiKVStatus {
	if in == nil {
		return nil
	}
	out := new(TiKVStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVStorageConfig) DeepCopyInto(out *TiKVStorageConfig) {
	*out = *in
	if in.MaxKeySize != nil {
		in, out := &in.MaxKeySize, &out.MaxKeySize
		*out = new(int64)
		**out = **in
	}
	if in.SchedulerNotifyCapacity != nil {
		in, out := &in.SchedulerNotifyCapacity, &out.SchedulerNotifyCapacity
		*out = new(int64)
		**out = **in
	}
	if in.SchedulerConcurrency != nil {
		in, out := &in.SchedulerConcurrency, &out.SchedulerConcurrency
		*out = new(int64)
		**out = **in
	}
	if in.SchedulerWorkerPoolSize != nil {
		in, out := &in.SchedulerWorkerPoolSize, &out.SchedulerWorkerPoolSize
		*out = new(int64)
		**out = **in
	}
	if in.BlockCache != nil {
		in, out := &in.BlockCache, &out.BlockCache
		*out = new(TiKVBlockCacheConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVStorageConfig.
func (in *TiKVStorageConfig) DeepCopy() *TiKVStorageConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVStorageConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVStorageReadPoolConfig) DeepCopyInto(out *TiKVStorageReadPoolConfig) {
	*out = *in
	if in.HighConcurrency != nil {
		in, out := &in.HighConcurrency, &out.HighConcurrency
		*out = new(int64)
		**out = **in
	}
	if in.NormalConcurrency != nil {
		in, out := &in.NormalConcurrency, &out.NormalConcurrency
		*out = new(int64)
		**out = **in
	}
	if in.LowConcurrency != nil {
		in, out := &in.LowConcurrency, &out.LowConcurrency
		*out = new(int64)
		**out = **in
	}
	if in.MaxTasksPerWorkerHigh != nil {
		in, out := &in.MaxTasksPerWorkerHigh, &out.MaxTasksPerWorkerHigh
		*out = new(int64)
		**out = **in
	}
	if in.MaxTasksPerWorkerNormal != nil {
		in, out := &in.MaxTasksPerWorkerNormal, &out.MaxTasksPerWorkerNormal
		*out = new(int64)
		**out = **in
	}
	if in.MaxTasksPerWorkerLow != nil {
		in, out := &in.MaxTasksPerWorkerLow, &out.MaxTasksPerWorkerLow
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVStorageReadPoolConfig.
func (in *TiKVStorageReadPoolConfig) DeepCopy() *TiKVStorageReadPoolConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVStorageReadPoolConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVStore) DeepCopyInto(out *TiKVStore) {
	*out = *in
	in.LastHeartbeatTime.DeepCopyInto(&out.LastHeartbeatTime)
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVStore.
func (in *TiKVStore) DeepCopy() *TiKVStore {
	if in == nil {
		return nil
	}
	out := new(TiKVStore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVTitanCfConfig) DeepCopyInto(out *TiKVTitanCfConfig) {
	*out = *in
	if in.DiscardableRatio != nil {
		in, out := &in.DiscardableRatio, &out.DiscardableRatio
		*out = new(float64)
		**out = **in
	}
	if in.SampleRatio != nil {
		in, out := &in.SampleRatio, &out.SampleRatio
		*out = new(float64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVTitanCfConfig.
func (in *TiKVTitanCfConfig) DeepCopy() *TiKVTitanCfConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVTitanCfConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiKVTitanDBConfig) DeepCopyInto(out *TiKVTitanDBConfig) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.DisableGc != nil {
		in, out := &in.DisableGc, &out.DisableGc
		*out = new(bool)
		**out = **in
	}
	if in.MaxBackgroundGc != nil {
		in, out := &in.MaxBackgroundGc, &out.MaxBackgroundGc
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiKVTitanDBConfig.
func (in *TiKVTitanDBConfig) DeepCopy() *TiKVTitanDBConfig {
	if in == nil {
		return nil
	}
	out := new(TiKVTitanDBConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TidbCluster) DeepCopyInto(out *TidbCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TidbCluster.
func (in *TidbCluster) DeepCopy() *TidbCluster {
	if in == nil {
		return nil
	}
	out := new(TidbCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TidbCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TidbClusterList) DeepCopyInto(out *TidbClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TidbCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TidbClusterList.
func (in *TidbClusterList) DeepCopy() *TidbClusterList {
	if in == nil {
		return nil
	}
	out := new(TidbClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TidbClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TidbClusterRef) DeepCopyInto(out *TidbClusterRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TidbClusterRef.
func (in *TidbClusterRef) DeepCopy() *TidbClusterRef {
	if in == nil {
		return nil
	}
	out := new(TidbClusterRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TidbClusterSpec) DeepCopyInto(out *TidbClusterSpec) {
	*out = *in
	in.PD.DeepCopyInto(&out.PD)
	in.TiDB.DeepCopyInto(&out.TiDB)
	in.TiKV.DeepCopyInto(&out.TiKV)
	if in.Pump != nil {
		in, out := &in.Pump, &out.Pump
		*out = new(PumpSpec)
		(*in).DeepCopyInto(*out)
	}
	in.Helper.DeepCopyInto(&out.Helper)
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]Service, len(*in))
		copy(*out, *in)
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TidbClusterSpec.
func (in *TidbClusterSpec) DeepCopy() *TidbClusterSpec {
	if in == nil {
		return nil
	}
	out := new(TidbClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TidbClusterStatus) DeepCopyInto(out *TidbClusterStatus) {
	*out = *in
	in.PD.DeepCopyInto(&out.PD)
	in.TiKV.DeepCopyInto(&out.TiKV)
	in.TiDB.DeepCopyInto(&out.TiDB)
	in.Pump.DeepCopyInto(&out.Pump)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TidbClusterStatus.
func (in *TidbClusterStatus) DeepCopy() *TidbClusterStatus {
	if in == nil {
		return nil
	}
	out := new(TidbClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TidbInitializer) DeepCopyInto(out *TidbInitializer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TidbInitializer.
func (in *TidbInitializer) DeepCopy() *TidbInitializer {
	if in == nil {
		return nil
	}
	out := new(TidbInitializer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TidbInitializer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TidbInitializerList) DeepCopyInto(out *TidbInitializerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TidbInitializer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TidbInitializerList.
func (in *TidbInitializerList) DeepCopy() *TidbInitializerList {
	if in == nil {
		return nil
	}
	out := new(TidbInitializerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TidbInitializerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TidbInitializerSpec) DeepCopyInto(out *TidbInitializerSpec) {
	*out = *in
	out.Clusters = in.Clusters
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(v1.PullPolicy)
		**out = **in
	}
	if in.PermitHost != nil {
		in, out := &in.PermitHost, &out.PermitHost
		*out = new(string)
		**out = **in
	}
	if in.InitSql != nil {
		in, out := &in.InitSql, &out.InitSql
		*out = new(string)
		**out = **in
	}
	if in.InitSqlConfigMap != nil {
		in, out := &in.InitSqlConfigMap, &out.InitSqlConfigMap
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecret != nil {
		in, out := &in.PasswordSecret, &out.PasswordSecret
		*out = new(string)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TidbInitializerSpec.
func (in *TidbInitializerSpec) DeepCopy() *TidbInitializerSpec {
	if in == nil {
		return nil
	}
	out := new(TidbInitializerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TidbInitializerStatus) DeepCopyInto(out *TidbInitializerStatus) {
	*out = *in
	in.JobStatus.DeepCopyInto(&out.JobStatus)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TidbInitializerStatus.
func (in *TidbInitializerStatus) DeepCopy() *TidbInitializerStatus {
	if in == nil {
		return nil
	}
	out := new(TidbInitializerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TidbMonitor) DeepCopyInto(out *TidbMonitor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TidbMonitor.
func (in *TidbMonitor) DeepCopy() *TidbMonitor {
	if in == nil {
		return nil
	}
	out := new(TidbMonitor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TidbMonitor) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TidbMonitorList) DeepCopyInto(out *TidbMonitorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TidbMonitor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TidbMonitorList.
func (in *TidbMonitorList) DeepCopy() *TidbMonitorList {
	if in == nil {
		return nil
	}
	out := new(TidbMonitorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TidbMonitorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TidbMonitorSpec) DeepCopyInto(out *TidbMonitorSpec) {
	*out = *in
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]TidbClusterRef, len(*in))
		copy(*out, *in)
	}
	in.Prometheus.DeepCopyInto(&out.Prometheus)
	if in.Grafana != nil {
		in, out := &in.Grafana, &out.Grafana
		*out = new(GrafanaSpec)
		(*in).DeepCopyInto(*out)
	}
	in.Reloader.DeepCopyInto(&out.Reloader)
	in.Initializer.DeepCopyInto(&out.Initializer)
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubePrometheusURL != nil {
		in, out := &in.KubePrometheusURL, &out.KubePrometheusURL
		*out = new(string)
		**out = **in
	}
	if in.AlertmanagerURL != nil {
		in, out := &in.AlertmanagerURL, &out.AlertmanagerURL
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TidbMonitorSpec.
func (in *TidbMonitorSpec) DeepCopy() *TidbMonitorSpec {
	if in == nil {
		return nil
	}
	out := new(TidbMonitorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TidbMonitorStatus) DeepCopyInto(out *TidbMonitorStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TidbMonitorStatus.
func (in *TidbMonitorStatus) DeepCopy() *TidbMonitorStatus {
	if in == nil {
		return nil
	}
	out := new(TidbMonitorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TxnLocalLatches) DeepCopyInto(out *TxnLocalLatches) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(uint)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TxnLocalLatches.
func (in *TxnLocalLatches) DeepCopy() *TxnLocalLatches {
	if in == nil {
		return nil
	}
	out := new(TxnLocalLatches)
	in.DeepCopyInto(out)
	return out
}
