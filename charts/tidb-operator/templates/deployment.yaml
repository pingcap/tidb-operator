apiVersion: apps/v1
kind: Deployment
metadata:
  {{- if eq .Values.appendReleaseSuffix true }}
  name: tidb-operator-{{.Release.Name }}
  {{- else }}
  name: tidb-operator
  {{- end }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ template "chart.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: tidb-operator
spec:
  replicas: {{ .Values.operator.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "chart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: tidb-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: tidb-operator
{{- if .Values.operator.podAnnotations }}
      annotations:
{{ toYaml .Values.operator.podAnnotations | indent 8 }}
{{ end }}
    spec:
    {{- if .Values.operator.serviceAccount }}
      {{- if eq .Values.appendReleaseSuffix true }}
      serviceAccountName: {{ .Values.operator.serviceAccount }}-{{ .Release.Name }}
      {{- else }}
      serviceAccountName: {{ .Values.operator.serviceAccount }}
      {{- end }}
    {{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 6 }}
    {{- end }}
      containers:
      - command:
        - /tidb-operator
        args:
          - --backup-manager-image={{ template "image" (tuple .Values.backupManager.image $.Chart.AppVersion) }}
        {{- if .Values.operator.extraArgs }}
        {{ toYaml .Values.operator.extraArgs | nindent 10 }}
        {{- end }}
        image: "{{ template "image" (tuple .Values.operator.image $.Chart.AppVersion) }}"
        imagePullPolicy: {{ .Values.operator.pullPolicy | default "IfNotPresent" }}
        name: tidb-operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        ports:
          - containerPort: 8080
            name: http
            protocol: TCP
        {{- if .Values.operator.resources }}
        resources:
{{ toYaml .Values.operator.resources | indent 12 }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: TZ
            value: {{ .Values.timezone | default "UTC" }}
          {{- if eq .Values.appendReleaseSuffix true}}
          - name: HELM_RELEASE
            value: {{ .Release.Name }}
          {{- end }}
          {{- with .Values.operator.env }}
{{ toYaml . | indent 10 }}
          {{- end }}
      {{- with .Values.operator.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}

      {{- with .Values.operator.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}

      {{- if .Values.operator.priorityClassName }}
      priorityClassName: {{ .Values.operator.priorityClassName }}
      {{- end }}
      {{- with .Values.operator.securityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
      {{- end}}
