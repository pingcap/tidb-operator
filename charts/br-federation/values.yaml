# Default values for br-federation

rbac:
  create: true

# timezone is the default system timzone
timezone: UTC

image: pingcap/br-federation-manager:v1.6.0-alpha.8
imagePullPolicy: IfNotPresent
# imagePullSecrets: []

appendReleaseSuffix: false

brFederationManager:
  create: true
  # With rbac.create=false, the user is responsible for creating this account
  # With rbac.create=true, this service account will be created
  # Also see rbac.create
  serviceAccount: br-federation-manager

  # Secret name of the kubeconfig for the federation Kubernetes clusters
  federationKubeconfigSecret: br-federation-kubeconfig
  # which data item is the kubeconfig file, and the data item value is the base64 encoded kubeconfig
  # if you have multiple kubernetes clusters, you should merge them in one kubeconfig
  # we use the context name in the kubeconfig as the k8sClusterName in volume backup/restore CR
  federationKubeconfigSecretKey: kubeconfig

  logLevel: 2
  replicas: 1
  resources:
    requests:
      cpu: 80m
      memory: 50Mi
  # REF: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  # priorityClassName: system-cluster-critical


  # REF: https://pkg.go.dev/k8s.io/client-go/tools/leaderelection#LeaderElectionConfig
  ## leaderLeaseDuration is the duration that non-leader candidates will wait to force acquire leadership
  # leaderLeaseDuration: 15s
  ## leaderRenewDeadline is the duration that the acting master will retry refreshing leadership before giving up
  # leaderRenewDeadline: 10s
  ## leaderRetryPeriod is the duration the LeaderElector clients should wait between tries of actions
  # leaderRetryPeriod: 2s

  ## number of workers that are allowed to sync concurrently. default 5
  # workers: 5

  ## affinity defines pod scheduling rules,affinity default settings is empty.
  ## please read the affinity document before set your scheduling rule:
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## nodeSelector ensure pods only assigning to nodes which have each of the indicated key-value pairs as labels
  ## ref:https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  nodeSelector: {}
  ## Tolerations are applied to pods, and allow pods to schedule onto nodes with matching taints.
  ## refer to https://kubernetes.io/docs/concepts/configuration/taint-and-toleration
  tolerations: []
  ## Env define environments for the controller manager.
  ## NOTE that the following env names is reserved: 
  ##  - NAMESPACE
  ##  - TZ
  ##  - HELM_RELEASE
  env: []
  # - name: AWS_REGION
  #   value: us-west-2
  # SecurityContext is security config of this component, it will set template.spec.securityContext
  # Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context
  securityContext: {}
  # runAsUser: 1000
  # runAsGroup: 2000
  # fsGroup: 2000
  # PodAnnotations will set template.metadata.annotations
  # Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  ## KubeClientQPS indicates the maximum QPS to the kubenetes API server from client.
  # kubeClientQPS: 5
  ## Maximum burst for throttle.
  # kubeClientBurst: 10
