---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: tidbclusters.pingcap.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.pd.image
    description: The image for PD cluster
    name: PD
    type: string
  - JSONPath: .spec.pd.requests.storage
    description: The storage size specified for PD node
    name: Storage
    type: string
  - JSONPath: .status.pd.statefulSet.readyReplicas
    description: The desired replicas number of PD cluster
    name: Ready
    type: integer
  - JSONPath: .spec.pd.replicas
    description: The desired replicas number of PD cluster
    name: Desire
    type: integer
  - JSONPath: .spec.tikv.image
    description: The image for TiKV cluster
    name: TiKV
    type: string
  - JSONPath: .spec.tikv.requests.storage
    description: The storage size specified for TiKV node
    name: Storage
    type: string
  - JSONPath: .status.tikv.statefulSet.readyReplicas
    description: The ready replicas number of TiKV cluster
    name: Ready
    type: integer
  - JSONPath: .spec.tikv.replicas
    description: The desired replicas number of TiKV cluster
    name: Desire
    type: integer
  - JSONPath: .spec.tidb.image
    description: The image for TiDB cluster
    name: TiDB
    type: string
  - JSONPath: .status.tidb.statefulSet.readyReplicas
    description: The ready replicas number of TiDB cluster
    name: Ready
    type: integer
  - JSONPath: .spec.tidb.replicas
    description: The desired replicas number of TiDB cluster
    name: Desire
    type: integer
  group: pingcap.com
  names:
    kind: TidbCluster
    plural: tidbclusters
    shortNames:
    - tc
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        spec:
          description: TidbClusterSpec describes the attributes that a user creates
            on a tidb cluster
          properties:
            affinity:
              description: Affinity is a group of affinity scheduling rules.
              properties:
                nodeAffinity:
                  description: Node affinity is a group of node affinity scheduling
                    rules.
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: The scheduler will prefer to schedule pods to nodes
                        that satisfy the affinity expressions specified by this field,
                        but it may choose a node that violates one or more of the
                        expressions. The node that is most preferred is the one with
                        the greatest sum of weights, i.e. for each node that meets
                        all of the scheduling requirements (resource request, requiredDuringScheduling
                        affinity expressions, etc.), compute a sum by iterating through
                        the elements of this field and adding "weight" to the sum
                        if the node matches the corresponding matchExpressions; the
                        node(s) with the highest sum are the most preferred.
                      items:
                        description: An empty preferred scheduling term matches all
                          objects with implicit weight 0 (i.e. it's a no-op). A null
                          preferred scheduling term matches no objects (i.e. is also
                          a no-op).
                        properties:
                          preference:
                            description: A null or empty node selector term matches
                              no objects. The requirements of them are ANDed. The
                              TopologySelectorTerm type implements a subset of the
                              NodeSelectorTerm.
                            properties:
                              matchExpressions:
                                description: A list of node selector requirements
                                  by node's labels.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchFields:
                                description: A list of node selector requirements
                                  by node's fields.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                            type: object
                          weight:
                            description: Weight associated with matching the corresponding
                              nodeSelectorTerm, in the range 1-100.
                            format: int32
                            type: integer
                        required:
                        - weight
                        - preference
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: A node selector represents the union of the results
                        of one or more label queries over a set of nodes; that is,
                        it represents the OR of the selectors represented by the node
                        selector terms.
                      properties:
                        nodeSelectorTerms:
                          description: Required. A list of node selector terms. The
                            terms are ORed.
                          items:
                            description: A null or empty node selector term matches
                              no objects. The requirements of them are ANDed. The
                              TopologySelectorTerm type implements a subset of the
                              NodeSelectorTerm.
                            properties:
                              matchExpressions:
                                description: A list of node selector requirements
                                  by node's labels.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchFields:
                                description: A list of node selector requirements
                                  by node's fields.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                            type: object
                          type: array
                      required:
                      - nodeSelectorTerms
                      type: object
                  type: object
                podAffinity:
                  description: Pod affinity is a group of inter pod affinity scheduling
                    rules.
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: The scheduler will prefer to schedule pods to nodes
                        that satisfy the affinity expressions specified by this field,
                        but it may choose a node that violates one or more of the
                        expressions. The node that is most preferred is the one with
                        the greatest sum of weights, i.e. for each node that meets
                        all of the scheduling requirements (resource request, requiredDuringScheduling
                        affinity expressions, etc.), compute a sum by iterating through
                        the elements of this field and adding "weight" to the sum
                        if the node has pods which matches the corresponding podAffinityTerm;
                        the node(s) with the highest sum are the most preferred.
                      items:
                        description: The weights of all of the matched WeightedPodAffinityTerm
                          fields are added per-node to find the most preferred node(s)
                        properties:
                          podAffinityTerm:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          weight:
                            description: weight associated with matching the corresponding
                              podAffinityTerm, in the range 1-100.
                            format: int32
                            type: integer
                        required:
                        - weight
                        - podAffinityTerm
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: If the affinity requirements specified by this
                        field are not met at scheduling time, the pod will not be
                        scheduled onto the node. If the affinity requirements specified
                        by this field cease to be met at some point during pod execution
                        (e.g. due to a pod label update), the system may or may not
                        try to eventually evict the pod from its node. When there
                        are multiple elements, the lists of nodes corresponding to
                        each podAffinityTerm are intersected, i.e. all terms must
                        be satisfied.
                      items:
                        description: Defines a set of pods (namely those matching
                          the labelSelector relative to the given namespace(s)) that
                          this pod should be co-located (affinity) or not co-located
                          (anti-affinity) with, where co-located is defined as running
                          on a node whose value of the label with key <topologyKey>
                          matches that of any node on which a pod of the set of pods
                          is running
                        properties:
                          labelSelector:
                            description: A label selector is a label query over a
                              set of resources. The result of matchLabels and matchExpressions
                              are ANDed. An empty label selector matches all objects.
                              A null label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          namespaces:
                            description: namespaces specifies which namespaces the
                              labelSelector applies to (matches against); null or
                              empty list means "this pod's namespace"
                            items:
                              type: string
                            type: array
                          topologyKey:
                            description: This pod should be co-located (affinity)
                              or not co-located (anti-affinity) with the pods matching
                              the labelSelector in the specified namespaces, where
                              co-located is defined as running on a node whose value
                              of the label with key topologyKey matches that of any
                              node on which any of the selected pods is running. Empty
                              topologyKey is not allowed.
                            type: string
                        required:
                        - topologyKey
                        type: object
                      type: array
                  type: object
                podAntiAffinity:
                  description: Pod anti affinity is a group of inter pod anti affinity
                    scheduling rules.
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: The scheduler will prefer to schedule pods to nodes
                        that satisfy the anti-affinity expressions specified by this
                        field, but it may choose a node that violates one or more
                        of the expressions. The node that is most preferred is the
                        one with the greatest sum of weights, i.e. for each node that
                        meets all of the scheduling requirements (resource request,
                        requiredDuringScheduling anti-affinity expressions, etc.),
                        compute a sum by iterating through the elements of this field
                        and adding "weight" to the sum if the node has pods which
                        matches the corresponding podAffinityTerm; the node(s) with
                        the highest sum are the most preferred.
                      items:
                        description: The weights of all of the matched WeightedPodAffinityTerm
                          fields are added per-node to find the most preferred node(s)
                        properties:
                          podAffinityTerm:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          weight:
                            description: weight associated with matching the corresponding
                              podAffinityTerm, in the range 1-100.
                            format: int32
                            type: integer
                        required:
                        - weight
                        - podAffinityTerm
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: If the anti-affinity requirements specified by
                        this field are not met at scheduling time, the pod will not
                        be scheduled onto the node. If the anti-affinity requirements
                        specified by this field cease to be met at some point during
                        pod execution (e.g. due to a pod label update), the system
                        may or may not try to eventually evict the pod from its node.
                        When there are multiple elements, the lists of nodes corresponding
                        to each podAffinityTerm are intersected, i.e. all terms must
                        be satisfied.
                      items:
                        description: Defines a set of pods (namely those matching
                          the labelSelector relative to the given namespace(s)) that
                          this pod should be co-located (affinity) or not co-located
                          (anti-affinity) with, where co-located is defined as running
                          on a node whose value of the label with key <topologyKey>
                          matches that of any node on which a pod of the set of pods
                          is running
                        properties:
                          labelSelector:
                            description: A label selector is a label query over a
                              set of resources. The result of matchLabels and matchExpressions
                              are ANDed. An empty label selector matches all objects.
                              A null label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          namespaces:
                            description: namespaces specifies which namespaces the
                              labelSelector applies to (matches against); null or
                              empty list means "this pod's namespace"
                            items:
                              type: string
                            type: array
                          topologyKey:
                            description: This pod should be co-located (affinity)
                              or not co-located (anti-affinity) with the pods matching
                              the labelSelector in the specified namespaces, where
                              co-located is defined as running on a node whose value
                              of the label with key topologyKey matches that of any
                              node on which any of the selected pods is running. Empty
                              topologyKey is not allowed.
                            type: string
                        required:
                        - topologyKey
                        type: object
                      type: array
                  type: object
              type: object
            annotations:
              description: Base annotations of TiDB cluster Pods, components may add
                or override selectors upon this respectively
              type: object
            configUpdateStrategy:
              description: ConfigUpdateStrategy determines how the configuration change
                is applied to the cluster. UpdateStrategyInPlace will update the ConfigMap
                of configuration in-place and an extra rolling-update of the cluster
                component is needed to reload the configuration change. UpdateStrategyRollingUpdate
                will create a new ConfigMap with the new configuration and rolling-update
                the related components to use the new ConfigMap, that is, the new
                configuration will be applied automatically.
              type: string
            enablePVReclaim:
              description: 'Whether enable PVC reclaim for orphan PVC left by statefulset
                scale-in Optional: Defaults to false'
              type: boolean
            enableTLSCluster:
              description: 'Enable TLS connection between TiDB server components Optional:
                Defaults to false'
              type: boolean
            helper:
              description: HelperSpec contains details of helper component
              properties:
                image:
                  description: 'Image used to tail slow log and set kernel parameters
                    if necessary, must have `tail` and `sysctl` installed Optional:
                    Defaults to busybox:1.26.2'
                  type: string
                imagePullPolicy:
                  description: 'ImagePullPolicy of the component. Override the cluster-level
                    imagePullPolicy if present Optional: Defaults to the cluster-level
                    setting'
                  type: string
              type: object
            hostNetwork:
              description: 'Whether Hostnetwork is enabled for TiDB cluster Pods Optional:
                Defaults to false'
              type: boolean
            imagePullPolicy:
              description: ImagePullPolicy of TiDB cluster Pods
              type: string
            nodeSelector:
              description: Base node selectors of TiDB cluster Pods, components may
                add or override selectors upon this respectively
              type: object
            pd:
              description: PDSpec contains details of PD members
              properties:
                affinity:
                  description: Affinity is a group of affinity scheduling rules.
                  properties:
                    nodeAffinity:
                      description: Node affinity is a group of node affinity scheduling
                        rules.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            matches the corresponding matchExpressions; the node(s)
                            with the highest sum are the most preferred.
                          items:
                            description: An empty preferred scheduling term matches
                              all objects with implicit weight 0 (i.e. it's a no-op).
                              A null preferred scheduling term matches no objects
                              (i.e. is also a no-op).
                            properties:
                              preference:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: Weight associated with matching the corresponding
                                  nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - weight
                            - preference
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: A node selector represents the union of the
                            results of one or more label queries over a set of nodes;
                            that is, it represents the OR of the selectors represented
                            by the node selector terms.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                          - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: Pod affinity is a group of inter pod affinity scheduling
                        rules.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            has pods which matches the corresponding podAffinityTerm;
                            the node(s) with the highest sum are the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any
                                  node on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label selector is a label query
                                      over a set of resources. The result of matchLabels
                                      and matchExpressions are ANDed. An empty label
                                      selector matches all objects. A null label selector
                                      matches no objects.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - weight
                            - podAffinityTerm
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to a pod label update),
                            the system may or may not try to eventually evict the
                            pod from its node. When there are multiple elements, the
                            lists of nodes corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: Pod anti affinity is a group of inter pod anti
                        affinity scheduling rules.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling anti-affinity
                            expressions, etc.), compute a sum by iterating through
                            the elements of this field and adding "weight" to the
                            sum if the node has pods which matches the corresponding
                            podAffinityTerm; the node(s) with the highest sum are
                            the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any
                                  node on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label selector is a label query
                                      over a set of resources. The result of matchLabels
                                      and matchExpressions are ANDed. An empty label
                                      selector matches all objects. A null label selector
                                      matches no objects.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - weight
                            - podAffinityTerm
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the anti-affinity requirements specified
                            by this field are not met at scheduling time, the pod
                            will not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met at
                            some point during pod execution (e.g. due to a pod label
                            update), the system may or may not try to eventually evict
                            the pod from its node. When there are multiple elements,
                            the lists of nodes corresponding to each podAffinityTerm
                            are intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                annotations:
                  description: 'Annotations of the component. Merged into the cluster-level
                    annotations if non-empty Optional: Defaults to cluster-level setting'
                  type: object
                baseImage:
                  description: Base image of the component, image tag is now allowed
                    during validation
                  type: string
                config:
                  description: PDConfig is the configuration of pd-server
                  properties:
                    auto-compaction-mode:
                      description: AutoCompactionMode is either 'periodic' or 'revision'.
                        The default value is 'periodic'.
                      type: string
                    auto-compaction-retention-v2:
                      description: AutoCompactionRetention is either duration string
                        with time unit (e.g. '5m' for 5-minute), or revision unit
                        (e.g. '5000'). If no time unit is provided and compaction
                        mode is 'periodic', the unit defaults to hour. For example,
                        '5' translates into 5-hour. The default retention is 1 hour.
                        Before etcd v3.3.x, the type of retention is int. We add 'v2'
                        suffix to make it backward compatible.
                      type: string
                    cluster-version:
                      type: string
                    election-interval:
                      description: ElectionInterval is the interval for etcd Raft
                        election.
                      type: string
                    enable-grpc-gateway:
                      description: 'Optional: Defaults to true'
                      type: boolean
                    enable-prevote:
                      description: 'Prevote is true to enable Raft Pre-Vote. If enabled,
                        Raft runs an additional election phase to check whether it
                        would get enough votes to win an election, thus minimizing
                        disruptions. Optional: Defaults to true'
                      type: boolean
                    force-new-cluster:
                      type: boolean
                    label-property:
                      type: object
                    lease:
                      description: 'LeaderLease time, if leader doesn''t update its
                        TTL in etcd after lease time, etcd will expire the leader
                        key and other servers can campaign the leader again. Etcd
                        only supports seconds TTL, so here is second too. Optional:
                        Defaults to 3'
                      format: int64
                      type: integer
                    log:
                      description: PDLogConfig serializes log related config in toml/json.
                      properties:
                        development:
                          description: Development puts the logger in development
                            mode, which changes the behavior of DPanicLevel and takes
                            stacktraces more liberally.
                          type: boolean
                        disable-caller:
                          description: DisableCaller stops annotating logs with the
                            calling function's file name and line number. By default,
                            all logs are annotated.
                          type: boolean
                        disable-error-verbose:
                          description: DisableErrorVerbose stops annotating logs with
                            the full verbose error message.
                          type: boolean
                        disable-stacktrace:
                          description: DisableStacktrace completely disables automatic
                            stacktrace capturing. By default, stacktraces are captured
                            for WarnLevel and above logs in development and ErrorLevel
                            and above in production.
                          type: boolean
                        disable-timestamp:
                          description: Disable automatic timestamps in output.
                          type: boolean
                        file:
                          properties:
                            filename:
                              description: Log filename, leave empty to disable file
                                log.
                              type: string
                            log-rotate:
                              description: Is log rotate enabled.
                              type: boolean
                            max-backups:
                              description: Maximum number of old log files to retain.
                              format: int32
                              type: integer
                            max-days:
                              description: Max log keep days, default is never deleting.
                              format: int32
                              type: integer
                            max-size:
                              description: Max size for a single file, in MB.
                              format: int32
                              type: integer
                          type: object
                        format:
                          description: Log format. one of json, text, or console.
                          type: string
                        level:
                          description: 'Log level. Optional: Defaults to info'
                          type: string
                      type: object
                    log-file:
                      description: Backward compatibility.
                      type: string
                    log-level:
                      type: string
                    metric:
                      properties:
                        address:
                          type: string
                        interval:
                          type: string
                        job:
                          type: string
                      type: object
                    namespace:
                      type: object
                    namespace-classifier:
                      description: 'NamespaceClassifier is for classifying stores/regions
                        into different namespaces. Optional: Defaults to true'
                      type: string
                    pd-server:
                      description: PDServerConfig is the configuration for pd server.
                      properties:
                        use-region-storage:
                          description: UseRegionStorage enables the independent region
                            storage.
                          type: string
                      type: object
                    quota-backend-bytes:
                      description: QuotaBackendBytes Raise alarms when backend size
                        exceeds the given quota. 0 means use the default quota. the
                        default size is 2GB, the maximum is 8GB.
                      type: string
                    replication:
                      description: PDReplicationConfig is the replication configuration.
                      properties:
                        max-replicas:
                          description: 'MaxReplicas is the number of replicas for
                            each region. Immutable, change should be made through
                            pd-ctl after cluster creation Optional: Defaults to 3'
                          format: int64
                          type: integer
                        strictly-match-label:
                          description: StrictlyMatchLabel strictly checks if the label
                            of TiKV is matched with LocaltionLabels. Immutable, change
                            should be made through pd-ctl after cluster creation
                          type: string
                      type: object
                    schedule:
                      description: ScheduleConfig is the schedule configuration.
                      properties:
                        disable-location-replacement:
                          description: DisableLocationReplacement is the option to
                            prevent replica checker from moving replica to a better
                            location. Immutable, change should be made through pd-ctl
                            after cluster creation
                          type: string
                        disable-make-up-replica:
                          description: DisableMakeUpReplica is the option to prevent
                            replica checker from making up replicas when replica count
                            is less than expected. Immutable, change should be made
                            through pd-ctl after cluster creation
                          type: string
                        disable-namespace-relocation:
                          description: DisableNamespaceRelocation is the option to
                            prevent namespace checker from moving replica to the target
                            namespace. Immutable, change should be made through pd-ctl
                            after cluster creation
                          type: string
                        disable-raft-learner:
                          description: DisableLearner is the option to disable using
                            AddLearnerNode instead of AddNode Immutable, change should
                            be made through pd-ctl after cluster creation
                          type: string
                        disable-remove-down-replica:
                          description: DisableRemoveDownReplica is the option to prevent
                            replica checker from removing down replicas. Immutable,
                            change should be made through pd-ctl after cluster creation
                          type: string
                        disable-remove-extra-replica:
                          description: DisableRemoveExtraReplica is the option to
                            prevent replica checker from removing extra replicas.
                            Immutable, change should be made through pd-ctl after
                            cluster creation
                          type: string
                        disable-replace-offline-replica:
                          description: DisableReplaceOfflineReplica is the option
                            to prevent replica checker from repalcing offline replicas.
                            Immutable, change should be made through pd-ctl after
                            cluster creation
                          type: string
                        high-space-ratio:
                          description: HighSpaceRatio is the highest usage ratio of
                            store which regraded as high space. High space means there
                            is a lot of spare capacity, and store region score varies
                            directly with used size. Immutable, change should be made
                            through pd-ctl after cluster creation
                          format: double
                          type: number
                        hot-region-cache-hits-threshold:
                          description: HotRegionCacheHitThreshold is the cache hits
                            threshold of the hot region. If the number of times a
                            region hits the hot cache is greater than this threshold,
                            it is considered a hot region. Immutable, change should
                            be made through pd-ctl after cluster creation
                          format: int64
                          type: integer
                        hot-region-schedule-limit:
                          description: 'HotRegionScheduleLimit is the max coexist
                            hot region schedules. Immutable, change should be made
                            through pd-ctl after cluster creation Optional: Defaults
                            to 4'
                          format: int64
                          type: integer
                        leader-schedule-limit:
                          description: 'LeaderScheduleLimit is the max coexist leader
                            schedules. Immutable, change should be made through pd-ctl
                            after cluster creation Optional: Defaults to 4'
                          format: int64
                          type: integer
                        low-space-ratio:
                          description: |2-

                                 high space stage         transition stage           low space stage
                              |--------------------|-----------------------------|-------------------------|
                              ^                    ^                             ^                         ^
                              0       HighSpaceRatio * capacity       LowSpaceRatio * capacity          capacity

                            LowSpaceRatio is the lowest usage ratio of store which regraded as low space. When in low space, store region score increases to very large and varies inversely with available size. Immutable, change should be made through pd-ctl after cluster creation
                          format: double
                          type: number
                        max-merge-region-keys:
                          description: 'Immutable, change should be made through pd-ctl
                            after cluster creation Optional: Defaults to 200000'
                          format: int64
                          type: integer
                        max-merge-region-size:
                          description: 'If both the size of region is smaller than
                            MaxMergeRegionSize and the number of rows in region is
                            smaller than MaxMergeRegionKeys, it will try to merge
                            with adjacent regions. Immutable, change should be made
                            through pd-ctl after cluster creation Optional: Defaults
                            to 20'
                          format: int64
                          type: integer
                        max-pending-peer-count:
                          description: 'Immutable, change should be made through pd-ctl
                            after cluster creation Optional: Defaults to 16'
                          format: int64
                          type: integer
                        max-snapshot-count:
                          description: 'If the snapshot count of one store is greater
                            than this value, it will never be used as a source or
                            target store. Immutable, change should be made through
                            pd-ctl after cluster creation Optional: Defaults to 3'
                          format: int64
                          type: integer
                        max-store-down-time:
                          description: 'MaxStoreDownTime is the max duration after
                            which a store will be considered to be down if it hasn''t
                            reported heartbeats. Immutable, change should be made
                            through pd-ctl after cluster creation Optional: Defaults
                            to 30m'
                          type: string
                        merge-schedule-limit:
                          description: 'MergeScheduleLimit is the max coexist merge
                            schedules. Immutable, change should be made through pd-ctl
                            after cluster creation Optional: Defaults to 8'
                          format: int64
                          type: integer
                        patrol-region-interval:
                          description: PatrolRegionInterval is the interval for scanning
                            region during patrol. Immutable, change should be made
                            through pd-ctl after cluster creation
                          type: string
                        region-schedule-limit:
                          description: 'RegionScheduleLimit is the max coexist region
                            schedules. Immutable, change should be made through pd-ctl
                            after cluster creation Optional: Defaults to 2048'
                          format: int64
                          type: integer
                        replica-schedule-limit:
                          description: 'ReplicaScheduleLimit is the max coexist replica
                            schedules. Immutable, change should be made through pd-ctl
                            after cluster creation Optional: Defaults to 64'
                          format: int64
                          type: integer
                        schedulers-v2:
                          description: Schedulers support for loding customized schedulers
                            Immutable, change should be made through pd-ctl after
                            cluster creation
                          items:
                            description: PDSchedulerConfig is customized scheduler
                              configuration
                            properties:
                              args:
                                description: Immutable, change should be made through
                                  pd-ctl after cluster creation
                                items:
                                  type: string
                                type: array
                              disable:
                                description: Immutable, change should be made through
                                  pd-ctl after cluster creation
                                type: boolean
                              type:
                                description: Immutable, change should be made through
                                  pd-ctl after cluster creation
                                type: string
                            type: object
                          type: array
                        split-merge-interval:
                          description: 'SplitMergeInterval is the minimum interval
                            time to permit merge after split. Immutable, change should
                            be made through pd-ctl after cluster creation Optional:
                            Defaults to 1h'
                          type: string
                        tolerant-size-ratio:
                          description: TolerantSizeRatio is the ratio of buffer size
                            for balance scheduler. Immutable, change should be made
                            through pd-ctl after cluster creation
                          format: double
                          type: number
                      type: object
                    security:
                      description: PDSecurityConfig is the configuration for supporting
                        tls.
                      properties:
                        cacert-path:
                          description: CAPath is the path of file that contains list
                            of trusted SSL CAs. if set, following four settings shouldn't
                            be empty
                          type: string
                        cert-path:
                          description: CertPath is the path of file that contains
                            X509 certificate in PEM format.
                          type: string
                        key-path:
                          description: KeyPath is the path of file that contains X509
                            key in PEM format.
                          type: string
                      type: object
                    tikv-interval:
                      description: TickInterval is the interval for etcd Raft tick.
                      type: string
                    tso-save-interval:
                      description: 'TsoSaveInterval is the interval to save timestamp.
                        Optional: Defaults to 3s'
                      type: string
                  type: object
                configUpdateStrategy:
                  description: 'ConfigUpdateStrategy of the component. Override the
                    cluster-level updateStrategy if present Optional: Defaults to
                    cluster-level setting'
                  type: string
                hostNetwork:
                  description: 'Whether Hostnetwork of the component is enabled. Override
                    the cluster-level setting if present Optional: Defaults to cluster-level
                    setting'
                  type: boolean
                imagePullPolicy:
                  description: 'ImagePullPolicy of the component. Override the cluster-level
                    imagePullPolicy if present Optional: Defaults to cluster-level
                    setting'
                  type: string
                limits:
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                nodeSelector:
                  description: 'NodeSelector of the component. Merged into the cluster-level
                    nodeSelector if non-empty Optional: Defaults to cluster-level
                    setting'
                  type: object
                podSecurityContext:
                  description: PodSecurityContext holds pod-level security attributes
                    and common container settings. Some fields are also present in
                    container.securityContext.  Field values of container.securityContext
                    take precedence over field values of PodSecurityContext.
                  properties:
                    fsGroup:
                      description: |-
                        A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

                        1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

                        If unset, the Kubelet will not modify the ownership and permissions of any volume.
                      format: int64
                      type: integer
                    runAsGroup:
                      description: The GID to run the entrypoint of the container
                        process. Uses runtime default if unset. May also be set in
                        SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                        the value specified in SecurityContext takes precedence for
                        that container.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: Indicates that the container must run as a non-root
                        user. If true, the Kubelet will validate the image at runtime
                        to ensure that it does not run as UID 0 (root) and fail to
                        start the container if it does. If unset or false, no such
                        validation will be performed. May also be set in SecurityContext.  If
                        set in both SecurityContext and PodSecurityContext, the value
                        specified in SecurityContext takes precedence.
                      type: boolean
                    runAsUser:
                      description: The UID to run the entrypoint of the container
                        process. Defaults to user specified in image metadata if unspecified.
                        May also be set in SecurityContext.  If set in both SecurityContext
                        and PodSecurityContext, the value specified in SecurityContext
                        takes precedence for that container.
                      format: int64
                      type: integer
                    seLinuxOptions:
                      description: SELinuxOptions are the labels to be applied to
                        the container
                      properties:
                        level:
                          description: Level is SELinux level label that applies to
                            the container.
                          type: string
                        role:
                          description: Role is a SELinux role label that applies to
                            the container.
                          type: string
                        type:
                          description: Type is a SELinux type label that applies to
                            the container.
                          type: string
                        user:
                          description: User is a SELinux user label that applies to
                            the container.
                          type: string
                      type: object
                    supplementalGroups:
                      description: A list of groups applied to the first process run
                        in each container, in addition to the container's primary
                        GID.  If unspecified, no groups will be added to any container.
                      items:
                        format: int64
                        type: integer
                      type: array
                    sysctls:
                      description: Sysctls hold a list of namespaced sysctls used
                        for the pod. Pods with unsupported sysctls (by the container
                        runtime) might fail to launch.
                      items:
                        description: Sysctl defines a kernel parameter to be set
                        properties:
                          name:
                            description: Name of a property to set
                            type: string
                          value:
                            description: Value of a property to set
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    windowsOptions:
                      description: WindowsSecurityContextOptions contain Windows-specific
                        options and credentials.
                      properties:
                        gmsaCredentialSpec:
                          description: GMSACredentialSpec is where the GMSA admission
                            webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                            inlines the contents of the GMSA credential spec named
                            by the GMSACredentialSpecName field. This field is alpha-level
                            and is only honored by servers that enable the WindowsGMSA
                            feature flag.
                          type: string
                        gmsaCredentialSpecName:
                          description: GMSACredentialSpecName is the name of the GMSA
                            credential spec to use. This field is alpha-level and
                            is only honored by servers that enable the WindowsGMSA
                            feature flag.
                          type: string
                        runAsUserName:
                          description: The UserName in Windows to run the entrypoint
                            of the container process. Defaults to the user specified
                            in image metadata if unspecified. May also be set in PodSecurityContext.
                            If set in both SecurityContext and PodSecurityContext,
                            the value specified in SecurityContext takes precedence.
                            This field is alpha-level and it is only honored by servers
                            that enable the WindowsRunAsUserName feature flag.
                          type: string
                      type: object
                  type: object
                priorityClassName:
                  description: 'PriorityClassName of the component. Override the cluster-level
                    one if present Optional: Defaults to cluster-level setting'
                  type: string
                replicas:
                  description: The desired ready replicas
                  format: int32
                  type: integer
                requests:
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                schedulerName:
                  description: 'SchedulerName of the component. Override the cluster-level
                    one if present Optional: Defaults to cluster-level setting'
                  type: string
                service:
                  properties:
                    annotations:
                      description: Additional annotations of the kubernetes service
                        object
                      type: object
                    clusterIP:
                      description: ClusterIP is the clusterIP of service
                      type: string
                    loadBalancerIP:
                      description: 'LoadBalancerIP is the loadBalancerIP of service
                        Optional: Defaults to omitted'
                      type: string
                    type:
                      description: Type of the real kubernetes service
                      type: string
                  type: object
                storageClassName:
                  description: 'The storageClassName of the persistent volume for
                    PD data storage, empty string means not explicitly set and use
                    the cluster default set by admission controller. Optionals: Defaults
                    to the default-storage-class-name set in the tidb-operator'
                  type: string
                tolerations:
                  description: 'Tolerations of the component. Override the cluster-level
                    tolerations if non-empty Optional: Defaults to cluster-level setting'
                  items:
                    description: The pod this Toleration is attached to tolerates
                      any taint that matches the triple <key,value,effect> using the
                      matching operator <operator>.
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty
                          means match all taint effects. When specified, allowed values
                          are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies
                          to. Empty means match all taint keys. If the key is empty,
                          operator must be Exists; this combination means to match
                          all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the
                          value. Valid operators are Exists and Equal. Defaults to
                          Equal. Exists is equivalent to wildcard for value, so that
                          a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time
                          the toleration (which must be of effect NoExecute, otherwise
                          this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do
                          not evict). Zero and negative values will be treated as
                          0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: Value is the taint value the toleration matches
                          to. If the operator is Exists, the value should be empty,
                          otherwise just a regular string.
                        type: string
                    type: object
                  type: array
                version:
                  description: 'Version of the component. Override the cluster-level
                    version if non-empty Optional: Defaults to cluster-level setting'
                  type: string
              required:
              - replicas
              type: object
            priorityClassName:
              description: 'PriorityClassName of TiDB cluster Pods Optional: Defaults
                to omitted'
              type: string
            pump:
              description: PumpSpec contains details of Pump members
              properties:
                affinity:
                  description: Affinity is a group of affinity scheduling rules.
                  properties:
                    nodeAffinity:
                      description: Node affinity is a group of node affinity scheduling
                        rules.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            matches the corresponding matchExpressions; the node(s)
                            with the highest sum are the most preferred.
                          items:
                            description: An empty preferred scheduling term matches
                              all objects with implicit weight 0 (i.e. it's a no-op).
                              A null preferred scheduling term matches no objects
                              (i.e. is also a no-op).
                            properties:
                              preference:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: Weight associated with matching the corresponding
                                  nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - weight
                            - preference
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: A node selector represents the union of the
                            results of one or more label queries over a set of nodes;
                            that is, it represents the OR of the selectors represented
                            by the node selector terms.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                          - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: Pod affinity is a group of inter pod affinity scheduling
                        rules.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            has pods which matches the corresponding podAffinityTerm;
                            the node(s) with the highest sum are the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any
                                  node on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label selector is a label query
                                      over a set of resources. The result of matchLabels
                                      and matchExpressions are ANDed. An empty label
                                      selector matches all objects. A null label selector
                                      matches no objects.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - weight
                            - podAffinityTerm
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to a pod label update),
                            the system may or may not try to eventually evict the
                            pod from its node. When there are multiple elements, the
                            lists of nodes corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: Pod anti affinity is a group of inter pod anti
                        affinity scheduling rules.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling anti-affinity
                            expressions, etc.), compute a sum by iterating through
                            the elements of this field and adding "weight" to the
                            sum if the node has pods which matches the corresponding
                            podAffinityTerm; the node(s) with the highest sum are
                            the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any
                                  node on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label selector is a label query
                                      over a set of resources. The result of matchLabels
                                      and matchExpressions are ANDed. An empty label
                                      selector matches all objects. A null label selector
                                      matches no objects.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - weight
                            - podAffinityTerm
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the anti-affinity requirements specified
                            by this field are not met at scheduling time, the pod
                            will not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met at
                            some point during pod execution (e.g. due to a pod label
                            update), the system may or may not try to eventually evict
                            the pod from its node. When there are multiple elements,
                            the lists of nodes corresponding to each podAffinityTerm
                            are intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                annotations:
                  description: 'Annotations of the component. Merged into the cluster-level
                    annotations if non-empty Optional: Defaults to cluster-level setting'
                  type: object
                baseImage:
                  description: Base image of the component, image tag is now allowed
                    during validation
                  type: string
                config:
                  type: object
                configUpdateStrategy:
                  description: 'ConfigUpdateStrategy of the component. Override the
                    cluster-level updateStrategy if present Optional: Defaults to
                    cluster-level setting'
                  type: string
                hostNetwork:
                  description: 'Whether Hostnetwork of the component is enabled. Override
                    the cluster-level setting if present Optional: Defaults to cluster-level
                    setting'
                  type: boolean
                imagePullPolicy:
                  description: 'ImagePullPolicy of the component. Override the cluster-level
                    imagePullPolicy if present Optional: Defaults to cluster-level
                    setting'
                  type: string
                limits:
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                nodeSelector:
                  description: 'NodeSelector of the component. Merged into the cluster-level
                    nodeSelector if non-empty Optional: Defaults to cluster-level
                    setting'
                  type: object
                podSecurityContext:
                  description: PodSecurityContext holds pod-level security attributes
                    and common container settings. Some fields are also present in
                    container.securityContext.  Field values of container.securityContext
                    take precedence over field values of PodSecurityContext.
                  properties:
                    fsGroup:
                      description: |-
                        A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

                        1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

                        If unset, the Kubelet will not modify the ownership and permissions of any volume.
                      format: int64
                      type: integer
                    runAsGroup:
                      description: The GID to run the entrypoint of the container
                        process. Uses runtime default if unset. May also be set in
                        SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                        the value specified in SecurityContext takes precedence for
                        that container.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: Indicates that the container must run as a non-root
                        user. If true, the Kubelet will validate the image at runtime
                        to ensure that it does not run as UID 0 (root) and fail to
                        start the container if it does. If unset or false, no such
                        validation will be performed. May also be set in SecurityContext.  If
                        set in both SecurityContext and PodSecurityContext, the value
                        specified in SecurityContext takes precedence.
                      type: boolean
                    runAsUser:
                      description: The UID to run the entrypoint of the container
                        process. Defaults to user specified in image metadata if unspecified.
                        May also be set in SecurityContext.  If set in both SecurityContext
                        and PodSecurityContext, the value specified in SecurityContext
                        takes precedence for that container.
                      format: int64
                      type: integer
                    seLinuxOptions:
                      description: SELinuxOptions are the labels to be applied to
                        the container
                      properties:
                        level:
                          description: Level is SELinux level label that applies to
                            the container.
                          type: string
                        role:
                          description: Role is a SELinux role label that applies to
                            the container.
                          type: string
                        type:
                          description: Type is a SELinux type label that applies to
                            the container.
                          type: string
                        user:
                          description: User is a SELinux user label that applies to
                            the container.
                          type: string
                      type: object
                    supplementalGroups:
                      description: A list of groups applied to the first process run
                        in each container, in addition to the container's primary
                        GID.  If unspecified, no groups will be added to any container.
                      items:
                        format: int64
                        type: integer
                      type: array
                    sysctls:
                      description: Sysctls hold a list of namespaced sysctls used
                        for the pod. Pods with unsupported sysctls (by the container
                        runtime) might fail to launch.
                      items:
                        description: Sysctl defines a kernel parameter to be set
                        properties:
                          name:
                            description: Name of a property to set
                            type: string
                          value:
                            description: Value of a property to set
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    windowsOptions:
                      description: WindowsSecurityContextOptions contain Windows-specific
                        options and credentials.
                      properties:
                        gmsaCredentialSpec:
                          description: GMSACredentialSpec is where the GMSA admission
                            webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                            inlines the contents of the GMSA credential spec named
                            by the GMSACredentialSpecName field. This field is alpha-level
                            and is only honored by servers that enable the WindowsGMSA
                            feature flag.
                          type: string
                        gmsaCredentialSpecName:
                          description: GMSACredentialSpecName is the name of the GMSA
                            credential spec to use. This field is alpha-level and
                            is only honored by servers that enable the WindowsGMSA
                            feature flag.
                          type: string
                        runAsUserName:
                          description: The UserName in Windows to run the entrypoint
                            of the container process. Defaults to the user specified
                            in image metadata if unspecified. May also be set in PodSecurityContext.
                            If set in both SecurityContext and PodSecurityContext,
                            the value specified in SecurityContext takes precedence.
                            This field is alpha-level and it is only honored by servers
                            that enable the WindowsRunAsUserName feature flag.
                          type: string
                      type: object
                  type: object
                priorityClassName:
                  description: 'PriorityClassName of the component. Override the cluster-level
                    one if present Optional: Defaults to cluster-level setting'
                  type: string
                replicas:
                  description: The desired ready replicas
                  format: int32
                  type: integer
                requests:
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                schedulerName:
                  description: 'SchedulerName of the component. Override the cluster-level
                    one if present Optional: Defaults to cluster-level setting'
                  type: string
                storageClassName:
                  description: 'The storageClassName of the persistent volume for
                    Pump data storage, empty string means not explicitly set and use
                    the cluster default set by admission controller. Optionals: Defaults
                    to the default-storage-class-name set in the tidb-operator'
                  type: string
                tolerations:
                  description: 'Tolerations of the component. Override the cluster-level
                    tolerations if non-empty Optional: Defaults to cluster-level setting'
                  items:
                    description: The pod this Toleration is attached to tolerates
                      any taint that matches the triple <key,value,effect> using the
                      matching operator <operator>.
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty
                          means match all taint effects. When specified, allowed values
                          are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies
                          to. Empty means match all taint keys. If the key is empty,
                          operator must be Exists; this combination means to match
                          all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the
                          value. Valid operators are Exists and Equal. Defaults to
                          Equal. Exists is equivalent to wildcard for value, so that
                          a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time
                          the toleration (which must be of effect NoExecute, otherwise
                          this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do
                          not evict). Zero and negative values will be treated as
                          0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: Value is the taint value the toleration matches
                          to. If the operator is Exists, the value should be empty,
                          otherwise just a regular string.
                        type: string
                    type: object
                  type: array
                version:
                  description: 'Version of the component. Override the cluster-level
                    version if non-empty Optional: Defaults to cluster-level setting'
                  type: string
              required:
              - replicas
              type: object
            pvReclaimPolicy:
              description: Persistent volume reclaim policy applied to the PVs that
                consumed by TiDB cluster
              type: string
            schedulerName:
              description: SchedulerName of TiDB cluster Pods
              type: string
            tidb:
              description: TiDBSpec contains details of TiDB members
              properties:
                affinity:
                  description: Affinity is a group of affinity scheduling rules.
                  properties:
                    nodeAffinity:
                      description: Node affinity is a group of node affinity scheduling
                        rules.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            matches the corresponding matchExpressions; the node(s)
                            with the highest sum are the most preferred.
                          items:
                            description: An empty preferred scheduling term matches
                              all objects with implicit weight 0 (i.e. it's a no-op).
                              A null preferred scheduling term matches no objects
                              (i.e. is also a no-op).
                            properties:
                              preference:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: Weight associated with matching the corresponding
                                  nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - weight
                            - preference
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: A node selector represents the union of the
                            results of one or more label queries over a set of nodes;
                            that is, it represents the OR of the selectors represented
                            by the node selector terms.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                          - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: Pod affinity is a group of inter pod affinity scheduling
                        rules.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            has pods which matches the corresponding podAffinityTerm;
                            the node(s) with the highest sum are the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any
                                  node on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label selector is a label query
                                      over a set of resources. The result of matchLabels
                                      and matchExpressions are ANDed. An empty label
                                      selector matches all objects. A null label selector
                                      matches no objects.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - weight
                            - podAffinityTerm
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to a pod label update),
                            the system may or may not try to eventually evict the
                            pod from its node. When there are multiple elements, the
                            lists of nodes corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: Pod anti affinity is a group of inter pod anti
                        affinity scheduling rules.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling anti-affinity
                            expressions, etc.), compute a sum by iterating through
                            the elements of this field and adding "weight" to the
                            sum if the node has pods which matches the corresponding
                            podAffinityTerm; the node(s) with the highest sum are
                            the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any
                                  node on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label selector is a label query
                                      over a set of resources. The result of matchLabels
                                      and matchExpressions are ANDed. An empty label
                                      selector matches all objects. A null label selector
                                      matches no objects.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - weight
                            - podAffinityTerm
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the anti-affinity requirements specified
                            by this field are not met at scheduling time, the pod
                            will not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met at
                            some point during pod execution (e.g. due to a pod label
                            update), the system may or may not try to eventually evict
                            the pod from its node. When there are multiple elements,
                            the lists of nodes corresponding to each podAffinityTerm
                            are intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                annotations:
                  description: 'Annotations of the component. Merged into the cluster-level
                    annotations if non-empty Optional: Defaults to cluster-level setting'
                  type: object
                baseImage:
                  description: Base image of the component, image tag is now allowed
                    during validation
                  type: string
                binlogEnabled:
                  description: 'Whether enable TiDB Binlog, it is encouraged to not
                    set this field and rely on the default behavior Optional: Defaults
                    to true if PumpSpec is non-nil, otherwise false'
                  type: boolean
                config:
                  description: TiDBConfig is the configuration of tidb-server
                  properties:
                    alter-primary-key:
                      description: 'Optional: Defaults to false'
                      type: boolean
                    binlog:
                      description: Binlog is the config for binlog.
                      properties:
                        binlog-socket:
                          description: Use socket file to write binlog, for compatible
                            with kafka version tidb-binlog.
                          type: string
                        ignore-error:
                          description: If IgnoreError is true, when writing binlog
                            meets error, TiDB would ignore the error.
                          type: boolean
                        strategy:
                          description: 'The strategy for sending binlog to pump, value
                            can be "range,omitempty" or "hash,omitempty" now. Optional:
                            Defaults to range'
                          type: string
                        write-timeout:
                          description: 'Optional: Defaults to 15s'
                          type: string
                      type: object
                    check-mb4-value-in-utf8:
                      description: 'Optional: Defaults to true'
                      type: boolean
                    compatible-kill-query:
                      type: boolean
                    cors:
                      type: string
                    enable-batch-dml:
                      description: 'Optional: Defaults to false'
                      type: boolean
                    enable-streaming:
                      description: 'Optional: Defaults to false'
                      type: boolean
                    lease:
                      description: 'Optional: Defaults to 45s'
                      type: string
                    log:
                      description: Log is the log section of config.
                      properties:
                        disable-timestamp:
                          description: Disable automatic timestamps in output.
                          type: boolean
                        expensive-threshold:
                          description: 'Optional: Defaults to 10000'
                          format: int32
                          type: integer
                        file:
                          properties:
                            filename:
                              description: Log filename, leave empty to disable file
                                log.
                              type: string
                            log-rotate:
                              description: Is log rotate enabled.
                              type: boolean
                            max-backups:
                              description: Maximum number of old log files to retain.
                              format: int32
                              type: integer
                            max-days:
                              description: Max log keep days, default is never deleting.
                              format: int32
                              type: integer
                            max-size:
                              description: Max size for a single file, in MB.
                              format: int32
                              type: integer
                          type: object
                        format:
                          description: 'Log format. one of json, text, or console.
                            Optional: Defaults to text'
                          type: string
                        level:
                          description: 'Log level. Optional: Defaults to info'
                          type: string
                        query-log-max-len:
                          description: 'Optional: Defaults to 2048'
                          format: int64
                          type: integer
                        record-plan-in-slow-log:
                          description: 'Optional: Defaults to 1'
                          format: int64
                          type: integer
                        slow-threshold:
                          description: 'Optional: Defaults to 300'
                          format: int64
                          type: integer
                      type: object
                    lower-case-table-names:
                      format: int32
                      type: integer
                    mem-quota-query:
                      description: 'Optional: Defaults to 34359738368'
                      format: int64
                      type: integer
                    oom-action:
                      description: 'Optional: Defaults to log'
                      type: string
                    opentracing:
                      description: OpenTracing is the opentracing section of the config.
                      properties:
                        enable:
                          description: 'Optional: Defaults to false'
                          type: boolean
                        reporter:
                          description: OpenTracingReporter is the config for opentracing
                            reporter. See https://godoc.org/github.com/uber/jaeger-client-go/config#ReporterConfig
                          properties:
                            buffer-flush-interval:
                              format: int64
                              type: integer
                            local-agent-host-port:
                              type: string
                            log-spans:
                              type: boolean
                            queue-size:
                              format: int32
                              type: integer
                          type: object
                        rpc-metrics:
                          type: boolean
                        sampler:
                          description: OpenTracingSampler is the config for opentracing
                            sampler. See https://godoc.org/github.com/uber/jaeger-client-go/config#SamplerConfig
                          properties:
                            max-operations:
                              format: int32
                              type: integer
                            param:
                              format: double
                              type: number
                            sampling-refresh-interval:
                              format: int64
                              type: integer
                            sampling-server-url:
                              type: string
                            type:
                              type: string
                          type: object
                      type: object
                    performance:
                      description: Performance is the performance section of the config.
                      properties:
                        bind-info-lease:
                          description: 'Optional: Defaults to 3s'
                          type: string
                        cross-join:
                          description: 'Optional: Defaults to true'
                          type: boolean
                        feedback-probability:
                          description: 'Optional: Defaults to 0.05'
                          format: double
                          type: number
                        force-priority:
                          description: 'Optional: Defaults to NO_PRIORITY'
                          type: string
                        max-memory:
                          description: 'Optional: Defaults to 0'
                          format: int64
                          type: integer
                        max-procs:
                          format: int32
                          type: integer
                        pseudo-estimate-ratio:
                          description: 'Optional: Defaults to 0.8'
                          format: double
                          type: number
                        query-feedback-limit:
                          description: 'Optional: Defaults to 1024'
                          format: int32
                          type: integer
                        run-auto-analyze:
                          description: 'Optional: Defaults to true'
                          type: boolean
                        stats-lease:
                          description: 'Optional: Defaults to 3s'
                          type: string
                        stmt-count-limit:
                          description: 'Optional: Defaults to 5000'
                          format: int32
                          type: integer
                        tcp-keep-alive:
                          description: 'Optional: Defaults to true'
                          type: boolean
                        txn-entry-count-limit:
                          description: 'Optional: Defaults to 300000'
                          format: int64
                          type: integer
                        txn-total-size-limit:
                          description: 'Optional: Defaults to 104857600'
                          format: int64
                          type: integer
                      type: object
                    pessimistic-txn:
                      description: PessimisticTxn is the config for pessimistic transaction.
                      properties:
                        enable:
                          description: 'Enable must be true for ''begin lock'' or
                            session variable to start a pessimistic transaction. Optional:
                            Defaults to true'
                          type: boolean
                        max-retry-count:
                          description: 'The max count of retry for a single statement
                            in a pessimistic transaction. Optional: Defaults to 256'
                          format: int32
                          type: integer
                      type: object
                    plugin:
                      description: Plugin is the config for plugin
                      properties:
                        dir:
                          type: string
                        load:
                          type: string
                      type: object
                    prepared-plan-cache:
                      description: PreparedPlanCache is the PreparedPlanCache section
                        of the config.
                      properties:
                        capacity:
                          description: 'Optional: Defaults to 100'
                          format: int32
                          type: integer
                        enabled:
                          description: 'Optional: Defaults to false'
                          type: boolean
                        memory-guard-ratio:
                          description: 'Optional: Defaults to 0.1'
                          format: double
                          type: number
                      type: object
                    proxy-protocol:
                      description: ProxyProtocol is the PROXY protocol section of
                        the config.
                      properties:
                        header-timeout:
                          description: PROXY protocol header read timeout, Unit is
                            second.
                          format: int32
                          type: integer
                        networks:
                          description: PROXY protocol acceptable client networks.
                            Empty *string means disable PROXY protocol, * means all
                            networks.
                          type: string
                      type: object
                    run-ddl:
                      description: 'Optional: Defaults to true'
                      type: boolean
                    security:
                      description: Security is the security section of the config.
                      properties:
                        cluster-ssl-ca:
                          type: string
                        cluster-ssl-cert:
                          type: string
                        cluster-ssl-key:
                          type: string
                        skip-grant-table:
                          type: boolean
                        ssl-ca:
                          type: string
                        ssl-cert:
                          type: string
                        ssl-key:
                          type: string
                      type: object
                    socket:
                      type: string
                    split-region-max-num:
                      description: 'Optional: Defaults to 1000'
                      format: int64
                      type: integer
                    split-table:
                      description: 'Optional: Defaults to true'
                      type: boolean
                    status:
                      description: Status is the status section of the config.
                      properties:
                        metrics-addr:
                          type: string
                        metrics-interval:
                          description: 'Optional: Defaults to 15'
                          format: int32
                          type: integer
                        record-db-qps:
                          description: 'Optional: Defaults to false'
                          type: boolean
                        report-status:
                          description: 'Optional: Defaults to true'
                          type: boolean
                      type: object
                    stmt-summary:
                      description: StmtSummary is the config for statement summary.
                      properties:
                        max-sql-length:
                          description: 'The maximum length of displayed normalized
                            SQL and sample SQL. Optional: Defaults to 4096'
                          format: int32
                          type: integer
                        max-stmt-count:
                          description: 'The maximum number of statements kept in memory.
                            Optional: Defaults to 100'
                          format: int32
                          type: integer
                      type: object
                    tikv-client:
                      description: TiKVClient is the config for tikv client.
                      properties:
                        batch-wait-size:
                          description: 'BatchWaitSize is the max wait size for batch.
                            Optional: Defaults to 8'
                          format: int32
                          type: integer
                        commit-timeout:
                          description: 'CommitTimeout is the max time which command
                            ''commit'' will wait. Optional: Defaults to 41s'
                          type: string
                        grpc-connection-count:
                          description: 'GrpcConnectionCount is the max gRPC connections
                            that will be established with each tikv-server. Optional:
                            Defaults to 16'
                          format: int32
                          type: integer
                        grpc-keepalive-time:
                          description: 'After a duration of this time in seconds if
                            the client doesn''t see any activity it pings the server
                            to see if the transport is still alive. Optional: Defaults
                            to 10'
                          format: int32
                          type: integer
                        grpc-keepalive-timeout:
                          description: 'After having pinged for keepalive check, the
                            client waits for a duration of Timeout in seconds and
                            if no activity is seen even after that the connection
                            is closed. Optional: Defaults to 3'
                          format: int32
                          type: integer
                        max-batch-size:
                          description: 'MaxBatchSize is the max batch size when calling
                            batch commands API. Optional: Defaults to 128'
                          format: int32
                          type: integer
                        max-batch-wait-time:
                          description: 'MaxBatchWaitTime in nanosecond is the max
                            wait time for batch. Optional: Defaults to 0'
                          format: int64
                          type: integer
                        max-txn-time-use:
                          description: 'MaxTxnTimeUse is the max time a Txn may use
                            (in seconds) from its startTS to commitTS. Optional: Defaults
                            to 590'
                          format: int32
                          type: integer
                        overload-threshold:
                          description: 'If TiKV load is greater than this, TiDB will
                            wait for a while to avoid little batch. Optional: Defaults
                            to 200'
                          format: int32
                          type: integer
                        region-cache-ttl:
                          description: 'If a Region has not been accessed for more
                            than the given duration (in seconds), it will be reloaded
                            from the PD. Optional: Defaults to 600'
                          format: int32
                          type: integer
                        store-limit:
                          description: 'If a store has been up to the limit, it will
                            return error for successive request to prevent the store
                            occupying too much token in dispatching level. Optional:
                            Defaults to 0'
                          format: int64
                          type: integer
                      type: object
                    token-limit:
                      description: 'Optional: Defaults to 1000'
                      format: int32
                      type: integer
                    treat-old-version-utf8-as-utf8mb4:
                      description: 'Optional: Defaults to true'
                      type: boolean
                    txn-local-latches:
                      description: TxnLocalLatches is the TxnLocalLatches section
                        of the config.
                      properties:
                        capacity:
                          format: int32
                          type: integer
                        enabled:
                          type: boolean
                      type: object
                  type: object
                configUpdateStrategy:
                  description: 'ConfigUpdateStrategy of the component. Override the
                    cluster-level updateStrategy if present Optional: Defaults to
                    cluster-level setting'
                  type: string
                enableTLSClient:
                  description: 'Whether enable the TLS connection between the SQL
                    client and TiDB server Optional: Defaults to false'
                  type: boolean
                hostNetwork:
                  description: 'Whether Hostnetwork of the component is enabled. Override
                    the cluster-level setting if present Optional: Defaults to cluster-level
                    setting'
                  type: boolean
                imagePullPolicy:
                  description: 'ImagePullPolicy of the component. Override the cluster-level
                    imagePullPolicy if present Optional: Defaults to cluster-level
                    setting'
                  type: string
                limits:
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                maxFailoverCount:
                  description: 'MaxFailoverCount limit the max replicas could be added
                    in failover, 0 means unlimited Optional: Defaults to 0'
                  format: int32
                  type: integer
                nodeSelector:
                  description: 'NodeSelector of the component. Merged into the cluster-level
                    nodeSelector if non-empty Optional: Defaults to cluster-level
                    setting'
                  type: object
                plugins:
                  description: Plugins is a list of plugins that are loaded by TiDB
                    server, empty means plugin disabled
                  items:
                    type: string
                  type: array
                podSecurityContext:
                  description: PodSecurityContext holds pod-level security attributes
                    and common container settings. Some fields are also present in
                    container.securityContext.  Field values of container.securityContext
                    take precedence over field values of PodSecurityContext.
                  properties:
                    fsGroup:
                      description: |-
                        A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

                        1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

                        If unset, the Kubelet will not modify the ownership and permissions of any volume.
                      format: int64
                      type: integer
                    runAsGroup:
                      description: The GID to run the entrypoint of the container
                        process. Uses runtime default if unset. May also be set in
                        SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                        the value specified in SecurityContext takes precedence for
                        that container.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: Indicates that the container must run as a non-root
                        user. If true, the Kubelet will validate the image at runtime
                        to ensure that it does not run as UID 0 (root) and fail to
                        start the container if it does. If unset or false, no such
                        validation will be performed. May also be set in SecurityContext.  If
                        set in both SecurityContext and PodSecurityContext, the value
                        specified in SecurityContext takes precedence.
                      type: boolean
                    runAsUser:
                      description: The UID to run the entrypoint of the container
                        process. Defaults to user specified in image metadata if unspecified.
                        May also be set in SecurityContext.  If set in both SecurityContext
                        and PodSecurityContext, the value specified in SecurityContext
                        takes precedence for that container.
                      format: int64
                      type: integer
                    seLinuxOptions:
                      description: SELinuxOptions are the labels to be applied to
                        the container
                      properties:
                        level:
                          description: Level is SELinux level label that applies to
                            the container.
                          type: string
                        role:
                          description: Role is a SELinux role label that applies to
                            the container.
                          type: string
                        type:
                          description: Type is a SELinux type label that applies to
                            the container.
                          type: string
                        user:
                          description: User is a SELinux user label that applies to
                            the container.
                          type: string
                      type: object
                    supplementalGroups:
                      description: A list of groups applied to the first process run
                        in each container, in addition to the container's primary
                        GID.  If unspecified, no groups will be added to any container.
                      items:
                        format: int64
                        type: integer
                      type: array
                    sysctls:
                      description: Sysctls hold a list of namespaced sysctls used
                        for the pod. Pods with unsupported sysctls (by the container
                        runtime) might fail to launch.
                      items:
                        description: Sysctl defines a kernel parameter to be set
                        properties:
                          name:
                            description: Name of a property to set
                            type: string
                          value:
                            description: Value of a property to set
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    windowsOptions:
                      description: WindowsSecurityContextOptions contain Windows-specific
                        options and credentials.
                      properties:
                        gmsaCredentialSpec:
                          description: GMSACredentialSpec is where the GMSA admission
                            webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                            inlines the contents of the GMSA credential spec named
                            by the GMSACredentialSpecName field. This field is alpha-level
                            and is only honored by servers that enable the WindowsGMSA
                            feature flag.
                          type: string
                        gmsaCredentialSpecName:
                          description: GMSACredentialSpecName is the name of the GMSA
                            credential spec to use. This field is alpha-level and
                            is only honored by servers that enable the WindowsGMSA
                            feature flag.
                          type: string
                        runAsUserName:
                          description: The UserName in Windows to run the entrypoint
                            of the container process. Defaults to the user specified
                            in image metadata if unspecified. May also be set in PodSecurityContext.
                            If set in both SecurityContext and PodSecurityContext,
                            the value specified in SecurityContext takes precedence.
                            This field is alpha-level and it is only honored by servers
                            that enable the WindowsRunAsUserName feature flag.
                          type: string
                      type: object
                  type: object
                priorityClassName:
                  description: 'PriorityClassName of the component. Override the cluster-level
                    one if present Optional: Defaults to cluster-level setting'
                  type: string
                replicas:
                  description: The desired ready replicas
                  format: int32
                  type: integer
                requests:
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                schedulerName:
                  description: 'SchedulerName of the component. Override the cluster-level
                    one if present Optional: Defaults to cluster-level setting'
                  type: string
                separateSlowLog:
                  description: 'Whether output the slow log in an separate sidecar
                    container Optional: Defaults to true'
                  type: boolean
                service:
                  properties:
                    exposeStatus:
                      description: 'Whether expose the status port Optional: Defaults
                        to true'
                      type: boolean
                    externalTrafficPolicy:
                      description: 'ExternalTrafficPolicy of the service Optional:
                        Defaults to omitted'
                      type: string
                  type: object
                slowLogTailer:
                  description: TiDBSlowLogTailerSpec represents an optional log tailer
                    sidecar with TiDB
                  properties:
                    limits:
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                tolerations:
                  description: 'Tolerations of the component. Override the cluster-level
                    tolerations if non-empty Optional: Defaults to cluster-level setting'
                  items:
                    description: The pod this Toleration is attached to tolerates
                      any taint that matches the triple <key,value,effect> using the
                      matching operator <operator>.
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty
                          means match all taint effects. When specified, allowed values
                          are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies
                          to. Empty means match all taint keys. If the key is empty,
                          operator must be Exists; this combination means to match
                          all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the
                          value. Valid operators are Exists and Equal. Defaults to
                          Equal. Exists is equivalent to wildcard for value, so that
                          a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time
                          the toleration (which must be of effect NoExecute, otherwise
                          this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do
                          not evict). Zero and negative values will be treated as
                          0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: Value is the taint value the toleration matches
                          to. If the operator is Exists, the value should be empty,
                          otherwise just a regular string.
                        type: string
                    type: object
                  type: array
                version:
                  description: 'Version of the component. Override the cluster-level
                    version if non-empty Optional: Defaults to cluster-level setting'
                  type: string
              required:
              - replicas
              type: object
            tikv:
              description: TiKVSpec contains details of TiKV members
              properties:
                affinity:
                  description: Affinity is a group of affinity scheduling rules.
                  properties:
                    nodeAffinity:
                      description: Node affinity is a group of node affinity scheduling
                        rules.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            matches the corresponding matchExpressions; the node(s)
                            with the highest sum are the most preferred.
                          items:
                            description: An empty preferred scheduling term matches
                              all objects with implicit weight 0 (i.e. it's a no-op).
                              A null preferred scheduling term matches no objects
                              (i.e. is also a no-op).
                            properties:
                              preference:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: Weight associated with matching the corresponding
                                  nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - weight
                            - preference
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: A node selector represents the union of the
                            results of one or more label queries over a set of nodes;
                            that is, it represents the OR of the selectors represented
                            by the node selector terms.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                          - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: Pod affinity is a group of inter pod affinity scheduling
                        rules.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            has pods which matches the corresponding podAffinityTerm;
                            the node(s) with the highest sum are the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any
                                  node on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label selector is a label query
                                      over a set of resources. The result of matchLabels
                                      and matchExpressions are ANDed. An empty label
                                      selector matches all objects. A null label selector
                                      matches no objects.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - weight
                            - podAffinityTerm
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to a pod label update),
                            the system may or may not try to eventually evict the
                            pod from its node. When there are multiple elements, the
                            lists of nodes corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: Pod anti affinity is a group of inter pod anti
                        affinity scheduling rules.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling anti-affinity
                            expressions, etc.), compute a sum by iterating through
                            the elements of this field and adding "weight" to the
                            sum if the node has pods which matches the corresponding
                            podAffinityTerm; the node(s) with the highest sum are
                            the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any
                                  node on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label selector is a label query
                                      over a set of resources. The result of matchLabels
                                      and matchExpressions are ANDed. An empty label
                                      selector matches all objects. A null label selector
                                      matches no objects.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - weight
                            - podAffinityTerm
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the anti-affinity requirements specified
                            by this field are not met at scheduling time, the pod
                            will not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met at
                            some point during pod execution (e.g. due to a pod label
                            update), the system may or may not try to eventually evict
                            the pod from its node. When there are multiple elements,
                            the lists of nodes corresponding to each podAffinityTerm
                            are intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                annotations:
                  description: 'Annotations of the component. Merged into the cluster-level
                    annotations if non-empty Optional: Defaults to cluster-level setting'
                  type: object
                baseImage:
                  description: Base image of the component, image tag is now allowed
                    during validation
                  type: string
                config:
                  description: TiKVConfig is the configuration of TiKV.
                  properties:
                    coprocessor:
                      description: TiKVCoprocessorConfig is the configuration of TiKV
                        Coprocessor component.
                      properties:
                        batch-split-limit:
                          description: One split check produces several split keys
                            in batch. This config limits the number of produced split
                            keys in one batch. optional
                          format: int64
                          type: integer
                        region-max-keys:
                          description: 'When the number of keys in Region [a,e) exceeds
                            the `region_max_keys`, it will be split into several Regions
                            [a,b), [b,c), [c,d), [d,e) and the number of keys in [a,b),
                            [b,c), [c,d) will be `region_split_keys`. See also: region-split-keys
                            Optional: Defaults to 1440000 optional'
                          format: int64
                          type: integer
                        region-max-size:
                          description: 'When Region [a,e) size exceeds `region_max_size`,
                            it will be split into several Regions [a,b), [b,c), [c,d),
                            [d,e) and the size of [a,b), [b,c), [c,d) will be `region_split_size`
                            (or a little larger). See also: region-split-size Optional:
                            Defaults to 144MB optional'
                          type: string
                        region-split-keys:
                          description: 'When the number of keys in Region [a,e) exceeds
                            the `region_max_keys`, it will be split into several Regions
                            [a,b), [b,c), [c,d), [d,e) and the number of keys in [a,b),
                            [b,c), [c,d) will be `region_split_keys`. See also: region-max-keys
                            Optional: Defaults to 960000 optional'
                          format: int64
                          type: integer
                        region-split-size:
                          description: 'When Region [a,e) size exceeds `region_max_size`,
                            it will be split into several Regions [a,b), [b,c), [c,d),
                            [d,e) and the size of [a,b), [b,c), [c,d) will be `region_split_size`
                            (or a little larger). See also: region-max-size Optional:
                            Defaults to 96MB optional'
                          type: string
                        split-region-on-table:
                          description: 'When it is set to `true`, TiKV will try to
                            split a Region with table prefix if that Region crosses
                            tables. It is recommended to turn off this option if there
                            will be a large number of tables created. Optional: Defaults
                            to false optional'
                          type: boolean
                      type: object
                    gc:
                      properties:
                        "\tbatch_keys":
                          description: 'Optional: Defaults to 512'
                          format: int64
                          type: integer
                        "\tmax_write_bytes_per_sec":
                          type: string
                      type: object
                    import:
                      properties:
                        import_dir:
                          type: string
                        max_open_engines:
                          format: int64
                          type: integer
                        max_prepare_duration:
                          type: string
                        num_import_jobs:
                          format: int64
                          type: integer
                        num_import_sst_jobs:
                          format: int64
                          type: integer
                        num_threads:
                          format: int64
                          type: integer
                        region_split_size:
                          type: string
                        stream_channel_window:
                          format: int64
                          type: integer
                        upload_speed_limit:
                          type: string
                      type: object
                    log-file:
                      type: string
                    log-level:
                      description: 'Optional: Defaults to info'
                      type: string
                    log-rotation-timespan:
                      description: 'Optional: Defaults to 24h'
                      type: string
                    panic-when-unexpected-key-or-data:
                      type: boolean
                    pd:
                      properties:
                        endpoints:
                          description: |-
                            The PD endpoints for the client.

                            Default is empty.
                          items:
                            type: string
                          type: array
                        retry_interval:
                          description: |-
                            The interval at which to retry a PD connection initialization.

                            Default is 300ms. Optional: Defaults to 300ms
                          type: string
                        retry_log_every:
                          description: |-
                            If the client observes the same error message on retry, it can repeat the message only every `n` times.

                            Default is 10. Set to 1 to disable this feature. Optional: Defaults to 10
                          format: int64
                          type: integer
                        retry_max_count:
                          description: |-
                            The maximum number of times to retry a PD connection initialization.

                            Default is isize::MAX, represented by -1. Optional: Defaults to -1
                          format: int64
                          type: integer
                      type: object
                    raftdb:
                      properties:
                        allow_concurrent_memtable_write:
                          type: boolean
                        bytes_per_sync:
                          type: string
                        compaction_readahead_size:
                          type: string
                        create_if_missing:
                          type: boolean
                        defaultcf:
                          description: TiKVCfConfig is the config of a cf
                          properties:
                            block-based-bloom-filter:
                              type: boolean
                            block-cache-size:
                              type: string
                            block-size:
                              type: string
                            bloom-filter-bits-per-key:
                              format: int64
                              type: integer
                            cache-index-and-filter-blocks:
                              type: boolean
                            compaction-pri:
                              format: int64
                              type: integer
                            compaction-style:
                              format: int64
                              type: integer
                            compression-per-level:
                              items:
                                type: string
                              type: array
                            disable-auto-compactions:
                              type: boolean
                            disable-block-cache:
                              type: boolean
                            dynamic-level-bytes:
                              type: boolean
                            enable-doubly-skiplist:
                              type: boolean
                            force-consistency-checks:
                              type: boolean
                            hard-pending-compaction-bytes-limit:
                              type: string
                            level0-file-num-compaction-trigger:
                              format: int64
                              type: integer
                            level0-slowdown-writes-trigger:
                              format: int64
                              type: integer
                            level0-stop-writes-trigger:
                              format: int64
                              type: integer
                            max-bytes-for-level-base:
                              type: string
                            max-bytes-for-level-multiplier:
                              format: int64
                              type: integer
                            max-compaction-bytes:
                              type: string
                            max-write-buffer-number:
                              format: int64
                              type: integer
                            min-write-buffer-number-to-merge:
                              format: int64
                              type: integer
                            num-levels:
                              format: int64
                              type: integer
                            optimize-filters-for-hits:
                              type: boolean
                            pin-l0-filter-and-index-blocks:
                              type: boolean
                            prop-keys-index-distance:
                              format: int64
                              type: integer
                            prop-size-index-distance:
                              format: int64
                              type: integer
                            read-amp-bytes-per-bit:
                              format: int64
                              type: integer
                            soft-pending-compaction-bytes-limit:
                              type: string
                            target-file-size-base:
                              type: string
                            titan:
                              description: TiKVTitanCfConfig is the titian config.
                              properties:
                                blob-cache-size:
                                  type: string
                                blob-file-compression:
                                  type: string
                                blob-run-mode:
                                  type: string
                                discardable-ratio:
                                  format: double
                                  type: number
                                max-gc-batch-size:
                                  type: string
                                merge-small-file-threshold:
                                  type: string
                                min-blob-size:
                                  type: string
                                min-gc-batch-size:
                                  type: string
                                sample-ratio:
                                  format: double
                                  type: number
                              type: object
                            use-bloom-filter:
                              type: boolean
                            whole-key-filtering:
                              type: boolean
                            write-buffer-size:
                              type: string
                          type: object
                        enable_pipelined_write:
                          type: boolean
                        enable_statistics:
                          type: boolean
                        info_log_dir:
                          type: string
                        info_log_keep_log_file_num:
                          format: int64
                          type: integer
                        info_log_max_size:
                          type: string
                        info_log_roll_time:
                          type: string
                        max_background_jobs:
                          format: int64
                          type: integer
                        max_manifest_file_size:
                          type: string
                        max_open_files:
                          format: int64
                          type: integer
                        max_sub_compactions:
                          format: int64
                          type: integer
                        max_total_wal_size:
                          type: string
                        stats_dump_period:
                          type: string
                        use_direct_io_for_flush_and_compaction:
                          type: boolean
                        wal_bytes_per_sync:
                          type: string
                        wal_dir:
                          type: string
                        wal_recovery_mode:
                          type: string
                        wal_size_limit:
                          type: string
                        wal_ttl_seconds:
                          format: int64
                          type: integer
                        writable_file_max_buffer_size:
                          type: string
                      type: object
                    raftstore:
                      description: TiKVRaftstoreConfig is the configuration of TiKV
                        raftstore component.
                      properties:
                        abnormal-leader-missing-duration:
                          description: / Similar to the max-leader-missing-duration,
                            instead it will log warnings and / try to alert monitoring
                            systems, if there is any.
                          type: string
                        allow-remove-leader:
                          type: boolean
                        apply-max-batch-size:
                          format: int64
                          type: integer
                        apply-pool-size:
                          description: 'Optional: Defaults to 2'
                          format: int64
                          type: integer
                        clean-stale-peer-delay:
                          description: 'delay time before deleting a stale peer Optional:
                            Defaults to 10m'
                          type: string
                        cleanup-import-sst-interval:
                          description: 'Optional: Defaults to 10m'
                          type: string
                        consistency-check-interval:
                          description: 'Interval (ms) to check region whether the
                            data is consistent. Optional: Defaults to 0'
                          type: string
                        hibernate-regions:
                          type: boolean
                        leader-transfer-max-log-lag:
                          format: int64
                          type: integer
                        lock-cf-compact-bytes-threshold:
                          description: 'Optional: Defaults to 256MB'
                          type: string
                        lock-cf-compact-interval:
                          description: 'Optional: Defaults to 10m'
                          type: string
                        max-leader-missing-duration:
                          description: / If the leader of a peer is missing for longer
                            than max-leader-missing-duration / the peer would ask
                            pd to confirm whether it is valid in any region. / If
                            the peer is stale and is not valid in any region, it will
                            destroy itself.
                          type: string
                        max-peer-down-duration:
                          description: '/ When a peer is not active for max-peer-down-duration
                            / the peer is considered to be down and is reported to
                            PD. Optional: Defaults to 5m'
                          type: string
                        merge-check-tick-interval:
                          description: / Interval to re-propose merge.
                          type: string
                        merge-max-log-gap:
                          description: / Max log gap allowed to propose merge.
                          format: int64
                          type: integer
                        messages-per-tick:
                          format: int64
                          type: integer
                        notify-capacity:
                          format: int64
                          type: integer
                        pd-heartbeat-tick-interval:
                          description: 'Optional: Defaults to 60s'
                          type: string
                        pd-store-heartbeat-tick-interval:
                          description: 'Optional: Defaults to 10s'
                          type: string
                        peer-stale-state-check-interval:
                          type: string
                        prevote:
                          description: 'Optional: Defaults to true'
                          type: boolean
                        raft-base-tick-interval:
                          description: raft-base-tick-interval is a base tick interval
                            (ms).
                          type: string
                        raft-election-timeout-ticks:
                          format: int64
                          type: integer
                        raft-entry-cache-life-time:
                          description: When a peer is not responding for this time,
                            leader will not keep entry cache for it.
                          type: string
                        raft-entry-max-size:
                          description: 'When the entry exceed the max size, reject
                            to propose it. Optional: Defaults to 8MB'
                          type: string
                        raft-heartbeat-ticks:
                          format: int64
                          type: integer
                        raft-log-gc-count-limit:
                          description: 'When entry count exceed this value, gc will
                            be forced trigger. Optional: Defaults to 72000'
                          format: int64
                          type: integer
                        raft-log-gc-size-limit:
                          description: 'When the approximate size of raft log entries
                            exceed this value gc will be forced trigger. Optional:
                            Defaults to 72MB'
                          type: string
                        raft-log-gc-threshold:
                          description: 'A threshold to gc stale raft log, must >=
                            1. Optional: Defaults to 50'
                          format: int64
                          type: integer
                        raft-log-gc-tick-interval:
                          description: 'Interval to gc unnecessary raft log (ms).
                            Optional: Defaults to 10s'
                          type: string
                        raft-reject-transfer-leader-duration:
                          description: When a peer is newly added, reject transferring
                            leader to the peer for a while.
                          type: string
                        raft-store-max-leader-lease:
                          description: The lease provided by a successfully proposed
                            and applied entry.
                          type: string
                        region-compact-check-interval:
                          description: '/ Interval (ms) to check whether start compaction
                            for a region. Optional: Defaults to 5m'
                          type: string
                        region-compact-check-step:
                          description: '/ Number of regions for each time checking.
                            Optional: Defaults to 100'
                          format: int64
                          type: integer
                        region-compact-min-tombstones:
                          description: '/ Minimum number of tombstones to trigger
                            manual compaction. Optional: Defaults to 10000'
                          format: int64
                          type: integer
                        region-compact-tombstones-percent:
                          description: '/ Minimum percentage of tombstones to trigger
                            manual compaction. / Should between 1 and 100. Optional:
                            Defaults to 30'
                          format: int64
                          type: integer
                        region-split-check-diff:
                          description: '/ When size change of region exceed the diff
                            since last check, it / will be checked again whether it
                            should be split. Optional: Defaults to 6MB'
                          type: string
                        report-region-flow-interval:
                          type: string
                        right-derive-when-split:
                          description: Right region derive origin region id when split.
                          type: boolean
                        snap-apply-batch-size:
                          type: string
                        snap-gc-timeout:
                          type: string
                        snap-mgr-gc-tick-interval:
                          type: string
                        split-region-check-tick-interval:
                          description: 'Interval (ms) to check region whether need
                            to be split or not. Optional: Defaults to 10s'
                          type: string
                        store-max-batch-size:
                          format: int64
                          type: integer
                        store-pool-size:
                          description: 'Optional: Defaults to 2'
                          format: int64
                          type: integer
                        sync-log:
                          description: 'true for high reliability, prevent data loss
                            when power failure. Optional: Defaults to true'
                          type: boolean
                        use-delete-range:
                          type: boolean
                      type: object
                    readpool:
                      properties:
                        coprocessor:
                          properties:
                            high_concurrency:
                              description: 'Optional: Defaults to 8'
                              format: int64
                              type: integer
                            low_concurrency:
                              description: 'Optional: Defaults to 8'
                              format: int64
                              type: integer
                            max_tasks_per_worker_high:
                              description: 'Optional: Defaults to 2000'
                              format: int64
                              type: integer
                            max_tasks_per_worker_low:
                              description: 'Optional: Defaults to 2000'
                              format: int64
                              type: integer
                            max_tasks_per_worker_normal:
                              description: 'Optional: Defaults to 2000'
                              format: int64
                              type: integer
                            normal_concurrency:
                              description: 'Optional: Defaults to 8'
                              format: int64
                              type: integer
                            stack_size:
                              description: 'Optional: Defaults to 10MB'
                              type: string
                          type: object
                        storage:
                          properties:
                            high_concurrency:
                              description: 'Optional: Defaults to 4'
                              format: int64
                              type: integer
                            low_concurrency:
                              description: 'Optional: Defaults to 4'
                              format: int64
                              type: integer
                            max_tasks_per_worker_high:
                              description: 'Optional: Defaults to 2000'
                              format: int64
                              type: integer
                            max_tasks_per_worker_low:
                              description: 'Optional: Defaults to 2000'
                              format: int64
                              type: integer
                            max_tasks_per_worker_normal:
                              description: 'Optional: Defaults to 2000'
                              format: int64
                              type: integer
                            normal_concurrency:
                              description: 'Optional: Defaults to 4'
                              format: int64
                              type: integer
                            stack_size:
                              description: 'Optional: Defaults to 10MB'
                              type: string
                          type: object
                      type: object
                    rocksdb:
                      description: TiKVDbConfig is the rocksdb config.
                      properties:
                        auto-tuned:
                          type: boolean
                        bytes-per-sync:
                          type: string
                        compaction-readahead-size:
                          description: 'Optional: Defaults to 0'
                          type: string
                        create-if-missing:
                          description: 'Optional: Defaults to true'
                          type: boolean
                        defaultcf:
                          description: TiKVCfConfig is the config of a cf
                          properties:
                            block-based-bloom-filter:
                              type: boolean
                            block-cache-size:
                              type: string
                            block-size:
                              type: string
                            bloom-filter-bits-per-key:
                              format: int64
                              type: integer
                            cache-index-and-filter-blocks:
                              type: boolean
                            compaction-pri:
                              format: int64
                              type: integer
                            compaction-style:
                              format: int64
                              type: integer
                            compression-per-level:
                              items:
                                type: string
                              type: array
                            disable-auto-compactions:
                              type: boolean
                            disable-block-cache:
                              type: boolean
                            dynamic-level-bytes:
                              type: boolean
                            enable-doubly-skiplist:
                              type: boolean
                            force-consistency-checks:
                              type: boolean
                            hard-pending-compaction-bytes-limit:
                              type: string
                            level0-file-num-compaction-trigger:
                              format: int64
                              type: integer
                            level0-slowdown-writes-trigger:
                              format: int64
                              type: integer
                            level0-stop-writes-trigger:
                              format: int64
                              type: integer
                            max-bytes-for-level-base:
                              type: string
                            max-bytes-for-level-multiplier:
                              format: int64
                              type: integer
                            max-compaction-bytes:
                              type: string
                            max-write-buffer-number:
                              format: int64
                              type: integer
                            min-write-buffer-number-to-merge:
                              format: int64
                              type: integer
                            num-levels:
                              format: int64
                              type: integer
                            optimize-filters-for-hits:
                              type: boolean
                            pin-l0-filter-and-index-blocks:
                              type: boolean
                            prop-keys-index-distance:
                              format: int64
                              type: integer
                            prop-size-index-distance:
                              format: int64
                              type: integer
                            read-amp-bytes-per-bit:
                              format: int64
                              type: integer
                            soft-pending-compaction-bytes-limit:
                              type: string
                            target-file-size-base:
                              type: string
                            titan:
                              description: TiKVTitanCfConfig is the titian config.
                              properties:
                                blob-cache-size:
                                  type: string
                                blob-file-compression:
                                  type: string
                                blob-run-mode:
                                  type: string
                                discardable-ratio:
                                  format: double
                                  type: number
                                max-gc-batch-size:
                                  type: string
                                merge-small-file-threshold:
                                  type: string
                                min-blob-size:
                                  type: string
                                min-gc-batch-size:
                                  type: string
                                sample-ratio:
                                  format: double
                                  type: number
                              type: object
                            use-bloom-filter:
                              type: boolean
                            whole-key-filtering:
                              type: boolean
                            write-buffer-size:
                              type: string
                          type: object
                        enable-pipelined-write:
                          type: boolean
                        enable-statistics:
                          description: 'Optional: Defaults to true'
                          type: boolean
                        info-log-dir:
                          type: string
                        info-log-keep-log-file-num:
                          format: int64
                          type: integer
                        info-log-max-size:
                          type: string
                        info-log-roll-time:
                          type: string
                        lockcf:
                          description: TiKVCfConfig is the config of a cf
                          properties:
                            block-based-bloom-filter:
                              type: boolean
                            block-cache-size:
                              type: string
                            block-size:
                              type: string
                            bloom-filter-bits-per-key:
                              format: int64
                              type: integer
                            cache-index-and-filter-blocks:
                              type: boolean
                            compaction-pri:
                              format: int64
                              type: integer
                            compaction-style:
                              format: int64
                              type: integer
                            compression-per-level:
                              items:
                                type: string
                              type: array
                            disable-auto-compactions:
                              type: boolean
                            disable-block-cache:
                              type: boolean
                            dynamic-level-bytes:
                              type: boolean
                            enable-doubly-skiplist:
                              type: boolean
                            force-consistency-checks:
                              type: boolean
                            hard-pending-compaction-bytes-limit:
                              type: string
                            level0-file-num-compaction-trigger:
                              format: int64
                              type: integer
                            level0-slowdown-writes-trigger:
                              format: int64
                              type: integer
                            level0-stop-writes-trigger:
                              format: int64
                              type: integer
                            max-bytes-for-level-base:
                              type: string
                            max-bytes-for-level-multiplier:
                              format: int64
                              type: integer
                            max-compaction-bytes:
                              type: string
                            max-write-buffer-number:
                              format: int64
                              type: integer
                            min-write-buffer-number-to-merge:
                              format: int64
                              type: integer
                            num-levels:
                              format: int64
                              type: integer
                            optimize-filters-for-hits:
                              type: boolean
                            pin-l0-filter-and-index-blocks:
                              type: boolean
                            prop-keys-index-distance:
                              format: int64
                              type: integer
                            prop-size-index-distance:
                              format: int64
                              type: integer
                            read-amp-bytes-per-bit:
                              format: int64
                              type: integer
                            soft-pending-compaction-bytes-limit:
                              type: string
                            target-file-size-base:
                              type: string
                            titan:
                              description: TiKVTitanCfConfig is the titian config.
                              properties:
                                blob-cache-size:
                                  type: string
                                blob-file-compression:
                                  type: string
                                blob-run-mode:
                                  type: string
                                discardable-ratio:
                                  format: double
                                  type: number
                                max-gc-batch-size:
                                  type: string
                                merge-small-file-threshold:
                                  type: string
                                min-blob-size:
                                  type: string
                                min-gc-batch-size:
                                  type: string
                                sample-ratio:
                                  format: double
                                  type: number
                              type: object
                            use-bloom-filter:
                              type: boolean
                            whole-key-filtering:
                              type: boolean
                            write-buffer-size:
                              type: string
                          type: object
                        max-background-jobs:
                          description: 'Optional: Defaults to 8'
                          format: int64
                          type: integer
                        max-manifest-file-size:
                          description: 'Optional: Defaults to 128MB'
                          type: string
                        max-open-files:
                          description: 'Optional: Defaults to 40960'
                          format: int64
                          type: integer
                        max-sub-compactions:
                          description: 'Optional: Defaults to 3'
                          format: int64
                          type: integer
                        max-total-wal-size:
                          description: 'Optional: Defaults to 4GB'
                          type: string
                        raftcf:
                          description: TiKVCfConfig is the config of a cf
                          properties:
                            block-based-bloom-filter:
                              type: boolean
                            block-cache-size:
                              type: string
                            block-size:
                              type: string
                            bloom-filter-bits-per-key:
                              format: int64
                              type: integer
                            cache-index-and-filter-blocks:
                              type: boolean
                            compaction-pri:
                              format: int64
                              type: integer
                            compaction-style:
                              format: int64
                              type: integer
                            compression-per-level:
                              items:
                                type: string
                              type: array
                            disable-auto-compactions:
                              type: boolean
                            disable-block-cache:
                              type: boolean
                            dynamic-level-bytes:
                              type: boolean
                            enable-doubly-skiplist:
                              type: boolean
                            force-consistency-checks:
                              type: boolean
                            hard-pending-compaction-bytes-limit:
                              type: string
                            level0-file-num-compaction-trigger:
                              format: int64
                              type: integer
                            level0-slowdown-writes-trigger:
                              format: int64
                              type: integer
                            level0-stop-writes-trigger:
                              format: int64
                              type: integer
                            max-bytes-for-level-base:
                              type: string
                            max-bytes-for-level-multiplier:
                              format: int64
                              type: integer
                            max-compaction-bytes:
                              type: string
                            max-write-buffer-number:
                              format: int64
                              type: integer
                            min-write-buffer-number-to-merge:
                              format: int64
                              type: integer
                            num-levels:
                              format: int64
                              type: integer
                            optimize-filters-for-hits:
                              type: boolean
                            pin-l0-filter-and-index-blocks:
                              type: boolean
                            prop-keys-index-distance:
                              format: int64
                              type: integer
                            prop-size-index-distance:
                              format: int64
                              type: integer
                            read-amp-bytes-per-bit:
                              format: int64
                              type: integer
                            soft-pending-compaction-bytes-limit:
                              type: string
                            target-file-size-base:
                              type: string
                            titan:
                              description: TiKVTitanCfConfig is the titian config.
                              properties:
                                blob-cache-size:
                                  type: string
                                blob-file-compression:
                                  type: string
                                blob-run-mode:
                                  type: string
                                discardable-ratio:
                                  format: double
                                  type: number
                                max-gc-batch-size:
                                  type: string
                                merge-small-file-threshold:
                                  type: string
                                min-blob-size:
                                  type: string
                                min-gc-batch-size:
                                  type: string
                                sample-ratio:
                                  format: double
                                  type: number
                              type: object
                            use-bloom-filter:
                              type: boolean
                            whole-key-filtering:
                              type: boolean
                            write-buffer-size:
                              type: string
                          type: object
                        rate-bytes-per-sec:
                          type: string
                        rate-limiter-mode:
                          format: int64
                          type: integer
                        stats-dump-period:
                          description: 'Optional: Defaults to 10m'
                          type: string
                        titan:
                          description: TiKVTitanDBConfig is the config a titian db.
                          properties:
                            dirname:
                              type: string
                            disable-gc:
                              type: boolean
                            enabled:
                              type: boolean
                            max-background-gc:
                              format: int64
                              type: integer
                            purge-obsolete-files-period:
                              description: The value of this field will be truncated
                                to seconds.
                              type: string
                          type: object
                        use-direct-io-for-flush-and-compaction:
                          type: boolean
                        wal-bytes-per-sync:
                          type: string
                        wal-recovery-mode:
                          description: 'Optional: Defaults to 2'
                          format: int64
                          type: integer
                        wal-size-limit:
                          type: string
                        wal-ttl-seconds:
                          format: int64
                          type: integer
                        writable-file-max-buffer-size:
                          type: string
                        writecf:
                          description: TiKVCfConfig is the config of a cf
                          properties:
                            block-based-bloom-filter:
                              type: boolean
                            block-cache-size:
                              type: string
                            block-size:
                              type: string
                            bloom-filter-bits-per-key:
                              format: int64
                              type: integer
                            cache-index-and-filter-blocks:
                              type: boolean
                            compaction-pri:
                              format: int64
                              type: integer
                            compaction-style:
                              format: int64
                              type: integer
                            compression-per-level:
                              items:
                                type: string
                              type: array
                            disable-auto-compactions:
                              type: boolean
                            disable-block-cache:
                              type: boolean
                            dynamic-level-bytes:
                              type: boolean
                            enable-doubly-skiplist:
                              type: boolean
                            force-consistency-checks:
                              type: boolean
                            hard-pending-compaction-bytes-limit:
                              type: string
                            level0-file-num-compaction-trigger:
                              format: int64
                              type: integer
                            level0-slowdown-writes-trigger:
                              format: int64
                              type: integer
                            level0-stop-writes-trigger:
                              format: int64
                              type: integer
                            max-bytes-for-level-base:
                              type: string
                            max-bytes-for-level-multiplier:
                              format: int64
                              type: integer
                            max-compaction-bytes:
                              type: string
                            max-write-buffer-number:
                              format: int64
                              type: integer
                            min-write-buffer-number-to-merge:
                              format: int64
                              type: integer
                            num-levels:
                              format: int64
                              type: integer
                            optimize-filters-for-hits:
                              type: boolean
                            pin-l0-filter-and-index-blocks:
                              type: boolean
                            prop-keys-index-distance:
                              format: int64
                              type: integer
                            prop-size-index-distance:
                              format: int64
                              type: integer
                            read-amp-bytes-per-bit:
                              format: int64
                              type: integer
                            soft-pending-compaction-bytes-limit:
                              type: string
                            target-file-size-base:
                              type: string
                            titan:
                              description: TiKVTitanCfConfig is the titian config.
                              properties:
                                blob-cache-size:
                                  type: string
                                blob-file-compression:
                                  type: string
                                blob-run-mode:
                                  type: string
                                discardable-ratio:
                                  format: double
                                  type: number
                                max-gc-batch-size:
                                  type: string
                                merge-small-file-threshold:
                                  type: string
                                min-blob-size:
                                  type: string
                                min-gc-batch-size:
                                  type: string
                                sample-ratio:
                                  format: double
                                  type: number
                              type: object
                            use-bloom-filter:
                              type: boolean
                            whole-key-filtering:
                              type: boolean
                            write-buffer-size:
                              type: string
                          type: object
                      type: object
                    security:
                      properties:
                        ca_path:
                          type: string
                        cert_path:
                          type: string
                        cipher_file:
                          type: string
                        key_path:
                          type: string
                        override_ssl_target:
                          type: string
                      type: object
                    server:
                      description: TiKVServerConfig is the configuration of TiKV server.
                      properties:
                        concurrent-recv-snap-limit:
                          description: 'Optional: Defaults to 32'
                          format: int32
                          type: integer
                        concurrent-send-snap-limit:
                          description: 'Optional: Defaults to 32'
                          format: int32
                          type: integer
                        end-point-batch-row-limit:
                          format: int32
                          type: integer
                        end-point-enable-batch-if-possible:
                          format: int32
                          type: integer
                        end-point-recursion-limit:
                          description: 'Optional: Defaults to 1000'
                          format: int32
                          type: integer
                        end-point-request-max-handle-duration:
                          type: string
                        end-point-stream-batch-row-limit:
                          format: int32
                          type: integer
                        end-point-stream-channel-size:
                          format: int32
                          type: integer
                        grpc-compression-type:
                          description: 'Optional: Defaults to none'
                          type: string
                        grpc-concurrency:
                          description: 'Optional: Defaults to 4'
                          format: int32
                          type: integer
                        grpc-concurrent-stream:
                          description: 'Optional: Defaults to 1024'
                          format: int32
                          type: integer
                        grpc-keepalive-time:
                          description: 'Optional: Defaults to 10s'
                          type: string
                        grpc-keepalive-timeout:
                          description: 'Optional: Defaults to 3s'
                          type: string
                        grpc-raft-conn-num:
                          description: 'Optional: Defaults to 10'
                          format: int32
                          type: integer
                        grpc-stream-initial-window-size:
                          description: 'Optional: Defaults to 2MB'
                          type: string
                        grpc_memory_pool_quota:
                          description: 'Optional: Defaults to 32G'
                          type: string
                        heavy-load-threshold:
                          format: int32
                          type: integer
                        heavy-load-wait-duration:
                          description: 'Optional: Defaults to 60s'
                          type: string
                        labels:
                          type: object
                        snap-max-total-size:
                          type: string
                        snap-max-write-bytes-per-sec:
                          description: 'Optional: Defaults to 100MB'
                          type: string
                        stats-concurrency:
                          format: int32
                          type: integer
                        status-thread-pool-size:
                          description: 'Optional: Defaults to 1'
                          type: string
                      type: object
                    storage:
                      description: TiKVStorageConfig is the config of storage
                      properties:
                        block-cache:
                          description: TiKVBlockCacheConfig is the config of a block
                            cache
                          properties:
                            capacity:
                              type: string
                            high-pri-pool-ratio:
                              format: double
                              type: number
                            memory-allocator:
                              type: string
                            num-shard-bits:
                              format: int64
                              type: integer
                            shared:
                              description: 'Optional: Defaults to true'
                              type: boolean
                            strict-capacity-limit:
                              type: boolean
                          type: object
                        max-key-size:
                          format: int64
                          type: integer
                        scheduler-concurrency:
                          description: 'Optional: Defaults to 2048000'
                          format: int64
                          type: integer
                        scheduler-notify-capacity:
                          format: int64
                          type: integer
                        scheduler-pending-write-threshold:
                          description: 'Optional: Defaults to 100MB'
                          type: string
                        scheduler-worker-pool-size:
                          description: 'Optional: Defaults to 4'
                          format: int64
                          type: integer
                      type: object
                  type: object
                configUpdateStrategy:
                  description: 'ConfigUpdateStrategy of the component. Override the
                    cluster-level updateStrategy if present Optional: Defaults to
                    cluster-level setting'
                  type: string
                hostNetwork:
                  description: 'Whether Hostnetwork of the component is enabled. Override
                    the cluster-level setting if present Optional: Defaults to cluster-level
                    setting'
                  type: boolean
                imagePullPolicy:
                  description: 'ImagePullPolicy of the component. Override the cluster-level
                    imagePullPolicy if present Optional: Defaults to cluster-level
                    setting'
                  type: string
                limits:
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                maxFailoverCount:
                  description: 'MaxFailoverCount limit the max replicas could be added
                    in failover, 0 means unlimited Optional: Defaults to 0'
                  format: int32
                  type: integer
                nodeSelector:
                  description: 'NodeSelector of the component. Merged into the cluster-level
                    nodeSelector if non-empty Optional: Defaults to cluster-level
                    setting'
                  type: object
                podSecurityContext:
                  description: PodSecurityContext holds pod-level security attributes
                    and common container settings. Some fields are also present in
                    container.securityContext.  Field values of container.securityContext
                    take precedence over field values of PodSecurityContext.
                  properties:
                    fsGroup:
                      description: |-
                        A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

                        1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

                        If unset, the Kubelet will not modify the ownership and permissions of any volume.
                      format: int64
                      type: integer
                    runAsGroup:
                      description: The GID to run the entrypoint of the container
                        process. Uses runtime default if unset. May also be set in
                        SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                        the value specified in SecurityContext takes precedence for
                        that container.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: Indicates that the container must run as a non-root
                        user. If true, the Kubelet will validate the image at runtime
                        to ensure that it does not run as UID 0 (root) and fail to
                        start the container if it does. If unset or false, no such
                        validation will be performed. May also be set in SecurityContext.  If
                        set in both SecurityContext and PodSecurityContext, the value
                        specified in SecurityContext takes precedence.
                      type: boolean
                    runAsUser:
                      description: The UID to run the entrypoint of the container
                        process. Defaults to user specified in image metadata if unspecified.
                        May also be set in SecurityContext.  If set in both SecurityContext
                        and PodSecurityContext, the value specified in SecurityContext
                        takes precedence for that container.
                      format: int64
                      type: integer
                    seLinuxOptions:
                      description: SELinuxOptions are the labels to be applied to
                        the container
                      properties:
                        level:
                          description: Level is SELinux level label that applies to
                            the container.
                          type: string
                        role:
                          description: Role is a SELinux role label that applies to
                            the container.
                          type: string
                        type:
                          description: Type is a SELinux type label that applies to
                            the container.
                          type: string
                        user:
                          description: User is a SELinux user label that applies to
                            the container.
                          type: string
                      type: object
                    supplementalGroups:
                      description: A list of groups applied to the first process run
                        in each container, in addition to the container's primary
                        GID.  If unspecified, no groups will be added to any container.
                      items:
                        format: int64
                        type: integer
                      type: array
                    sysctls:
                      description: Sysctls hold a list of namespaced sysctls used
                        for the pod. Pods with unsupported sysctls (by the container
                        runtime) might fail to launch.
                      items:
                        description: Sysctl defines a kernel parameter to be set
                        properties:
                          name:
                            description: Name of a property to set
                            type: string
                          value:
                            description: Value of a property to set
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    windowsOptions:
                      description: WindowsSecurityContextOptions contain Windows-specific
                        options and credentials.
                      properties:
                        gmsaCredentialSpec:
                          description: GMSACredentialSpec is where the GMSA admission
                            webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                            inlines the contents of the GMSA credential spec named
                            by the GMSACredentialSpecName field. This field is alpha-level
                            and is only honored by servers that enable the WindowsGMSA
                            feature flag.
                          type: string
                        gmsaCredentialSpecName:
                          description: GMSACredentialSpecName is the name of the GMSA
                            credential spec to use. This field is alpha-level and
                            is only honored by servers that enable the WindowsGMSA
                            feature flag.
                          type: string
                        runAsUserName:
                          description: The UserName in Windows to run the entrypoint
                            of the container process. Defaults to the user specified
                            in image metadata if unspecified. May also be set in PodSecurityContext.
                            If set in both SecurityContext and PodSecurityContext,
                            the value specified in SecurityContext takes precedence.
                            This field is alpha-level and it is only honored by servers
                            that enable the WindowsRunAsUserName feature flag.
                          type: string
                      type: object
                  type: object
                priorityClassName:
                  description: 'PriorityClassName of the component. Override the cluster-level
                    one if present Optional: Defaults to cluster-level setting'
                  type: string
                privileged:
                  description: 'Whether create the TiKV container in privileged mode,
                    it is highly discouraged to enable this in critical environment.
                    Optional: defaults to false'
                  type: boolean
                replicas:
                  description: The desired ready replicas
                  format: int32
                  type: integer
                requests:
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                schedulerName:
                  description: 'SchedulerName of the component. Override the cluster-level
                    one if present Optional: Defaults to cluster-level setting'
                  type: string
                storageClassName:
                  description: 'The storageClassName of the persistent volume for
                    TiKV data storage, empty string means not explicitly set and use
                    the cluster default set by admission controller. Optionals: Defaults
                    to the default-storage-class-name set in the tidb-operator'
                  type: string
                tolerations:
                  description: 'Tolerations of the component. Override the cluster-level
                    tolerations if non-empty Optional: Defaults to cluster-level setting'
                  items:
                    description: The pod this Toleration is attached to tolerates
                      any taint that matches the triple <key,value,effect> using the
                      matching operator <operator>.
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty
                          means match all taint effects. When specified, allowed values
                          are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies
                          to. Empty means match all taint keys. If the key is empty,
                          operator must be Exists; this combination means to match
                          all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the
                          value. Valid operators are Exists and Equal. Defaults to
                          Equal. Exists is equivalent to wildcard for value, so that
                          a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time
                          the toleration (which must be of effect NoExecute, otherwise
                          this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do
                          not evict). Zero and negative values will be treated as
                          0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: Value is the taint value the toleration matches
                          to. If the operator is Exists, the value should be empty,
                          otherwise just a regular string.
                        type: string
                    type: object
                  type: array
                version:
                  description: 'Version of the component. Override the cluster-level
                    version if non-empty Optional: Defaults to cluster-level setting'
                  type: string
              required:
              - replicas
              type: object
            timezone:
              description: 'Time zone of TiDB cluster Pods Optional: Defaults to UTC'
              type: string
            tolerations:
              description: Base tolerations of TiDB cluster Pods, components may add
                more tolreations upon this respectively
              items:
                description: The pod this Toleration is attached to tolerates any
                  taint that matches the triple <key,value,effect> using the matching
                  operator <operator>.
                properties:
                  effect:
                    description: Effect indicates the taint effect to match. Empty
                      means match all taint effects. When specified, allowed values
                      are NoSchedule, PreferNoSchedule and NoExecute.
                    type: string
                  key:
                    description: Key is the taint key that the toleration applies
                      to. Empty means match all taint keys. If the key is empty, operator
                      must be Exists; this combination means to match all values and
                      all keys.
                    type: string
                  operator:
                    description: Operator represents a key's relationship to the value.
                      Valid operators are Exists and Equal. Defaults to Equal. Exists
                      is equivalent to wildcard for value, so that a pod can tolerate
                      all taints of a particular category.
                    type: string
                  tolerationSeconds:
                    description: TolerationSeconds represents the period of time the
                      toleration (which must be of effect NoExecute, otherwise this
                      field is ignored) tolerates the taint. By default, it is not
                      set, which means tolerate the taint forever (do not evict).
                      Zero and negative values will be treated as 0 (evict immediately)
                      by the system.
                    format: int64
                    type: integer
                  value:
                    description: Value is the taint value the toleration matches to.
                      If the operator is Exists, the value should be empty, otherwise
                      just a regular string.
                    type: string
                type: object
              type: array
            version:
              description: TiDB cluster version
              type: string
          required:
          - pd
          - tidb
          - tikv
          type: object
      type: object
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: backups.pingcap.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.backupPath
    description: The full path of backup data
    name: BackupPath
    type: string
  - JSONPath: .status.backupSize
    description: The data size of the backup
    name: BackupSize
    type: integer
  - JSONPath: .status.commitTs
    description: The commit ts of tidb cluster dump
    name: CommitTS
    type: string
  - JSONPath: .status.timeStarted
    description: The time at which the backup was started
    name: Started
    priority: 1
    type: date
  - JSONPath: .status.timeCompleted
    description: The time at which the backup was completed
    name: Completed
    priority: 1
    type: date
  group: pingcap.com
  names:
    kind: Backup
    plural: backups
    shortNames:
    - bk
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        spec:
          description: BackupSpec contains the backup specification for a tidb cluster.
          properties:
            backupType:
              description: Type is the backup type for tidb cluster.
              type: string
            br:
              description: BRConfig contains config for BR
              properties:
                ca:
                  description: CA is the CA certificate path for TLS connection
                  type: string
                cert:
                  description: Cert is the certificate path for TLS connection
                  type: string
                checksum:
                  description: Checksum specifies whether to run checksum after backup
                  type: boolean
                concurrency:
                  description: Concurrency is the size of thread pool on each node
                    that execute the backup task
                  format: int64
                  type: integer
                key:
                  description: Key is the private key path for TLS connection
                  type: string
                logLevel:
                  description: LogLevel is the log level
                  type: string
                onLine:
                  description: OnLine specifies whether online during restore
                  type: boolean
                pd:
                  description: PDAddress is the PD address of the tidb cluster
                  type: string
                rateLimit:
                  description: RateLimit is the rate limit of the backup task, MB/s
                    per node
                  format: int32
                  type: integer
                sendCredToTikv:
                  description: SendCredToTikv specifies whether to send credentials
                    to TiKV
                  type: boolean
                statusAddr:
                  description: StatusAddr is the HTTP listening address for the status
                    report service. Set to empty string to disable
                  type: string
                timeAgo:
                  description: TimeAgo is the history version of the backup task,
                    e.g. 1m, 1h
                  type: string
              required:
              - pd
              type: object
            from:
              description: TiDBAccessConfig defines the configuration for access tidb
                cluster
              properties:
                host:
                  description: Host is the tidb cluster access address
                  type: string
                port:
                  description: Port is the port number to use for connecting tidb
                    cluster
                  format: int32
                  type: integer
                secretName:
                  description: SecretName is the name of secret which stores tidb
                    cluster's password.
                  type: string
                user:
                  description: User is the user for login tidb cluster
                  type: string
              required:
              - host
              - secretName
              type: object
            gcs:
              description: GcsStorageProvider represents the google cloud storage
                for storing backups.
              properties:
                bucket:
                  description: Bucket in which to store the backup data.
                  type: string
                bucketAcl:
                  description: BucketAcl represents the access control list for new
                    buckets
                  type: string
                location:
                  description: Location in which the gcs bucket is located.
                  type: string
                objectAcl:
                  description: ObjectAcl represents the access control list for new
                    objects
                  type: string
                path:
                  description: 'Path is the full path where the backup is saved. The
                    format of the path must be: "<bucket-name>/<path-to-backup-file>"'
                  type: string
                projectId:
                  description: ProjectId represents the project that organizes all
                    your Google Cloud Platform resources
                  type: string
                secretName:
                  description: SecretName is the name of secret which stores the gcs
                    service account credentials JSON .
                  type: string
                storageClass:
                  description: StorageClass represents the storage class
                  type: string
              required:
              - projectId
              - secretName
              type: object
            s3:
              description: S3StorageProvider represents a S3 compliant storage for
                storing backups.
              properties:
                acl:
                  description: Acl represents access control permissions for this
                    bucket
                  type: string
                bucket:
                  description: Bucket in which to store the backup data.
                  type: string
                endpoint:
                  description: Endpoint of S3 compatible storage service
                  type: string
                path:
                  description: 'Path is the full path where the backup is saved. The
                    format of the path must be: "<bucket-name>/<path-to-backup-file>"'
                  type: string
                prefix:
                  description: Prefix for the keys.
                  type: string
                provider:
                  description: Provider represents the specific storage provider that
                    implements the S3 interface
                  type: string
                region:
                  description: Region in which the S3 compatible bucket is located.
                  type: string
                secretName:
                  description: SecretName is the name of secret which stores S3 compliant
                    storage access key and secret key.
                  type: string
                sse:
                  description: SSE Sever-Side Encryption.
                  type: string
                storageClass:
                  description: StorageClass represents the storage class
                  type: string
              required:
              - provider
              - secretName
              type: object
            storageClassName:
              description: StorageClassName is the storage class for backup job's
                PV.
              type: string
            storageSize:
              description: StorageSize is the request storage size for backup job
              type: string
          type: object
      type: object
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: restores.pingcap.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.timeStarted
    description: The time at which the backup was started
    name: Started
    type: date
  - JSONPath: .status.timeCompleted
    description: The time at which the restore was completed
    name: Completed
    type: date
  group: pingcap.com
  names:
    kind: Restore
    plural: restores
    shortNames:
    - rt
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        spec:
          description: RestoreSpec contains the specification for a restore of a tidb
            cluster backup.
          properties:
            backupType:
              description: Type is the backup type for tidb cluster.
              type: string
            gcs:
              description: GcsStorageProvider represents the google cloud storage
                for storing backups.
              properties:
                bucket:
                  description: Bucket in which to store the backup data.
                  type: string
                bucketAcl:
                  description: BucketAcl represents the access control list for new
                    buckets
                  type: string
                location:
                  description: Location in which the gcs bucket is located.
                  type: string
                objectAcl:
                  description: ObjectAcl represents the access control list for new
                    objects
                  type: string
                path:
                  description: 'Path is the full path where the backup is saved. The
                    format of the path must be: "<bucket-name>/<path-to-backup-file>"'
                  type: string
                projectId:
                  description: ProjectId represents the project that organizes all
                    your Google Cloud Platform resources
                  type: string
                secretName:
                  description: SecretName is the name of secret which stores the gcs
                    service account credentials JSON .
                  type: string
                storageClass:
                  description: StorageClass represents the storage class
                  type: string
              required:
              - projectId
              - secretName
              type: object
            s3:
              description: S3StorageProvider represents a S3 compliant storage for
                storing backups.
              properties:
                acl:
                  description: Acl represents access control permissions for this
                    bucket
                  type: string
                bucket:
                  description: Bucket in which to store the backup data.
                  type: string
                endpoint:
                  description: Endpoint of S3 compatible storage service
                  type: string
                path:
                  description: 'Path is the full path where the backup is saved. The
                    format of the path must be: "<bucket-name>/<path-to-backup-file>"'
                  type: string
                prefix:
                  description: Prefix for the keys.
                  type: string
                provider:
                  description: Provider represents the specific storage provider that
                    implements the S3 interface
                  type: string
                region:
                  description: Region in which the S3 compatible bucket is located.
                  type: string
                secretName:
                  description: SecretName is the name of secret which stores S3 compliant
                    storage access key and secret key.
                  type: string
                sse:
                  description: SSE Sever-Side Encryption.
                  type: string
                storageClass:
                  description: StorageClass represents the storage class
                  type: string
              required:
              - provider
              - secretName
              type: object
            storageClassName:
              description: StorageClassName is the storage class for backup job's
                PV.
              type: string
            storageSize:
              description: StorageSize is the request storage size for backup job
              type: string
            to:
              description: TiDBAccessConfig defines the configuration for access tidb
                cluster
              properties:
                host:
                  description: Host is the tidb cluster access address
                  type: string
                port:
                  description: Port is the port number to use for connecting tidb
                    cluster
                  format: int32
                  type: integer
                secretName:
                  description: SecretName is the name of secret which stores tidb
                    cluster's password.
                  type: string
                user:
                  description: User is the user for login tidb cluster
                  type: string
              required:
              - host
              - secretName
              type: object
          required:
          - to
          - storageClassName
          - storageSize
          type: object
      type: object
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: backupschedules.pingcap.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.schedule
    description: The cron format string used for backup scheduling.
    name: Schedule
    type: string
  - JSONPath: .spec.maxBackups
    description: The max number of backups we want to keep.
    name: MaxBackups
    type: integer
  - JSONPath: .status.lastBackup
    description: The last backup CR name
    name: LastBackup
    priority: 1
    type: string
  - JSONPath: .status.lastBackupTime
    description: The last time the backup was successfully created
    name: LastBackupTime
    priority: 1
    type: date
  group: pingcap.com
  names:
    kind: BackupSchedule
    plural: backupschedules
    shortNames:
    - bks
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        spec:
          description: BackupScheduleSpec contains the backup schedule specification
            for a tidb cluster.
          properties:
            backupTemplate:
              description: BackupSpec contains the backup specification for a tidb
                cluster.
              properties:
                backupType:
                  description: Type is the backup type for tidb cluster.
                  type: string
                br:
                  description: BRConfig contains config for BR
                  properties:
                    ca:
                      description: CA is the CA certificate path for TLS connection
                      type: string
                    cert:
                      description: Cert is the certificate path for TLS connection
                      type: string
                    checksum:
                      description: Checksum specifies whether to run checksum after
                        backup
                      type: boolean
                    concurrency:
                      description: Concurrency is the size of thread pool on each
                        node that execute the backup task
                      format: int64
                      type: integer
                    key:
                      description: Key is the private key path for TLS connection
                      type: string
                    logLevel:
                      description: LogLevel is the log level
                      type: string
                    onLine:
                      description: OnLine specifies whether online during restore
                      type: boolean
                    pd:
                      description: PDAddress is the PD address of the tidb cluster
                      type: string
                    rateLimit:
                      description: RateLimit is the rate limit of the backup task,
                        MB/s per node
                      format: int32
                      type: integer
                    sendCredToTikv:
                      description: SendCredToTikv specifies whether to send credentials
                        to TiKV
                      type: boolean
                    statusAddr:
                      description: StatusAddr is the HTTP listening address for the
                        status report service. Set to empty string to disable
                      type: string
                    timeAgo:
                      description: TimeAgo is the history version of the backup task,
                        e.g. 1m, 1h
                      type: string
                  required:
                  - pd
                  type: object
                from:
                  description: TiDBAccessConfig defines the configuration for access
                    tidb cluster
                  properties:
                    host:
                      description: Host is the tidb cluster access address
                      type: string
                    port:
                      description: Port is the port number to use for connecting tidb
                        cluster
                      format: int32
                      type: integer
                    secretName:
                      description: SecretName is the name of secret which stores tidb
                        cluster's password.
                      type: string
                    user:
                      description: User is the user for login tidb cluster
                      type: string
                  required:
                  - host
                  - secretName
                  type: object
                gcs:
                  description: GcsStorageProvider represents the google cloud storage
                    for storing backups.
                  properties:
                    bucket:
                      description: Bucket in which to store the backup data.
                      type: string
                    bucketAcl:
                      description: BucketAcl represents the access control list for
                        new buckets
                      type: string
                    location:
                      description: Location in which the gcs bucket is located.
                      type: string
                    objectAcl:
                      description: ObjectAcl represents the access control list for
                        new objects
                      type: string
                    path:
                      description: 'Path is the full path where the backup is saved.
                        The format of the path must be: "<bucket-name>/<path-to-backup-file>"'
                      type: string
                    projectId:
                      description: ProjectId represents the project that organizes
                        all your Google Cloud Platform resources
                      type: string
                    secretName:
                      description: SecretName is the name of secret which stores the
                        gcs service account credentials JSON .
                      type: string
                    storageClass:
                      description: StorageClass represents the storage class
                      type: string
                  required:
                  - projectId
                  - secretName
                  type: object
                s3:
                  description: S3StorageProvider represents a S3 compliant storage
                    for storing backups.
                  properties:
                    acl:
                      description: Acl represents access control permissions for this
                        bucket
                      type: string
                    bucket:
                      description: Bucket in which to store the backup data.
                      type: string
                    endpoint:
                      description: Endpoint of S3 compatible storage service
                      type: string
                    path:
                      description: 'Path is the full path where the backup is saved.
                        The format of the path must be: "<bucket-name>/<path-to-backup-file>"'
                      type: string
                    prefix:
                      description: Prefix for the keys.
                      type: string
                    provider:
                      description: Provider represents the specific storage provider
                        that implements the S3 interface
                      type: string
                    region:
                      description: Region in which the S3 compatible bucket is located.
                      type: string
                    secretName:
                      description: SecretName is the name of secret which stores S3
                        compliant storage access key and secret key.
                      type: string
                    sse:
                      description: SSE Sever-Side Encryption.
                      type: string
                    storageClass:
                      description: StorageClass represents the storage class
                      type: string
                  required:
                  - provider
                  - secretName
                  type: object
                storageClassName:
                  description: StorageClassName is the storage class for backup job's
                    PV.
                  type: string
                storageSize:
                  description: StorageSize is the request storage size for backup
                    job
                  type: string
              type: object
            maxBackups:
              description: MaxBackups is to specify how many backups we want to keep
                0 is magic number to indicate un-limited backups.
              format: int32
              type: integer
            maxReservedTime:
              description: MaxReservedTime is to specify how long backups we want
                to keep.
              type: string
            pause:
              description: Pause means paused backupSchedule
              type: boolean
            schedule:
              description: Schedule specifies the cron string used for backup scheduling.
              type: string
            storageClassName:
              description: StorageClassName is the storage class for backup job's
                PV.
              type: string
            storageSize:
              description: StorageSize is the request storage size for backup job
              type: string
          required:
          - schedule
          - backupTemplate
          type: object
      type: object
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: tidbmonitors.pingcap.com
spec:
  group: pingcap.com
  names:
    kind: TidbMonitor
    plural: tidbmonitors
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        spec:
          description: TidbMonitor spec encode the desired state of tidb monitoring
            component
          properties:
            alertmanagerURL:
              description: 'alertmanagerURL is where tidb-monitoring push alerts to.
                Ref: https://prometheus.io/docs/alerting/alertmanager/'
              type: string
            annotations:
              type: object
            clusters:
              items:
                description: TidbClusterRef reference to a TidbCluster
                properties:
                  name:
                    description: Name is the name of TidbCluster object
                    type: string
                  namespace:
                    description: Namespace is the namespace that TidbCluster object
                      locates, default to the same namespace with TidbMonitor
                    type: string
                required:
                - name
                type: object
              type: array
            grafana: {}
            imagePullPolicy:
              type: string
            initializer: {}
            kubePrometheusURL:
              description: 'kubePrometheusURL is where tidb-monitoring get the  common
                metrics of kube-prometheus. Ref: https://github.com/coreos/kube-prometheus'
              type: string
            nodeSelector:
              type: object
            persistent:
              type: boolean
            prometheus: {}
            reloader: {}
            storage:
              type: string
            storageClassName:
              type: string
            tolerations:
              items:
                description: The pod this Toleration is attached to tolerates any
                  taint that matches the triple <key,value,effect> using the matching
                  operator <operator>.
                properties:
                  effect:
                    description: Effect indicates the taint effect to match. Empty
                      means match all taint effects. When specified, allowed values
                      are NoSchedule, PreferNoSchedule and NoExecute.
                    type: string
                  key:
                    description: Key is the taint key that the toleration applies
                      to. Empty means match all taint keys. If the key is empty, operator
                      must be Exists; this combination means to match all values and
                      all keys.
                    type: string
                  operator:
                    description: Operator represents a key's relationship to the value.
                      Valid operators are Exists and Equal. Defaults to Equal. Exists
                      is equivalent to wildcard for value, so that a pod can tolerate
                      all taints of a particular category.
                    type: string
                  tolerationSeconds:
                    description: TolerationSeconds represents the period of time the
                      toleration (which must be of effect NoExecute, otherwise this
                      field is ignored) tolerates the taint. By default, it is not
                      set, which means tolerate the taint forever (do not evict).
                      Zero and negative values will be treated as 0 (evict immediately)
                      by the system.
                    format: int64
                    type: integer
                  value:
                    description: Value is the taint value the toleration matches to.
                      If the operator is Exists, the value should be empty, otherwise
                      just a regular string.
                    type: string
                type: object
              type: array
          required:
          - clusters
          - prometheus
          - reloader
          - initializer
          type: object
      type: object
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: tidbinitializers.pingcap.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.phase
    description: The current phase of initialization
    name: Phase
    priority: 1
    type: string
  group: pingcap.com
  names:
    kind: TidbInitializer
    plural: tidbinitializers
    shortNames:
    - ti
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        spec:
          description: TidbInitializer spec encode the desired state of tidb initializer
            Job
          properties:
            cluster:
              description: TidbClusterRef reference to a TidbCluster
              properties:
                name:
                  description: Name is the name of TidbCluster object
                  type: string
                namespace:
                  description: Namespace is the namespace that TidbCluster object
                    locates, default to the same namespace with TidbMonitor
                  type: string
              required:
              - name
              type: object
            image:
              type: string
            imagePullPolicy:
              type: string
            initSql:
              description: InitSql is the SQL statements executed after the TiDB cluster
                is bootstrapped.
              type: string
            initSqlConfigMap:
              description: InitSqlConfigMapName reference a configmap that provide
                init-sql, take high precedence than initSql if set
              type: string
            passwordSecret:
              type: string
            permitHost:
              description: permitHost is the host which will only be allowed to connect
                to the TiDB.
              type: string
            resources:
              description: ResourceRequirements describes the compute resource requirements.
              properties:
                limits:
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            timezone:
              description: Time zone of TiDB initializer Pods
              type: string
          required:
          - image
          - cluster
          type: object
      type: object
  version: v1alpha1
