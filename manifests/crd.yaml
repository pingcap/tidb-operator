---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: tidbclusters.pingcap.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.pd.image
    description: The image for PD cluster
    name: PD
    type: string
  - JSONPath: .spec.pd.requests.storage
    description: The storage size specified for PD node
    name: Storage
    type: string
  - JSONPath: .status.pd.statefulSet.readyReplicas
    description: The desired replicas number of PD cluster
    name: Ready
    type: integer
  - JSONPath: .spec.pd.replicas
    description: The desired replicas number of PD cluster
    name: Desire
    type: integer
  - JSONPath: .spec.tikv.image
    description: The image for TiKV cluster
    name: TiKV
    type: string
  - JSONPath: .spec.tikv.requests.storage
    description: The storage size specified for TiKV node
    name: Storage
    type: string
  - JSONPath: .status.tikv.statefulSet.readyReplicas
    description: The ready replicas number of TiKV cluster
    name: Ready
    type: integer
  - JSONPath: .spec.tikv.replicas
    description: The desired replicas number of TiKV cluster
    name: Desire
    type: integer
  - JSONPath: .spec.tidb.image
    description: The image for TiDB cluster
    name: TiDB
    type: string
  - JSONPath: .status.tidb.statefulSet.readyReplicas
    description: The ready replicas number of TiDB cluster
    name: Ready
    type: integer
  - JSONPath: .spec.tidb.replicas
    description: The desired replicas number of TiDB cluster
    name: Desire
    type: integer
  group: pingcap.com
  names:
    kind: TidbCluster
    plural: tidbclusters
    shortNames:
    - tc
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        spec:
          description: TidbClusterSpec describes the attributes that a user creates
            on a tidb cluster
          properties:
            affinity:
              description: Affinity is a group of affinity scheduling rules.
              properties:
                nodeAffinity:
                  description: Node affinity is a group of node affinity scheduling
                    rules.
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: The scheduler will prefer to schedule pods to nodes
                        that satisfy the affinity expressions specified by this field,
                        but it may choose a node that violates one or more of the
                        expressions. The node that is most preferred is the one with
                        the greatest sum of weights, i.e. for each node that meets
                        all of the scheduling requirements (resource request, requiredDuringScheduling
                        affinity expressions, etc.), compute a sum by iterating through
                        the elements of this field and adding "weight" to the sum
                        if the node matches the corresponding matchExpressions; the
                        node(s) with the highest sum are the most preferred.
                      items:
                        description: An empty preferred scheduling term matches all
                          objects with implicit weight 0 (i.e. it's a no-op). A null
                          preferred scheduling term matches no objects (i.e. is also
                          a no-op).
                        properties:
                          preference:
                            description: A null or empty node selector term matches
                              no objects. The requirements of them are ANDed. The
                              TopologySelectorTerm type implements a subset of the
                              NodeSelectorTerm.
                            properties:
                              matchExpressions:
                                description: A list of node selector requirements
                                  by node's labels.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchFields:
                                description: A list of node selector requirements
                                  by node's fields.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                            type: object
                          weight:
                            description: Weight associated with matching the corresponding
                              nodeSelectorTerm, in the range 1-100.
                            format: int32
                            type: integer
                        required:
                        - weight
                        - preference
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: A node selector represents the union of the results
                        of one or more label queries over a set of nodes; that is,
                        it represents the OR of the selectors represented by the node
                        selector terms.
                      properties:
                        nodeSelectorTerms:
                          description: Required. A list of node selector terms. The
                            terms are ORed.
                          items:
                            description: A null or empty node selector term matches
                              no objects. The requirements of them are ANDed. The
                              TopologySelectorTerm type implements a subset of the
                              NodeSelectorTerm.
                            properties:
                              matchExpressions:
                                description: A list of node selector requirements
                                  by node's labels.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchFields:
                                description: A list of node selector requirements
                                  by node's fields.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                            type: object
                          type: array
                      required:
                      - nodeSelectorTerms
                      type: object
                  type: object
                podAffinity:
                  description: Pod affinity is a group of inter pod affinity scheduling
                    rules.
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: The scheduler will prefer to schedule pods to nodes
                        that satisfy the affinity expressions specified by this field,
                        but it may choose a node that violates one or more of the
                        expressions. The node that is most preferred is the one with
                        the greatest sum of weights, i.e. for each node that meets
                        all of the scheduling requirements (resource request, requiredDuringScheduling
                        affinity expressions, etc.), compute a sum by iterating through
                        the elements of this field and adding "weight" to the sum
                        if the node has pods which matches the corresponding podAffinityTerm;
                        the node(s) with the highest sum are the most preferred.
                      items:
                        description: The weights of all of the matched WeightedPodAffinityTerm
                          fields are added per-node to find the most preferred node(s)
                        properties:
                          podAffinityTerm:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          weight:
                            description: weight associated with matching the corresponding
                              podAffinityTerm, in the range 1-100.
                            format: int32
                            type: integer
                        required:
                        - weight
                        - podAffinityTerm
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: If the affinity requirements specified by this
                        field are not met at scheduling time, the pod will not be
                        scheduled onto the node. If the affinity requirements specified
                        by this field cease to be met at some point during pod execution
                        (e.g. due to a pod label update), the system may or may not
                        try to eventually evict the pod from its node. When there
                        are multiple elements, the lists of nodes corresponding to
                        each podAffinityTerm are intersected, i.e. all terms must
                        be satisfied.
                      items:
                        description: Defines a set of pods (namely those matching
                          the labelSelector relative to the given namespace(s)) that
                          this pod should be co-located (affinity) or not co-located
                          (anti-affinity) with, where co-located is defined as running
                          on a node whose value of the label with key <topologyKey>
                          matches that of any node on which a pod of the set of pods
                          is running
                        properties:
                          labelSelector:
                            description: A label selector is a label query over a
                              set of resources. The result of matchLabels and matchExpressions
                              are ANDed. An empty label selector matches all objects.
                              A null label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          namespaces:
                            description: namespaces specifies which namespaces the
                              labelSelector applies to (matches against); null or
                              empty list means "this pod's namespace"
                            items:
                              type: string
                            type: array
                          topologyKey:
                            description: This pod should be co-located (affinity)
                              or not co-located (anti-affinity) with the pods matching
                              the labelSelector in the specified namespaces, where
                              co-located is defined as running on a node whose value
                              of the label with key topologyKey matches that of any
                              node on which any of the selected pods is running. Empty
                              topologyKey is not allowed.
                            type: string
                        required:
                        - topologyKey
                        type: object
                      type: array
                  type: object
                podAntiAffinity:
                  description: Pod anti affinity is a group of inter pod anti affinity
                    scheduling rules.
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: The scheduler will prefer to schedule pods to nodes
                        that satisfy the anti-affinity expressions specified by this
                        field, but it may choose a node that violates one or more
                        of the expressions. The node that is most preferred is the
                        one with the greatest sum of weights, i.e. for each node that
                        meets all of the scheduling requirements (resource request,
                        requiredDuringScheduling anti-affinity expressions, etc.),
                        compute a sum by iterating through the elements of this field
                        and adding "weight" to the sum if the node has pods which
                        matches the corresponding podAffinityTerm; the node(s) with
                        the highest sum are the most preferred.
                      items:
                        description: The weights of all of the matched WeightedPodAffinityTerm
                          fields are added per-node to find the most preferred node(s)
                        properties:
                          podAffinityTerm:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          weight:
                            description: weight associated with matching the corresponding
                              podAffinityTerm, in the range 1-100.
                            format: int32
                            type: integer
                        required:
                        - weight
                        - podAffinityTerm
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: If the anti-affinity requirements specified by
                        this field are not met at scheduling time, the pod will not
                        be scheduled onto the node. If the anti-affinity requirements
                        specified by this field cease to be met at some point during
                        pod execution (e.g. due to a pod label update), the system
                        may or may not try to eventually evict the pod from its node.
                        When there are multiple elements, the lists of nodes corresponding
                        to each podAffinityTerm are intersected, i.e. all terms must
                        be satisfied.
                      items:
                        description: Defines a set of pods (namely those matching
                          the labelSelector relative to the given namespace(s)) that
                          this pod should be co-located (affinity) or not co-located
                          (anti-affinity) with, where co-located is defined as running
                          on a node whose value of the label with key <topologyKey>
                          matches that of any node on which a pod of the set of pods
                          is running
                        properties:
                          labelSelector:
                            description: A label selector is a label query over a
                              set of resources. The result of matchLabels and matchExpressions
                              are ANDed. An empty label selector matches all objects.
                              A null label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          namespaces:
                            description: namespaces specifies which namespaces the
                              labelSelector applies to (matches against); null or
                              empty list means "this pod's namespace"
                            items:
                              type: string
                            type: array
                          topologyKey:
                            description: This pod should be co-located (affinity)
                              or not co-located (anti-affinity) with the pods matching
                              the labelSelector in the specified namespaces, where
                              co-located is defined as running on a node whose value
                              of the label with key topologyKey matches that of any
                              node on which any of the selected pods is running. Empty
                              topologyKey is not allowed.
                            type: string
                        required:
                        - topologyKey
                        type: object
                      type: array
                  type: object
              type: object
            annotations:
              description: Base annotations of TiDB cluster Pods, components may add
                or override selectors upon this respectively
              type: object
            enablePVReclaim:
              description: Whether enable PVC reclaim for orphan PVC left by statefulset
                scale-in
              type: boolean
            enableTLSCluster:
              description: Enable TLS connection between TiDB server components
              type: boolean
            helper:
              description: HelperSpec contains details of helper component
              properties:
                image:
                  description: Image used to tail slow log and set kernel parameters
                    if necessary, must have `tail` and `sysctl` installed
                  type: string
                imagePullPolicy:
                  description: ImagePullPolicy of the component. Override the cluster-level
                    imagePullPolicy if present
                  type: string
              type: object
            hostNetwork:
              description: Whether Hostnetwork is enabled for TiDB cluster Pods
              type: boolean
            imagePullPolicy:
              description: ImagePullPolicy of TiDB cluster Pods
              type: string
            nodeSelector:
              description: Base node selectors of TiDB cluster Pods, components may
                add or override selectors upon this respectively
              type: object
            pd:
              description: PDSpec contains details of PD members
              properties:
                config:
                  description: PDConfig is the configuration of pd-server
                  properties:
                    ElectionInterval: {}
                    LeaderPriorityCheckInterval: {}
                    PreVote:
                      description: Prevote is true to enable Raft Pre-Vote. If enabled,
                        Raft runs an additional election phase to check whether it
                        would get enough votes to win an election, thus minimizing
                        disruptions.
                      type: boolean
                    TickInterval: {}
                    WarningMsgs:
                      description: For all warnings during parsing.
                      items:
                        type: string
                      type: array
                    advertise-client-urls:
                      type: string
                    advertise-peer-urls:
                      type: string
                    auto-compaction-mode:
                      description: AutoCompactionMode is either 'periodic' or 'revision'.
                        The default value is 'periodic'.
                      type: string
                    auto-compaction-retention-v2:
                      description: AutoCompactionRetention is either duration string
                        with time unit (e.g. '5m' for 5-minute), or revision unit
                        (e.g. '5000'). If no time unit is provided and compaction
                        mode is 'periodic', the unit defaults to hour. For example,
                        '5' translates into 5-hour. The default retention is 1 hour.
                        Before etcd v3.3.x, the type of retention is int. We add 'v2'
                        suffix to make it backward compatible.
                      type: string
                    client-urls:
                      type: string
                    cluster-version: {}
                    configFile:
                      type: string
                    data-dir:
                      type: string
                    disableStrictReconfigCheck:
                      type: boolean
                    enable-grpc-gateway:
                      type: boolean
                    force-new-cluster:
                      type: boolean
                    heartbeatStreamBindInterval: {}
                    initial-cluster:
                      type: string
                    initial-cluster-state:
                      type: string
                    join:
                      description: Join to an existing pd cluster, a string of endpoints.
                      type: string
                    label-property:
                      type: object
                    lease:
                      description: LeaderLease time, if leader doesn't update its
                        TTL in etcd after lease time, etcd will expire the leader
                        key and other servers can campaign the leader again. Etcd
                        only supports seconds TTL, so here is second too.
                      format: int64
                      type: integer
                    log:
                      description: PDLogConfig serializes log related config in toml/json.
                      properties:
                        development:
                          description: Development puts the logger in development
                            mode, which changes the behavior of DPanicLevel and takes
                            stacktraces more liberally.
                          type: boolean
                        disable-caller:
                          description: DisableCaller stops annotating logs with the
                            calling function's file name and line number. By default,
                            all logs are annotated.
                          type: boolean
                        disable-error-verbose:
                          description: DisableErrorVerbose stops annotating logs with
                            the full verbose error message.
                          type: boolean
                        disable-stacktrace:
                          description: DisableStacktrace completely disables automatic
                            stacktrace capturing. By default, stacktraces are captured
                            for WarnLevel and above logs in development and ErrorLevel
                            and above in production.
                          type: boolean
                        disable-timestamp:
                          description: Disable automatic timestamps in output.
                          type: boolean
                        file: {}
                        format:
                          description: Log format. one of json, text, or console.
                          type: string
                        level:
                          description: Log level.
                          type: string
                      type: object
                    log-file:
                      description: Backward compatibility.
                      type: string
                    log-level:
                      type: string
                    metric: {}
                    name:
                      type: string
                    namespace:
                      type: object
                    namespace-classifier:
                      description: NamespaceClassifier is for classifying stores/regions
                        into different namespaces.
                      type: string
                    nextRetryDelay:
                      description: Only test can change them.
                      format: int64
                      type: integer
                    pd-server:
                      description: PDServerConfig is the configuration for pd server.
                      properties:
                        use-region-storage:
                          description: UseRegionStorage enables the independent region
                            storage.
                          type: string
                      type: object
                    peer-urls:
                      type: string
                    quota-backend-bytes:
                      description: QuotaBackendBytes Raise alarms when backend size
                        exceeds the given quota. 0 means use the default quota. the
                        default size is 2GB, the maximum is 8GB.
                      format: int64
                      type: integer
                    replication:
                      description: PDReplicationConfig is the replication configuration.
                      properties:
                        location-labels:
                          description: The label keys specified the location of a
                            store. The placement priorities is implied by the order
                            of label keys. For example, ["zone", "rack"] means that
                            we should place replicas to different zones first, then
                            to different racks if we don't have enough zones.
                          items:
                            type: string
                          type: array
                        max-replicas:
                          description: MaxReplicas is the number of replicas for each
                            region.
                          format: int64
                          type: integer
                        strictly-match-label:
                          description: StrictlyMatchLabel strictly checks if the label
                            of TiKV is matched with LocaltionLabels.
                          type: string
                      type: object
                    schedule:
                      description: ScheduleConfig is the schedule configuration.
                      properties:
                        disable-location-replacement:
                          description: DisableLocationReplacement is the option to
                            prevent replica checker from moving replica to a better
                            location.
                          type: string
                        disable-make-up-replica:
                          description: DisableMakeUpReplica is the option to prevent
                            replica checker from making up replicas when replica count
                            is less than expected.
                          type: string
                        disable-namespace-relocation:
                          description: DisableNamespaceRelocation is the option to
                            prevent namespace checker from moving replica to the target
                            namespace.
                          type: string
                        disable-raft-learner:
                          description: DisableLearner is the option to disable using
                            AddLearnerNode instead of AddNode
                          type: string
                        disable-remove-down-replica:
                          description: DisableRemoveDownReplica is the option to prevent
                            replica checker from removing down replicas.
                          type: string
                        disable-remove-extra-replica:
                          description: DisableRemoveExtraReplica is the option to
                            prevent replica checker from removing extra replicas.
                          type: string
                        disable-replace-offline-replica:
                          description: DisableReplaceOfflineReplica is the option
                            to prevent replica checker from repalcing offline replicas.
                          type: string
                        high-space-ratio:
                          description: HighSpaceRatio is the highest usage ratio of
                            store which regraded as high space. High space means there
                            is a lot of spare capacity, and store region score varies
                            directly with used size.
                          format: double
                          type: number
                        hot-region-cache-hits-threshold:
                          description: HotRegionCacheHitThreshold is the cache hits
                            threshold of the hot region. If the number of times a
                            region hits the hot cache is greater than this threshold,
                            it is considered a hot region.
                          format: int64
                          type: integer
                        hot-region-schedule-limit:
                          description: HotRegionScheduleLimit is the max coexist hot
                            region schedules.
                          format: int64
                          type: integer
                        leader-schedule-limit:
                          description: LeaderScheduleLimit is the max coexist leader
                            schedules.
                          format: int64
                          type: integer
                        low-space-ratio:
                          description: |2-

                                 high space stage         transition stage           low space stage
                              |--------------------|-----------------------------|-------------------------|
                              ^                    ^                             ^                         ^
                              0       HighSpaceRatio * capacity       LowSpaceRatio * capacity          capacity

                            LowSpaceRatio is the lowest usage ratio of store which regraded as low space. When in low space, store region score increases to very large and varies inversely with available size.
                          format: double
                          type: number
                        max-merge-region-keys:
                          format: int64
                          type: integer
                        max-merge-region-size:
                          description: If both the size of region is smaller than
                            MaxMergeRegionSize and the number of rows in region is
                            smaller than MaxMergeRegionKeys, it will try to merge
                            with adjacent regions.
                          format: int64
                          type: integer
                        max-pending-peer-count:
                          format: int64
                          type: integer
                        max-snapshot-count:
                          description: If the snapshot count of one store is greater
                            than this value, it will never be used as a source or
                            target store.
                          format: int64
                          type: integer
                        max-store-down-time: {}
                        merge-schedule-limit:
                          description: MergeScheduleLimit is the max coexist merge
                            schedules.
                          format: int64
                          type: integer
                        patrol-region-interval: {}
                        region-schedule-limit:
                          description: RegionScheduleLimit is the max coexist region
                            schedules.
                          format: int64
                          type: integer
                        replica-schedule-limit:
                          description: ReplicaScheduleLimit is the max coexist replica
                            schedules.
                          format: int64
                          type: integer
                        schedulers-v2:
                          description: Schedulers support for loding customized schedulers
                          items:
                            description: PDSchedulerConfig is customized scheduler
                              configuration
                            properties:
                              args:
                                items:
                                  type: string
                                type: array
                              disable:
                                type: boolean
                              type:
                                type: string
                            type: object
                          type: array
                        split-merge-interval: {}
                        tolerant-size-ratio:
                          description: TolerantSizeRatio is the ratio of buffer size
                            for balance scheduler.
                          format: double
                          type: number
                      type: object
                    security:
                      description: PDSecurityConfig is the configuration for supporting
                        tls.
                      properties:
                        cacert-path:
                          description: CAPath is the path of file that contains list
                            of trusted SSL CAs. if set, following four settings shouldn't
                            be empty
                          type: string
                        cert-path:
                          description: CertPath is the path of file that contains
                            X509 certificate in PEM format.
                          type: string
                        key-path:
                          description: KeyPath is the path of file that contains X509
                            key in PEM format.
                          type: string
                      type: object
                    tso-save-interval: {}
                  type: object
                replicas:
                  format: int32
                  type: integer
                storageClassName:
                  type: string
              required:
              - replicas
              type: object
            priorityClassName:
              description: PriorityClassName of TiDB cluster Pods
              type: string
            pump:
              description: PumpSpec contains details of Pump members
              properties:
                configUpdateStrategy:
                  description: ConfigUpdateStrategy determines how to apply the configuration
                    change, change this field without actually changing the configuration
                    will not trigger rolling-update
                  type: string
                replicas:
                  format: int32
                  type: integer
                storageClassName:
                  type: string
              required:
              - replicas
              type: object
            pvReclaimPolicy:
              description: Persistent volume reclaim policy applied to the PVs that
                consumed by TiDB cluster
              type: string
            schedulerName:
              description: SchedulerName of TiDB cluster Pods
              type: string
            services:
              description: Services list non-headless services type used in TidbCluster
                Deprecated
              items:
                description: Deprecated Service represent service type used in TidbCluster
                properties:
                  name:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            tidb:
              description: TiDBSpec contains details of TiDB members
              properties:
                binlogEnabled:
                  type: boolean
                config:
                  description: TiDBConfig is the configuration of tidb-server
                  properties:
                    advertise-address:
                      type: string
                    alter-primary-key:
                      type: boolean
                    binlog:
                      description: Binlog is the config for binlog.
                      properties:
                        binlog-socket:
                          description: Use socket file to write binlog, for compatible
                            with kafka version tidb-binlog.
                          type: string
                        enable:
                          type: boolean
                        ignore-error:
                          description: If IgnoreError is true, when writing binlog
                            meets error, TiDB would ignore the error.
                          type: boolean
                        strategy:
                          description: The strategy for sending binlog to pump, value
                            can be "range,omitempty" or "hash,omitempty" now.
                          type: string
                        write-timeout:
                          type: string
                      type: object
                    check-mb4-value-in-utf8:
                      type: boolean
                    compatible-kill-query:
                      type: boolean
                    cors:
                      type: string
                    enable-batch-dml:
                      type: boolean
                    enable-streaming:
                      type: boolean
                    host:
                      type: string
                    lease:
                      type: string
                    log:
                      description: Log is the log section of config.
                      properties:
                        disable-timestamp:
                          description: Disable automatic timestamps in output.
                          type: boolean
                        expensive-threshold:
                          format: int32
                          type: integer
                        file: {}
                        format:
                          description: Log format. one of json, text, or console.
                          type: string
                        level:
                          description: Log level.
                          type: string
                        query-log-max-len:
                          format: int64
                          type: integer
                        record-plan-in-slow-log:
                          format: int64
                          type: integer
                        slow-query-file:
                          type: string
                        slow-threshold:
                          format: int64
                          type: integer
                      type: object
                    lower-case-table-names:
                      format: int32
                      type: integer
                    mem-quota-query:
                      format: int64
                      type: integer
                    oom-action:
                      type: string
                    opentracing:
                      description: OpenTracing is the opentracing section of the config.
                      properties:
                        enable:
                          type: boolean
                        reporter:
                          description: OpenTracingReporter is the config for opentracing
                            reporter. See https://godoc.org/github.com/uber/jaeger-client-go/config#ReporterConfig
                          properties:
                            buffer-flush-interval:
                              format: int64
                              type: integer
                            local-agent-host-port:
                              type: string
                            log-spans:
                              type: boolean
                            queue-size:
                              format: int32
                              type: integer
                          type: object
                        rpc-metrics:
                          type: boolean
                        sampler:
                          description: OpenTracingSampler is the config for opentracing
                            sampler. See https://godoc.org/github.com/uber/jaeger-client-go/config#SamplerConfig
                          properties:
                            max-operations:
                              format: int32
                              type: integer
                            param:
                              format: double
                              type: number
                            sampling-refresh-interval:
                              format: int64
                              type: integer
                            sampling-server-url:
                              type: string
                            type:
                              type: string
                          type: object
                      type: object
                    path:
                      type: string
                    performance:
                      description: Performance is the performance section of the config.
                      properties:
                        bind-info-lease:
                          type: string
                        cross-join:
                          type: boolean
                        feedback-probability:
                          format: double
                          type: number
                        force-priority:
                          type: string
                        max-memory:
                          format: int64
                          type: integer
                        max-procs:
                          format: int32
                          type: integer
                        pseudo-estimate-ratio:
                          format: double
                          type: number
                        query-feedback-limit:
                          format: int32
                          type: integer
                        run-auto-analyze:
                          type: boolean
                        stats-lease:
                          type: string
                        stmt-count-limit:
                          format: int32
                          type: integer
                        tcp-keep-alive:
                          type: boolean
                        txn-entry-count-limit:
                          format: int64
                          type: integer
                        txn-total-size-limit:
                          format: int64
                          type: integer
                      type: object
                    pessimistic-txn:
                      description: PessimisticTxn is the config for pessimistic transaction.
                      properties:
                        enable:
                          description: Enable must be true for 'begin lock' or session
                            variable to start a pessimistic transaction.
                          type: boolean
                        max-retry-count:
                          description: The max count of retry for a single statement
                            in a pessimistic transaction.
                          format: int32
                          type: integer
                      type: object
                    plugin:
                      description: Plugin is the config for plugin
                      properties:
                        dir:
                          type: string
                        load:
                          type: string
                      type: object
                    port:
                      format: int32
                      type: integer
                    prepared-plan-cache:
                      description: PreparedPlanCache is the PreparedPlanCache section
                        of the config.
                      properties:
                        capacity:
                          format: int32
                          type: integer
                        enabled:
                          type: boolean
                        memory-guard-ratio:
                          format: double
                          type: number
                      type: object
                    proxy-protocol:
                      description: ProxyProtocol is the PROXY protocol section of
                        the config.
                      properties:
                        header-timeout:
                          description: PROXY protocol header read timeout, Unit is
                            second.
                          format: int32
                          type: integer
                        networks:
                          description: PROXY protocol acceptable client networks.
                            Empty string means disable PROXY protocol, * means all
                            networks.
                          type: string
                      type: object
                    run-ddl:
                      type: boolean
                    security:
                      description: Security is the security section of the config.
                      properties:
                        cluster-ssl-ca:
                          type: string
                        cluster-ssl-cert:
                          type: string
                        cluster-ssl-key:
                          type: string
                        skip-grant-table:
                          type: boolean
                        ssl-ca:
                          type: string
                        ssl-cert:
                          type: string
                        ssl-key:
                          type: string
                      type: object
                    socket:
                      type: string
                    split-region-max-num:
                      format: int64
                      type: integer
                    split-table:
                      type: boolean
                    status:
                      description: Status is the status section of the config.
                      properties:
                        metrics-addr:
                          type: string
                        metrics-interval:
                          format: int32
                          type: integer
                        record-db-qps:
                          type: boolean
                        report-status:
                          type: boolean
                        status-host:
                          type: string
                        status-port:
                          format: int32
                          type: integer
                      type: object
                    stmt-summary:
                      description: StmtSummary is the config for statement summary.
                      properties:
                        max-sql-length:
                          description: The maximum length of displayed normalized
                            SQL and sample SQL.
                          format: int32
                          type: integer
                        max-stmt-count:
                          description: The maximum number of statements kept in memory.
                          format: int32
                          type: integer
                      type: object
                    store:
                      type: string
                    tikv-client:
                      description: TiKVClient is the config for tikv client.
                      properties:
                        batch-wait-size:
                          description: BatchWaitSize is the max wait size for batch.
                          format: int32
                          type: integer
                        commit-timeout:
                          description: CommitTimeout is the max time which command
                            'commit' will wait.
                          type: string
                        grpc-connection-count:
                          description: GrpcConnectionCount is the max gRPC connections
                            that will be established with each tikv-server.
                          format: int32
                          type: integer
                        grpc-keepalive-time:
                          description: After a duration of this time in seconds if
                            the client doesn't see any activity it pings the server
                            to see if the transport is still alive.
                          format: int32
                          type: integer
                        grpc-keepalive-timeout:
                          description: After having pinged for keepalive check, the
                            client waits for a duration of Timeout in seconds and
                            if no activity is seen even after that the connection
                            is closed.
                          format: int32
                          type: integer
                        max-batch-size:
                          description: MaxBatchSize is the max batch size when calling
                            batch commands API.
                          format: int32
                          type: integer
                        max-batch-wait-time:
                          description: MaxBatchWaitTime in nanosecond is the max wait
                            time for batch.
                          format: int64
                          type: integer
                        max-txn-time-use:
                          description: MaxTxnTimeUse is the max time a Txn may use
                            (in seconds) from its startTS to commitTS.
                          format: int32
                          type: integer
                        overload-threshold:
                          description: If TiKV load is greater than this, TiDB will
                            wait for a while to avoid little batch.
                          format: int32
                          type: integer
                        region-cache-ttl:
                          description: If a Region has not been accessed for more
                            than the given duration (in seconds), it will be reloaded
                            from the PD.
                          format: int32
                          type: integer
                        store-limit:
                          description: If a store has been up to the limit, it will
                            return error for successive request to prevent the store
                            occupying too much token in dispatching level.
                          format: int64
                          type: integer
                      type: object
                    token-limit:
                      format: int32
                      type: integer
                    treat-old-version-utf8-as-utf8mb4:
                      type: boolean
                    txn-local-latches:
                      description: TxnLocalLatches is the TxnLocalLatches section
                        of the config.
                      properties:
                        capacity:
                          format: int32
                          type: integer
                        enabled:
                          type: boolean
                      type: object
                  type: object
                configUpdateStrategy:
                  type: string
                enableTLSClient:
                  type: boolean
                maxFailoverCount:
                  format: int32
                  type: integer
                plugins:
                  description: Plugins is a list of plugins that are loaded by TiDB
                    server, empty means plugin disabled
                  items:
                    type: string
                  type: array
                replicas:
                  format: int32
                  type: integer
                separateSlowLog:
                  type: boolean
                storageClassName:
                  type: string
              required:
              - replicas
              type: object
            tikv:
              description: TiKVSpec contains details of TiKV members
              properties:
                config:
                  description: TiKVConfig is the configuration of TiKV.
                  properties:
                    addr:
                      type: string
                    advertise-addr:
                      type: string
                    concurrent-recv-snap-limit:
                      format: int32
                      type: integer
                    concurrent-send-snap-limit:
                      format: int32
                      type: integer
                    end-point-batch-row-limit:
                      format: int32
                      type: integer
                    end-point-enable-batch-if-possible:
                      format: int32
                      type: integer
                    end-point-recursion-limit:
                      format: int32
                      type: integer
                    end-point-request-max-handle-duration:
                      type: string
                    end-point-stream-batch-row-limit:
                      format: int32
                      type: integer
                    end-point-stream-channel-size:
                      format: int32
                      type: integer
                    grpc-compression-type:
                      type: string
                    grpc-concurrency:
                      format: int32
                      type: integer
                    grpc-concurrent-stream:
                      format: int32
                      type: integer
                    grpc-keepalive-time:
                      type: string
                    grpc-keepalive-timeout:
                      type: string
                    grpc-raft-conn-num:
                      format: int32
                      type: integer
                    grpc-stream-initial-window-size:
                      type: string
                    heavy-load-threshold:
                      format: int32
                      type: integer
                    heavy-load-wait-duration:
                      type: string
                    labels:
                      type: object
                    log-file:
                      type: string
                    log-level:
                      type: string
                    log-rotation-timespan:
                      type: string
                    panic-when-unexpected-key-or-data:
                      type: boolean
                    raftstore:
                      description: TiKVRaftstoreConfig is the configuration of TiKV
                        raftstore component.
                      properties:
                        abnormal-leader-missing-duration:
                          description: / Similar to the max-leader-missing-duration,
                            instead it will log warnings and / try to alert monitoring
                            systems, if there is any.
                          type: string
                        allow-remove-leader:
                          type: boolean
                        apply-max-batch-size:
                          format: int64
                          type: integer
                        apply-pool-size:
                          format: int64
                          type: integer
                        clean-stale-peer-delay:
                          description: delay time before deleting a stale peer
                          type: string
                        cleanup-import-sst-interval:
                          type: string
                        consistency-check-interval:
                          description: Interval (ms) to check region whether the data
                            is consistent.
                          type: string
                        hibernate-regions:
                          type: boolean
                        leader-transfer-max-log-lag:
                          format: int64
                          type: integer
                        lock-cf-compact-bytes-threshold:
                          type: string
                        lock-cf-compact-interval:
                          type: string
                        max-leader-missing-duration:
                          description: / If the leader of a peer is missing for longer
                            than max-leader-missing-duration / the peer would ask
                            pd to confirm whether it is valid in any region. / If
                            the peer is stale and is not valid in any region, it will
                            destroy itself.
                          type: string
                        max-peer-down-duration:
                          description: / When a peer is not active for max-peer-down-duration
                            / the peer is considered to be down and is reported to
                            PD.
                          type: string
                        merge-check-tick-interval:
                          description: / Interval to re-propose merge.
                          type: string
                        merge-max-log-gap:
                          description: / Max log gap allowed to propose merge.
                          format: int64
                          type: integer
                        messages-per-tick:
                          format: int64
                          type: integer
                        notify-capacity:
                          format: int64
                          type: integer
                        pd-heartbeat-tick-interval:
                          type: string
                        pd-store-heartbeat-tick-interval:
                          type: string
                        peer-stale-state-check-interval:
                          type: string
                        raft-base-tick-interval:
                          description: raft-base-tick-interval is a base tick interval
                            (ms).
                          type: string
                        raft-election-timeout-ticks:
                          format: int64
                          type: integer
                        raft-entry-cache-life-time:
                          description: When a peer is not responding for this time,
                            leader will not keep entry cache for it.
                          type: string
                        raft-entry-max-size:
                          description: When the entry exceed the max size, reject
                            to propose it.
                          type: string
                        raft-heartbeat-ticks:
                          format: int64
                          type: integer
                        raft-log-gc-count-limit:
                          description: When entry count exceed this value, gc will
                            be forced trigger.
                          format: int64
                          type: integer
                        raft-log-gc-size-limit:
                          description: When the approximate size of raft log entries
                            exceed this value gc will be forced trigger.
                          type: string
                        raft-log-gc-threshold:
                          description: A threshold to gc stale raft log, must >= 1.
                          format: int64
                          type: integer
                        raft-log-gc-tick-interval:
                          description: Interval to gc unnecessary raft log (ms).
                          type: string
                        raft-reject-transfer-leader-duration:
                          description: When a peer is newly added, reject transferring
                            leader to the peer for a while.
                          type: string
                        raft-store-max-leader-lease:
                          description: The lease provided by a successfully proposed
                            and applied entry.
                          type: string
                        region-compact-check-interval:
                          description: / Interval (ms) to check whether start compaction
                            for a region.
                          type: string
                        region-compact-check-step:
                          description: / Number of regions for each time checking.
                          format: int64
                          type: integer
                        region-compact-min-tombstones:
                          description: / Minimum number of tombstones to trigger manual
                            compaction.
                          format: int64
                          type: integer
                        region-compact-tombstones-percent:
                          description: / Minimum percentage of tombstones to trigger
                            manual compaction. / Should between 1 and 100.
                          format: int64
                          type: integer
                        region-split-check-diff:
                          description: / When size change of region exceed the diff
                            since last check, it / will be checked again whether it
                            should be split.
                          type: string
                        report-region-flow-interval:
                          type: string
                        right-derive-when-split:
                          description: Right region derive origin region id when split.
                          type: boolean
                        snap-apply-batch-size:
                          type: string
                        snap-gc-timeout:
                          type: string
                        snap-mgr-gc-tick-interval:
                          type: string
                        split-region-check-tick-interval:
                          description: Interval (ms) to check region whether need
                            to be split or not.
                          type: string
                        store-max-batch-size:
                          format: int64
                          type: integer
                        store-pool-size:
                          format: int64
                          type: integer
                        sync-log:
                          description: true for high reliability, prevent data loss
                            when power failure.
                          type: boolean
                        use-delete-range:
                          type: boolean
                      type: object
                    rocksdb:
                      description: TiKVDbConfig is the rocksdb config.
                      properties:
                        auto-tuned:
                          type: boolean
                        bytes-per-sync:
                          type: string
                        compaction-readahead-size:
                          type: string
                        create-if-missing:
                          type: boolean
                        defaultcf:
                          description: TiKVCfConfig is the config of a cf
                          properties:
                            Level0FileNumCompactionTrigger:
                              format: int64
                              type: integer
                            Level0SlowdownWritesTrigger:
                              format: int64
                              type: integer
                            Level0StopWritesTrigger:
                              format: int64
                              type: integer
                            PinL0FilterAndIndexBlocks:
                              type: boolean
                            block-based-bloom-filter:
                              type: boolean
                            block-cache-size:
                              type: string
                            block-size:
                              type: string
                            bloom-filter-bits-per-key:
                              format: int64
                              type: integer
                            cache-index-and-filter-blocks:
                              type: boolean
                            compaction-pri:
                              format: int64
                              type: integer
                            compaction-style:
                              format: int64
                              type: integer
                            compression-per-level:
                              items:
                                type: string
                              type: array
                            disable-auto-compactions:
                              type: boolean
                            disable-block-cache:
                              type: boolean
                            dynamic-level-bytes:
                              type: boolean
                            enable-doubly-skiplist:
                              type: boolean
                            force-consistency-checks:
                              type: boolean
                            hard-pending-compaction-bytes-limit:
                              type: string
                            max-bytes-for-level-base:
                              type: string
                            max-bytes-for-level-multiplier:
                              format: int64
                              type: integer
                            max-compaction-bytes:
                              type: string
                            max-write-buffer-number:
                              format: int64
                              type: integer
                            min-write-buffer-number-to-merge:
                              format: int64
                              type: integer
                            num-levels:
                              format: int64
                              type: integer
                            optimize-filters-for-hits:
                              type: boolean
                            prop-keys-index-distance:
                              format: int64
                              type: integer
                            prop-size-index-distance:
                              format: int64
                              type: integer
                            read-amp-bytes-per-bit:
                              format: int64
                              type: integer
                            soft-pending-compaction-bytes-limit:
                              type: string
                            target-file-size-base:
                              type: string
                            titan: {}
                            use-bloom-filter:
                              type: boolean
                            whole-key-filtering:
                              type: boolean
                            write-buffer-size:
                              type: string
                          required:
                          - PinL0FilterAndIndexBlocks
                          - Level0FileNumCompactionTrigger
                          - Level0SlowdownWritesTrigger
                          - Level0StopWritesTrigger
                          type: object
                        enable-pipelined-write:
                          type: boolean
                        enable-statistics:
                          type: boolean
                        info-log-dir:
                          type: string
                        info-log-keep-log-file-num:
                          format: int64
                          type: integer
                        info-log-max-size:
                          type: string
                        info-log-roll-time:
                          type: string
                        lockcf:
                          description: TiKVCfConfig is the config of a cf
                          properties:
                            Level0FileNumCompactionTrigger:
                              format: int64
                              type: integer
                            Level0SlowdownWritesTrigger:
                              format: int64
                              type: integer
                            Level0StopWritesTrigger:
                              format: int64
                              type: integer
                            PinL0FilterAndIndexBlocks:
                              type: boolean
                            block-based-bloom-filter:
                              type: boolean
                            block-cache-size:
                              type: string
                            block-size:
                              type: string
                            bloom-filter-bits-per-key:
                              format: int64
                              type: integer
                            cache-index-and-filter-blocks:
                              type: boolean
                            compaction-pri:
                              format: int64
                              type: integer
                            compaction-style:
                              format: int64
                              type: integer
                            compression-per-level:
                              items:
                                type: string
                              type: array
                            disable-auto-compactions:
                              type: boolean
                            disable-block-cache:
                              type: boolean
                            dynamic-level-bytes:
                              type: boolean
                            enable-doubly-skiplist:
                              type: boolean
                            force-consistency-checks:
                              type: boolean
                            hard-pending-compaction-bytes-limit:
                              type: string
                            max-bytes-for-level-base:
                              type: string
                            max-bytes-for-level-multiplier:
                              format: int64
                              type: integer
                            max-compaction-bytes:
                              type: string
                            max-write-buffer-number:
                              format: int64
                              type: integer
                            min-write-buffer-number-to-merge:
                              format: int64
                              type: integer
                            num-levels:
                              format: int64
                              type: integer
                            optimize-filters-for-hits:
                              type: boolean
                            prop-keys-index-distance:
                              format: int64
                              type: integer
                            prop-size-index-distance:
                              format: int64
                              type: integer
                            read-amp-bytes-per-bit:
                              format: int64
                              type: integer
                            soft-pending-compaction-bytes-limit:
                              type: string
                            target-file-size-base:
                              type: string
                            titan: {}
                            use-bloom-filter:
                              type: boolean
                            whole-key-filtering:
                              type: boolean
                            write-buffer-size:
                              type: string
                          required:
                          - PinL0FilterAndIndexBlocks
                          - Level0FileNumCompactionTrigger
                          - Level0SlowdownWritesTrigger
                          - Level0StopWritesTrigger
                          type: object
                        max-background-jobs:
                          format: int64
                          type: integer
                        max-manifest-file-size:
                          type: string
                        max-open-files:
                          format: int64
                          type: integer
                        max-sub-compactions:
                          format: int64
                          type: integer
                        max-total-wal-size:
                          type: string
                        raftcf:
                          description: TiKVCfConfig is the config of a cf
                          properties:
                            Level0FileNumCompactionTrigger:
                              format: int64
                              type: integer
                            Level0SlowdownWritesTrigger:
                              format: int64
                              type: integer
                            Level0StopWritesTrigger:
                              format: int64
                              type: integer
                            PinL0FilterAndIndexBlocks:
                              type: boolean
                            block-based-bloom-filter:
                              type: boolean
                            block-cache-size:
                              type: string
                            block-size:
                              type: string
                            bloom-filter-bits-per-key:
                              format: int64
                              type: integer
                            cache-index-and-filter-blocks:
                              type: boolean
                            compaction-pri:
                              format: int64
                              type: integer
                            compaction-style:
                              format: int64
                              type: integer
                            compression-per-level:
                              items:
                                type: string
                              type: array
                            disable-auto-compactions:
                              type: boolean
                            disable-block-cache:
                              type: boolean
                            dynamic-level-bytes:
                              type: boolean
                            enable-doubly-skiplist:
                              type: boolean
                            force-consistency-checks:
                              type: boolean
                            hard-pending-compaction-bytes-limit:
                              type: string
                            max-bytes-for-level-base:
                              type: string
                            max-bytes-for-level-multiplier:
                              format: int64
                              type: integer
                            max-compaction-bytes:
                              type: string
                            max-write-buffer-number:
                              format: int64
                              type: integer
                            min-write-buffer-number-to-merge:
                              format: int64
                              type: integer
                            num-levels:
                              format: int64
                              type: integer
                            optimize-filters-for-hits:
                              type: boolean
                            prop-keys-index-distance:
                              format: int64
                              type: integer
                            prop-size-index-distance:
                              format: int64
                              type: integer
                            read-amp-bytes-per-bit:
                              format: int64
                              type: integer
                            soft-pending-compaction-bytes-limit:
                              type: string
                            target-file-size-base:
                              type: string
                            titan: {}
                            use-bloom-filter:
                              type: boolean
                            whole-key-filtering:
                              type: boolean
                            write-buffer-size:
                              type: string
                          required:
                          - PinL0FilterAndIndexBlocks
                          - Level0FileNumCompactionTrigger
                          - Level0SlowdownWritesTrigger
                          - Level0StopWritesTrigger
                          type: object
                        rate-bytes-per-sec:
                          type: string
                        rate-limiter-mode:
                          format: int64
                          type: integer
                        stats-dump-period:
                          type: string
                        titan:
                          description: TiKVTitanDBConfig is the config a titian db.
                          properties:
                            dirname:
                              type: string
                            disable-gc:
                              type: boolean
                            enabled:
                              type: boolean
                            max-background-gc:
                              format: int64
                              type: integer
                            purge-obsolete-files-period:
                              description: The value of this field will be truncated
                                to seconds.
                              type: string
                          type: object
                        use-direct-io-for-flush-and-compaction:
                          type: boolean
                        wal-bytes-per-sync:
                          type: string
                        wal-dir:
                          type: string
                        wal-recovery-mode:
                          format: int64
                          type: integer
                        wal-size-limit:
                          type: string
                        wal-ttl-seconds:
                          format: int64
                          type: integer
                        writable-file-max-buffer-size:
                          type: string
                        writecf:
                          description: TiKVCfConfig is the config of a cf
                          properties:
                            Level0FileNumCompactionTrigger:
                              format: int64
                              type: integer
                            Level0SlowdownWritesTrigger:
                              format: int64
                              type: integer
                            Level0StopWritesTrigger:
                              format: int64
                              type: integer
                            PinL0FilterAndIndexBlocks:
                              type: boolean
                            block-based-bloom-filter:
                              type: boolean
                            block-cache-size:
                              type: string
                            block-size:
                              type: string
                            bloom-filter-bits-per-key:
                              format: int64
                              type: integer
                            cache-index-and-filter-blocks:
                              type: boolean
                            compaction-pri:
                              format: int64
                              type: integer
                            compaction-style:
                              format: int64
                              type: integer
                            compression-per-level:
                              items:
                                type: string
                              type: array
                            disable-auto-compactions:
                              type: boolean
                            disable-block-cache:
                              type: boolean
                            dynamic-level-bytes:
                              type: boolean
                            enable-doubly-skiplist:
                              type: boolean
                            force-consistency-checks:
                              type: boolean
                            hard-pending-compaction-bytes-limit:
                              type: string
                            max-bytes-for-level-base:
                              type: string
                            max-bytes-for-level-multiplier:
                              format: int64
                              type: integer
                            max-compaction-bytes:
                              type: string
                            max-write-buffer-number:
                              format: int64
                              type: integer
                            min-write-buffer-number-to-merge:
                              format: int64
                              type: integer
                            num-levels:
                              format: int64
                              type: integer
                            optimize-filters-for-hits:
                              type: boolean
                            prop-keys-index-distance:
                              format: int64
                              type: integer
                            prop-size-index-distance:
                              format: int64
                              type: integer
                            read-amp-bytes-per-bit:
                              format: int64
                              type: integer
                            soft-pending-compaction-bytes-limit:
                              type: string
                            target-file-size-base:
                              type: string
                            titan: {}
                            use-bloom-filter:
                              type: boolean
                            whole-key-filtering:
                              type: boolean
                            write-buffer-size:
                              type: string
                          required:
                          - PinL0FilterAndIndexBlocks
                          - Level0FileNumCompactionTrigger
                          - Level0SlowdownWritesTrigger
                          - Level0StopWritesTrigger
                          type: object
                      type: object
                    server:
                      description: TiKVServerConfig is the configuration of TiKV server.
                      properties:
                        concurrent-recv-snap-limit:
                          format: int64
                          type: integer
                        concurrent-send-snap-limit:
                          format: int64
                          type: integer
                        end-point-batch-row-limit:
                          format: int64
                          type: integer
                        end-point-enable-batch-if-possible:
                          type: boolean
                        end-point-recursion-limit:
                          format: int64
                          type: integer
                        end-point-request-max-handle-duration:
                          type: string
                        end-point-stream-batch-row-limit:
                          format: int64
                          type: integer
                        end-point-stream-channel-size:
                          format: int64
                          type: integer
                        grpc-compression-type:
                          type: string
                        grpc-concurrency:
                          format: int64
                          type: integer
                        grpc-concurrent-stream:
                          format: int64
                          type: integer
                        grpc-keepalive-time:
                          type: string
                        grpc-keepalive-timeout:
                          type: string
                        grpc-raft-conn-num:
                          format: int64
                          type: integer
                        grpc-stream-initial-window-size:
                          type: string
                        heavy-load-threshold:
                          format: int64
                          type: integer
                        heavy-load-wait-duration:
                          type: string
                        labels:
                          type: object
                        snap-max-total-size:
                          type: string
                        snap-max-write-bytes-per-sec:
                          type: string
                        stats-concurrency:
                          format: int64
                          type: integer
                      type: object
                    snap-max-total-size:
                      type: string
                    snap-max-write-bytes-per-sec:
                      type: string
                    stats-concurrency:
                      format: int32
                      type: integer
                    status-addr:
                      type: string
                    status-thread-pool-size:
                      type: string
                    storage:
                      description: TiKVStorageConfig is the config of storage
                      properties:
                        block-cache:
                          description: TiKVBlockCacheConfig is the config of a block
                            cache
                          properties:
                            capacity:
                              type: string
                            high-pri-pool-ratio:
                              format: double
                              type: number
                            memory-allocator:
                              type: string
                            num-shard-bits:
                              format: int64
                              type: integer
                            shared:
                              type: boolean
                            strict-capacity-limit:
                              type: boolean
                          type: object
                        data-dir:
                          type: string
                        max-key-size:
                          format: int64
                          type: integer
                        scheduler-concurrency:
                          format: int64
                          type: integer
                        scheduler-notify-capacity:
                          format: int64
                          type: integer
                        scheduler-pending-write-threshold:
                          type: string
                        scheduler-worker-pool-size:
                          format: int64
                          type: integer
                      type: object
                  type: object
                maxFailoverCount:
                  format: int32
                  type: integer
                privileged:
                  type: boolean
                replicas:
                  format: int32
                  type: integer
                storageClassName:
                  type: string
              required:
              - replicas
              type: object
            timezone:
              description: Time zone of TiDB cluster Pods
              type: string
            tolerations:
              description: Base tolerations of TiDB cluster Pods, components may add
                more tolreations upon this respectively
              items:
                description: The pod this Toleration is attached to tolerates any
                  taint that matches the triple <key,value,effect> using the matching
                  operator <operator>.
                properties:
                  effect:
                    description: Effect indicates the taint effect to match. Empty
                      means match all taint effects. When specified, allowed values
                      are NoSchedule, PreferNoSchedule and NoExecute.
                    type: string
                  key:
                    description: Key is the taint key that the toleration applies
                      to. Empty means match all taint keys. If the key is empty, operator
                      must be Exists; this combination means to match all values and
                      all keys.
                    type: string
                  operator:
                    description: Operator represents a key's relationship to the value.
                      Valid operators are Exists and Equal. Defaults to Equal. Exists
                      is equivalent to wildcard for value, so that a pod can tolerate
                      all taints of a particular category.
                    type: string
                  tolerationSeconds:
                    description: TolerationSeconds represents the period of time the
                      toleration (which must be of effect NoExecute, otherwise this
                      field is ignored) tolerates the taint. By default, it is not
                      set, which means tolerate the taint forever (do not evict).
                      Zero and negative values will be treated as 0 (evict immediately)
                      by the system.
                    format: int64
                    type: integer
                  value:
                    description: Value is the taint value the toleration matches to.
                      If the operator is Exists, the value should be empty, otherwise
                      just a regular string.
                    type: string
                type: object
              type: array
            version:
              description: TiDB cluster version
              type: string
          type: object
      type: object
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: backups.pingcap.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.storageType
    description: The storage type of backup data
    name: StorageType
    type: string
  - JSONPath: .status.backupSize
    description: The data size of the backup
    name: BackupSize
    type: integer
  - JSONPath: .status.commitTs
    description: The commit ts of tidb cluster dump
    name: CommitTS
    type: string
  - JSONPath: .status.timeStarted
    description: The time at which the backup was started
    name: Started
    priority: 1
    type: date
  - JSONPath: .status.timeCompleted
    description: The time at which the backup was completed
    name: Completed
    priority: 1
    type: date
  group: pingcap.com
  names:
    kind: Backup
    plural: backups
    shortNames:
    - bk
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        spec:
          description: BackupSpec contains the backup specification for a tidb cluster.
          properties:
            backupType:
              description: Type is the backup type for tidb cluster.
              type: string
            cluster:
              description: Cluster is the Cluster to backup.
              type: string
            gcs:
              description: GcsStorageProvider represents the google cloud storage
                for storing backups.
              properties:
                bucket:
                  description: Bucket in which to store the Backup.
                  type: string
                bucketAcl:
                  description: BucketAcl represents the access control list for new
                    buckets
                  type: string
                location:
                  description: Location in which the gcs bucket is located.
                  type: string
                objectAcl:
                  description: ObjectAcl represents the access control list for new
                    objects
                  type: string
                projectId:
                  description: ProjectId represents the project that organizes all
                    your Google Cloud Platform resources
                  type: string
                secretName:
                  description: SecretName is the name of secret which stores the gcs
                    service account credentials JSON .
                  type: string
                storageClass:
                  description: StorageClass represents the storage class
                  type: string
              required:
              - projectId
              - secretName
              type: object
            s3:
              description: S3StorageProvider represents a S3 compliant storage for
                storing backups.
              properties:
                acl:
                  description: Acl represents access control permissions for this
                    bucket
                  type: string
                bucket:
                  description: Bucket in which to store the Backup.
                  type: string
                endpoint:
                  description: Endpoint of S3 compatible storage service
                  type: string
                provider:
                  description: Provider represents the specific storage provider that
                    implements the S3 interface
                  type: string
                region:
                  description: Region in which the S3 compatible bucket is located.
                  type: string
                secretName:
                  description: SecretName is the name of secret which stores S3 compliant
                    storage access key and secret key.
                  type: string
                storageClass:
                  description: StorageClass represents the storage class
                  type: string
              required:
              - provider
              - secretName
              type: object
            storageClassName:
              description: StorageClassName is the storage class for backup job's
                PV.
              type: string
            storageSize:
              description: StorageSize is the request storage size for backup job
              type: string
            storageType:
              description: StorageType is the backup storage type.
              type: string
            tidbSecretName:
              description: TidbSecretName is the name of secret which stores tidb
                cluster's username and password.
              type: string
          required:
          - cluster
          - tidbSecretName
          - storageType
          - storageClassName
          - storageSize
          type: object
      type: object
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: restores.pingcap.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.backup
    description: The backup that used to restore
    name: Backup
    type: string
  - JSONPath: .status.timeStarted
    description: The time at which the backup was started
    name: Started
    priority: 1
    type: date
  - JSONPath: .status.timeCompleted
    description: The time at which the restore was completed
    name: Completed
    priority: 1
    type: date
  group: pingcap.com
  names:
    kind: Restore
    plural: restores
    shortNames:
    - rt
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        spec:
          description: RestoreSpec contains the specification for a restore of a tidb
            cluster backup.
          properties:
            backup:
              description: Backup represents the backup object to be restored.
              type: string
            backupNamespace:
              description: Namespace is the namespace of the backup.
              type: string
            cluster:
              description: Cluster represents the tidb cluster to be restored.
              type: string
            storageClassName:
              description: StorageClassName is the storage class for restore job's
                PV.
              type: string
            storageSize:
              description: StorageSize is the request storage size for restore job
              type: string
            tidbSecretName:
              description: SecretName is the name of the secret which stores tidb
                cluster's username and password.
              type: string
          required:
          - cluster
          - backup
          - backupNamespace
          - tidbSecretName
          - storageClassName
          - storageSize
          type: object
      type: object
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: backupschedules.pingcap.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.schedule
    description: The cron format string used for backup scheduling.
    name: Schedule
    type: string
  - JSONPath: .spec.maxBackups
    description: The max number of backups we want to keep.
    name: MaxBackups
    type: integer
  - JSONPath: .status.lastBackup
    description: The last backup CR name
    name: LastBackup
    priority: 1
    type: string
  - JSONPath: .status.lastBackupTime
    description: The last time the backup was successfully created
    name: LastBackupTime
    priority: 1
    type: date
  group: pingcap.com
  names:
    kind: BackupSchedule
    plural: backupschedules
    shortNames:
    - bks
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        spec:
          description: BackupScheduleSpec contains the backup schedule specification
            for a tidb cluster.
          properties:
            backupTemplate:
              description: BackupSpec contains the backup specification for a tidb
                cluster.
              properties:
                backupType:
                  description: Type is the backup type for tidb cluster.
                  type: string
                cluster:
                  description: Cluster is the Cluster to backup.
                  type: string
                gcs:
                  description: GcsStorageProvider represents the google cloud storage
                    for storing backups.
                  properties:
                    bucket:
                      description: Bucket in which to store the Backup.
                      type: string
                    bucketAcl:
                      description: BucketAcl represents the access control list for
                        new buckets
                      type: string
                    location:
                      description: Location in which the gcs bucket is located.
                      type: string
                    objectAcl:
                      description: ObjectAcl represents the access control list for
                        new objects
                      type: string
                    projectId:
                      description: ProjectId represents the project that organizes
                        all your Google Cloud Platform resources
                      type: string
                    secretName:
                      description: SecretName is the name of secret which stores the
                        gcs service account credentials JSON .
                      type: string
                    storageClass:
                      description: StorageClass represents the storage class
                      type: string
                  required:
                  - projectId
                  - secretName
                  type: object
                s3:
                  description: S3StorageProvider represents a S3 compliant storage
                    for storing backups.
                  properties:
                    acl:
                      description: Acl represents access control permissions for this
                        bucket
                      type: string
                    bucket:
                      description: Bucket in which to store the Backup.
                      type: string
                    endpoint:
                      description: Endpoint of S3 compatible storage service
                      type: string
                    provider:
                      description: Provider represents the specific storage provider
                        that implements the S3 interface
                      type: string
                    region:
                      description: Region in which the S3 compatible bucket is located.
                      type: string
                    secretName:
                      description: SecretName is the name of secret which stores S3
                        compliant storage access key and secret key.
                      type: string
                    storageClass:
                      description: StorageClass represents the storage class
                      type: string
                  required:
                  - provider
                  - secretName
                  type: object
                storageClassName:
                  description: StorageClassName is the storage class for backup job's
                    PV.
                  type: string
                storageSize:
                  description: StorageSize is the request storage size for backup
                    job
                  type: string
                storageType:
                  description: StorageType is the backup storage type.
                  type: string
                tidbSecretName:
                  description: TidbSecretName is the name of secret which stores tidb
                    cluster's username and password.
                  type: string
              required:
              - cluster
              - tidbSecretName
              - storageType
              - storageClassName
              - storageSize
              type: object
            maxBackups:
              description: MaxBackups is to specify how many backups we want to keep
                0 is magic number to indicate un-limited backups.
              format: int32
              type: integer
            maxReservedTime:
              description: MaxReservedTime is to specify how long backups we want
                to keep.
              type: string
            pause:
              description: Pause means paused backupSchedule
              type: boolean
            schedule:
              description: Schedule specifies the cron string used for backup scheduling.
              type: string
            storageClassName:
              description: StorageClassName is the storage class for backup job's
                PV.
              type: string
            storageSize:
              description: StorageSize is the request storage size for backup job
              type: string
          required:
          - schedule
          - backupTemplate
          type: object
      type: object
  version: v1alpha1
