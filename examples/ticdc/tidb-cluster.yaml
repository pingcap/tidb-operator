# IT IS NOT SUITABLE FOR PRODUCTION USE.
# This YAML describes a basic TiDB cluster with minimum resource requirements,
# which should be able to run in any Kubernetes cluster with storage support.
apiVersion: pingcap.com/v1alpha1
kind: TidbCluster
metadata:
  name: basic
spec:
  version: v5.4.0
  timezone: UTC
  pvReclaimPolicy: Retain
  enableDynamicConfiguration: true
  configUpdateStrategy: RollingUpdate
  discovery: {}
  helper:
    image: busybox:1.34.1
  pd:
    baseImage: pingcap/pd
    maxFailoverCount: 0
    replicas: 1
    # if storageClassName is not set, the default Storage Class of the Kubernetes cluster will be used
    # storageClassName: local-storage
    requests:
      storage: "1Gi"
    config: {}
  tikv:
    baseImage: pingcap/tikv
    maxFailoverCount: 0
    # If only 1 TiKV is deployed, the TiKV region leader 
    # cannot be transferred during upgrade, so we have
    # to configure a short timeout
    evictLeaderTimeout: 1m
    replicas: 1
    # if storageClassName is not set, the default Storage Class of the Kubernetes cluster will be used
    # storageClassName: local-storage
    requests:
      storage: "1Gi"
    config:
      storage:
        # In basic examples, we set this to avoid using too much storage.
        reserve-space: "0MB"
      rocksdb:
        # In basic examples, we set this to avoid the following error in some Kubernetes clusters:
        # "the maximum number of open file descriptors is too small, got 1024, expect greater or equal to 82920"
        max-open-files: 256
      raftdb:
        max-open-files: 256
  tidb:
    baseImage: pingcap/tidb
    maxFailoverCount: 0
    replicas: 1
    service:
      type: ClusterIP
    config: {}
  ticdc:
    baseImage: pingcap/ticdc
    version: "v5.4.0"
    replicas: 3
    storageClassName: standard
    requests:
      cpu: 1000m
      memory: 1Gi
    limits:
      cpu: 2000m
      memory: 2Gi
    imagePullPolicy: IfNotPresent
    imagePullSecrets:
      - name: secretName
    hostNetwork: false
    priorityClassName: system-cluster-critical
    schedulerName: default-scheduler
    tolerations: []
    configUpdateStrategy: RollingUpdate
    statefulSetUpdateStrategy: RollingUpdate
    podSecurityContext: {}
    env: []
    additionalContainers: []
    storageVolumes: []
    additionalVolumes: []
    additionalVolumeMounts: []
    terminationGracePeriodSeconds: 30
    # Ref: https://docs.pingcap.com/tidb/stable/deploy-ticdc#add-ticdc-to-an-existing-tidb-cluster-using-binary-not-recommended
    config:
      timezone: UTC
      gcTTL: 86400
      logLevel: info
      logFile: cdc.log
    # TopologySpreadConstraints for pod scheduling, will overwrite cluster level spread constraints setting
    # Ref: pkg/apis/pingcap/v1alpha1/types.go#TopologySpreadConstraint
