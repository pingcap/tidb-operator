name: ci

on:
  pull_request:
    branches:
    - master
    - release-*
  push:
    branches:
    - master
    - release-*

jobs:

  pull:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        job:
        - verify
        - build
        - test
        - e2e-examples
    steps:
    - name: Set up Go 1.16
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.4
      id: go

    # the GITHUB_SHA env is not the real commit hash but is the pre-merge commit ID for `pull_request` event,
    # see https://github.community/t/github-sha-isnt-the-value-expected/17903/2
    # so we checkout the repo with `fetch-depth: 2` and let `codecov/codecov-action` to retrieve the real commit hash.
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        path: go/src/github.com/${{ github.repository }}
        fetch-depth: 2

    - name: ${{ matrix.job }}
      run: |
        # workaround for https://github.com/actions/setup-go/issues/14
        export GOPATH=${GITHUB_WORKSPACE}/go
        export PATH=$PATH:$GOPATH/bin
        if [[ "$job" == "verify" ]]; then
          make check-setup check
        elif [[ "$job" == "build" ]]; then
          make docker e2e-docker cli debug-build-docker
        elif [[ "$job" == "test" ]]; then
          make test GOFLAGS=-race GO_COVER=y
        else
          make $job
        fi
      working-directory: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}
      env:
        job: ${{ matrix.job }}

    - name: Upload test coverage
      uses: codecov/codecov-action@v1
      with:
        flags: unittest
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}
      if: ${{ matrix.job == 'test' }}

    - name: Set up tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 60
