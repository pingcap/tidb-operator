name: cd

on:
  push:
    branches: ["*release-1.4"]
  pull_request:
    branches: ["*release-1.4"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Image & Push To ECR
    runs-on: self-hosted
    outputs:
      image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:${{ github.sha }}
    env:
      ECR_REPO: tidbcloud/serverless/tidb-operator
      AWS_ROLE_ARN: ${{ secrets.DBAAS_DEV_AWS_ROLE }}
      AWS_REGION: us-west-2
      GITHUB_TOKEN: ${{ secrets.GIT_ACTION_BOT }}
    steps:
      - name: Check out Code
        uses: actions/checkout@v2

      - name: Setup Docker Context
        run: |
          docker --context tls-env info || docker context create tls-env

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Make Sure the Image Repos Exist
        run: |
          aws ecr describe-repositories --repository-names ${{ env.ECR_REPO }} || aws ecr create-repository --repository-name ${{ env.ECR_REPO }} || exit 1

      - name: Build amd64
        run: make build GOARCH=amd64 && docker build --platform=linux/amd64 --push --tag ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:cse-${{ github.sha }}-amd64

      - name: Build arm64
        run: make build GOARCH=arm64 && docker build --platform=linux/arm64 --push --tag ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:cse-${{ github.sha }}-arm64

      - name: Create manifest
        run: docker manifest create ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}cse-${{ github.sha }} \
          --amend ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:cse-${{ github.sha }}-amd64 \
          --amend ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:cse-${{ github.sha }}-arm64

      - name: Push manifest
        run: docker manifest push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}cse-${{ github.sha }}
