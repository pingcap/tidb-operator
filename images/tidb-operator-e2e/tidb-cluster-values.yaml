# Default values for tidb-cluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

rbac:
  create: true

# clusterName is the TiDB cluster name, it is required and should be unique
# if multiple clusters are deployed in the same namespace.
clusterName: demo-cluster

# timezone is the default system timzone for TiDB
timezone: UTC

# default reclaim policy of a PV
pvReclaimPolicy: Retain

# services is the service list to expose, default is ClusterIP
# can be ClusterIP | NodePort | LoadBalancer
services:
  - name: pd
    type: ClusterIP

pd:
  replicas: 3
  image: pingcap/pd:v2.0.7
  imagePullPolicy: IfNotPresent
  logLevel: info
  # storageClassName is a StorageClass provides a way for administrators to describe the "classes" of storage they offer.
  # different classes might map to quality-of-service levels, or to backup policies,
  # or to arbitrary policies determined by the cluster administrators.
  # refer to https://kubernetes.io/docs/concepts/storage/storage-classes
  storageClassName: local-storage

  # maxStoreDownTime is how long a store will be considered `down` when disconnected
  # if a store is considered `down`, the regions will be migrated to other stores
  maxStoreDownTime: 1h
  # maxReplicas is the number of replicas for each region
  maxReplicas: 3
  resources:
    # limits:
    #   cpu: 8000m
    #   memory: 8Gi
    requests:
      # cpu: 4000m
      # memory: 4Gi
      storage: 1Gi
  # nodeSelector is used for scheduling pod,
  # if nodeSelectorRequired is true, all the following labels must be matched
  nodeSelector: {}
    # kind: pd
    # # zone is comma separated availability zone list
    # zone: cn-bj1-01,cn-bj1-02
    # # region is comma separated region list
    # region: cn-bj1
  # Tolerations are applied to pods, and allow pods to schedule onto nodes with matching taints.
  # refer to https://kubernetes.io/docs/concepts/configuration/taint-and-toleration
  tolerations: {}
  # - key: node-role
  #   operator: Equal
  #   value: tidb
  #   effect: "NoSchedule"

tikv:
  replicas: 3
  image: pingcap/tikv:v2.0.7
  imagePullPolicy: IfNotPresent
  logLevel: info
  # storageClassName is a StorageClass provides a way for administrators to describe the "classes" of storage they offer.
  # different classes might map to quality-of-service levels, or to backup policies,
  # or to arbitrary policies determined by the cluster administrators.
  # refer to https://kubernetes.io/docs/concepts/storage/storage-classes
  storageClassName: local-storage

  # syncLog is a bool value to enable or disable syc-log for raftstore, default is true
  # enable this can prevent data loss when power failure
  syncLog: true
  resources:
    # limits:
    #   cpu: 16000m
    #   memory: 32Gi
    #   storage: 300Gi
    requests:
      # cpu: 12000m
      # memory: 24Gi
      storage: 10Gi
  nodeSelector: {}
    # kind: tikv
    # zone: cn-bj1-01,cn-bj1-02
    # region: cn-bj1
  tolerations: {}
  # - key: node-role
  #   operator: Equal
  #   value: tidb
  #   effect: "NoSchedule"

tikvPromGateway:
  image: prom/pushgateway:v0.3.1
  imagePullPolicy: IfNotPresent
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 100Mi
    # requests:
    #   cpu: 50m
    #   memory: 50Mi

tidb:
  replicas: 2
  image: pingcap/tidb:v2.0.7
  imagePullPolicy: IfNotPresent
  logLevel: info
  resources: {}
    # limits:
    #   cpu: 16000m
    #   memory: 16Gi
    # requests:
    #   cpu: 12000m
    #   memory: 12Gi
  nodeSelector: {}
    # kind: tidb
    # zone: cn-bj1-01,cn-bj1-02
    # region: cn-bj1
  tolerations: {}
  # - key: node-role
  #   operator: Equal
  #   value: tidb
  #   effect: "NoSchedule"
  service:
    type: NodePort
    exposeStatus: true
    annotations: {}
      # cloud.google.com/load-balancer-type: Internal

monitor:
  create: true
  persistent: false
  storageClassName: local-storage
  storage: 10Gi
  dashboardInstaller:
    image: pingcap/tidb-dashboard-installer:v2.0.0
    imagePullPolicy: IfNotPresent
  grafana:
    image: grafana/grafana:4.6.3
    imagePullPolicy: IfNotPresent
    logLevel: info
    resources: {}
      # limits:
      #   cpu: 8000m
      #   memory: 8Gi
      # requests:
      #   cpu: 4000m
      #   memory: 4Gi
    username: admin
    password: admin
    service:
      type: NodePort
    grafanaUrl: http://localhost:3000
  prometheus:
    image: prom/prometheus:v2.2.1
    imagePullPolicy: IfNotPresent
    logLevel: info
    resources: {}
      # limits:
      #   cpu: 8000m
      #   memory: 8Gi
      # requests:
      #   cpu: 4000m
      #   memory: 4Gi
    service:
      type: NodePort
    reserveDays: 12
    # alertmanagerURL: ""
  nodeSelector: {}
    # kind: monitor
    # zone: cn-bj1-01,cn-bj1-02
    # region: cn-bj1
  tolerations: {}
  # - key: node-role
  #   operator: Equal
  #   value: tidb
  #   effect: "NoSchedule"

fullbackup:
  create: false
  binlogImage: pingcap/tidb-binlog:latest
  binlogImagePullPolicy: IfNotPresent
  # https://github.com/tennix/tidb-cloud-backup
  mydumperImage: pingcap/tidb-cloud-backup:latest
  mydumperImagePullPolicy: IfNotPresent
  # storageClassName is a StorageClass provides a way for administrators to describe the "classes" of storage they offer.
  # different classes might map to quality-of-service levels, or to backup policies,
  # or to arbitrary policies determined by the cluster administrators.
  # refer to https://kubernetes.io/docs/concepts/storage/storage-classes
  storageClassName: local-storage
  storage: 1000Gi
  # https://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs/#schedule
  schedule: "0 0 * * *"
  # https://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs/#suspend
  suspend: false
  # https://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs/#jobs-history-limits
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  # https://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs/#starting-deadline
  startingDeadlineSeconds: 3600
  # https://github.com/maxbube/mydumper/blob/master/docs/mydumper_usage.rst#options
  options: "--chunk-filesize=100"
  # user must set tidb cluster user and password
  user: backup
  password: "Password here ..."
  # backup to gcp
  gcp: {}
    # base64 format of the service account json file data
    # https://cloud.google.com/docs/authentication/production#obtaining_and_providing_service_account_credentials_manually
    # and then: cat credentials.json | base64 | tr -d '\n'
    # credentialsData: ""
    # bucket: ""

metaInstance: "{{ $labels.instance }}"
metaType: "{{ $labels.type }}"
metaValue: "{{ $value }}"
