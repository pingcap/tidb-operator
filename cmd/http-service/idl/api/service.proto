syntax = "proto3";

package api;

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/pingcap/tidb-operator/http-service/api;api";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "TiDB Operator API",
    description: "This is the TiDB Operator API.",
    version: "v1-beta";
  };
};

service Cluster {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {description: "Create, get, modify, and delete TiDB clusters."};

  rpc CreateCluster(CreateClusterReq) returns (CreateClusterResp) {
    option (google.api.http) = {
      post: "/v1beta/clusters"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "CreateCluster"
      summary: "Create a cluster."
    };
  }

  rpc UpdateCluster(UpdateClusterReq) returns (UpdateClusterResp) {
    option (google.api.http) = {
      put: "/v1beta/clusters/{cluster_id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "UpdateCluster"
      summary: "Update a cluster."
    };
  }

  rpc GetCluster(GetClusterReq) returns (GetClusterResp) {
    option (google.api.http) = {get: "/v1beta/clusters/{cluster_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "GetCluster"
      summary: "Get a cluster."
    };
  }
}

message User {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "User"
      description: "User is the username and password of the cluster."
      required: [
          "username"
          "password"
]
    }
  };

  string username = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The username of the cluster.",
    example: "\"root\""
  }];
  string password = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The password of the cluster.",
    example: "\"123456\""
  }];
}

message Resource {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Resource"
      description: "Resource is the resource of the component for each replica."
      required: [
          "cpu"
          "memory"
]
    }
  };

  uint32 cpu = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The number of CPU cores for each replica.",
    example: "2"
  }];
  uint32 memory = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The amount of memory for each replica. unit: Gi",
    example: "4"
  }];
  optional uint32 storage = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The amount of storage for each replica. unit: Gi. This is used for PD, TiKV and TiFlash now.",
    example: "100"
  }];
}

message Component {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Component"
      description: "Component is the component of the cluster."
    }
  };

  optional uint32 replicas = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The number of replicas of the component.",
    example: "3"
  }];
  optional Resource resource = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The resource of the component for each replica."}];
  map<string, google.protobuf.Value> config = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The config of the component. JSON format."}];
  optional uint32 port = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The port of the component. Only used for TiDB now."}];
}

// extension for TiFlash as TiFlash with another learner config field.
message TiFlashComponent {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Component"
      description: "Component is the component of the cluster."
    }
  };

  optional uint32 replicas = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The number of replicas of the component.",
    example: "3"
  }];
  optional Resource resource = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The resource of the component for each replica."}];
  map<string, google.protobuf.Value> config = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The config of the component. JSON format."}];
  map<string, google.protobuf.Value> learner_config = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The TiFlash learner config of the component. JSON format."}];
  optional uint32 port = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The port of the component. Only used for TiDB now."}];
}

message Prometheus {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Prometheus"
      description: "Prometheus is the Prometheus component of the cluster."
      required: [
          "version"
          "resource"
]
    }
  };

  string version = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The version of the Prometheus. Only official versions are supported now.",
    example: "\"v2.27.1\""
  }];
  Resource resource = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The resource of the Prometheus."}];
  repeated string command_options = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The command options of the Prometheus."}];
}

message Grafana {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Grafana"
      description: "Grafana is the Grafana component of the cluster."
      required: [
          "version"
          "resource"
]
    }
  };

  string version = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The version of the Grafana. Only official versions are supported now.",
    example: "\"7.5.11\""
  }];
  Resource resource = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The resource of the Grafana."}];
  map<string, string> envs = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The environment variables of the Grafana."}];
  optional uint32 port = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The port of the Grafana."}];
}

message CreateClusterReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "CreateClusterReq"
      description: "CreateClusterReq is the request for creating cluster."
      required: [
          "cluster_id"
          "version"
          "pd"
          "tikv"
          "tidb"
]
    }
  };

  string cluster_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The unique ID or name of the cluster.",
    example: "\"tidb-clsuter-123\""
  }];
  string version = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The version of the TiDB cluster. Only official versions are supported now.",
    example: "\"v7.1.1\""
  }];
  optional User user = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The username and password of the cluster."}];

  Component pd = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The PD component of the cluster."}];
  Component tikv = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The TiKV component of the cluster."}];
  optional TiFlashComponent tiflash = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The TiFlash component of the cluster."}];
  Component tidb = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The TiDB component of the cluster."}];
  optional Prometheus prometheus = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The Prometheus component of the cluster."}];
  optional Grafana grafana = 9 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The Grafana component of the cluster."}];
}

message CreateClusterResp {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "CreateClusterResp"
      description: "CreateClusterResp is the response for creating cluster."
    }
  };

  bool success = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Whether the request is successful.",
    example: "true"
  }];
  optional string message = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The message of the response."}];
}

message UpdateClusterReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "UpdateClusterReq"
      description: "UpdateClusterReq is the request for updating cluster."
      required: ["cluster_id"]
    }
  };

  string cluster_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The unique ID or name of the cluster.",
    example: "\"tidb-clsuter-123\""
  }];
  optional string version = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The version of the TiDB cluster. Only official versions are supported now.",
    example: "\"v7.1.1\""
  }];
  optional Component pd = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The PD component of the cluster."}];
  optional Component tikv = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The TiKV component of the cluster."}];
  optional TiFlashComponent tiflash = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The TiFlash component of the cluster."}];
  optional Component tidb = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The TiDB component of the cluster."}];
}

message UpdateClusterResp {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "UpdateClusterResp"
      description: "UpdateClusterResp is the response for updating cluster."
    }
  };

  bool success = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Whether the request is successful.",
    example: "true"
  }];
  optional string message = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The message of the response."}];
}

message GetClusterReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "GetClusterReq"
      description: "GetClusterReq is the request for getting cluster."
      required: ["cluster_id"]
    }
  };

  string cluster_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The unique ID or name of the cluster.",
    example: "\"tidb-clsuter-123\""
  }];
}

message GetClusterResp {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "GetClusterResp"
      description: "GetClusterResp is the response for getting cluster."
    }
  };

  bool success = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Whether the request is successful.",
    example: "true"
  }];
  optional string message = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The message of the response."}];
  optional ClusterInfo data = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The information of the cluster."}];
}

message ClusterInfo {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "ClusterInfo"
      description: "ClusterInfo is the information of the cluster."
      required: [
          "cluster_id"
          "version"
          "status"
          "pd"
          "tikv"
          "tidb"
]
    }
  };

  string cluster_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The unique ID or name of the cluster.",
    example: "\"tidb-clsuter-123\""
  }];
  string version = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The version of the TiDB cluster.",
    example: "\"v7.1.1\""
  }];
  string status = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The status of the TiDB cluster. Values include \"creating\", \"running\", \"deleting\", \"scaling\", \"upgrading\" and \"unavailable\".",
    example: "\"running\""
  }];
  PDStatus pd = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The PD component of the cluster."}];
  TiKVStatus tikv = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The TiKV component of the cluster."}];
  optional TiFlashStatus tiflash = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The TiFlash component of the cluster."}];
  TiDBStatus tidb = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The TiDB component of the cluster."}];
  optional PrometheusStatus prometheus = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The Prometheus component of the cluster."}];
  optional GrafanaStatus grafana = 9 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The Grafana component of the cluster."}];
}

message PDStatus {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "PDStatus"
      description: "PDStatus is the status of the PD component."
      required: [
          "phase"
          "replicas"
          "resource"
          "members"
]
    }
  };

  string phase = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The phase of the PD component. Values include \"Normal\", \"Scale\" and \"Upgrade\".",
    example: "\"Normal\""
  }];
  uint32 replicas = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The number of replicas of the PD component.",
    example: "3"
  }];
  Resource resource = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The resource of the PD component for each replica."}];
  map<string, google.protobuf.Value> config = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The config of the PD component. JSON format."}];
  repeated PDMember members = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The members of the PD component."}];
}

message PDMember {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "PDMember"
      description: "PDMember is a member status of the PD component."
      required: [
          "name"
          "id"
          "start_time"
          "health"
]
    }
  };

  string name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The name of the PD member.",
    example: "\"pd-0\""
  }];
  uint64 id = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The ID of the PD member.",
    example: "123"
  }];
  string start_time = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The latest start time of the PD member.",
    example: "\"2023-11-01T00:00:00Z\""
  }];
  bool health = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Whether the PD member is healthy.",
    example: "true"
  }];
}

message TiKVStatus {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "TiKVStatus"
      description: "TiKVStatus is the status of the TiKV component."
      required: [
          "phase"
          "replicas"
          "resource"
          "members"
]
    }
  };

  string phase = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The phase of the TiKV component. Values include \"Normal\", \"Scale\" and \"Upgrade\".",
    example: "\"Normal\""
  }];
  uint32 replicas = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The number of replicas of the TiKV component.",
    example: "3"
  }];
  Resource resource = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The resource of the TiKV component for each replica."}];
  map<string, google.protobuf.Value> config = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The config of the TiKV component. JSON format."}];
  repeated TiKVMember members = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The members of the TiKV component."}];
}

message TiKVMember {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "TiKVMember"
      description: "TiKVMember is a member status of the TiKV component."
      required: [
          "name"
          "id"
          "start_time"
          "state"
]
    }
  };

  string name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The name of the TiKV member.",
    example: "\"tikv-0\""
  }];
  uint64 id = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The ID of the TiKV member.",
    example: "123"
  }];
  string start_time = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The latest start time of the TiKV member.",
    example: "\"2023-11-01T00:00:00Z\""
  }];
  string state = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The state of the TiKV member.",
    example: "\"Up\""
  }];
}

message TiFlashStatus {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "TiFlashStatus"
      description: "TiFlashStatus is the status of the TiFlash component."
      required: [
          "phase"
          "replicas"
          "resource"
          "members"
]
    }
  };

  string phase = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The phase of the TiFlash component. Values include \"Normal\", \"Scale\" and \"Upgrade\".",
    example: "\"Normal\""
  }];
  uint32 replicas = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The number of replicas of the TiFlash component.",
    example: "2"
  }];
  Resource resource = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The resource of the TiFlash component for each replica."}];
  map<string, google.protobuf.Value> config = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The config of the TiFlash component. JSON format."}];
  map<string, google.protobuf.Value> learner_config = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The TiFlash learner config of the TiFlash component. JSON format."}];
  repeated TiFlashMember members = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The members of the TiFlash component."}];
}

message TiFlashMember {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "TiFlashMember"
      description: "TiFlashMember is a member status of the TiFlash component."
      required: [
          "name"
          "id"
          "start_time"
          "state"
]
    }
  };

  string name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The name of the TiFlash member.",
    example: "\"tiflash-0\""
  }];
  uint64 id = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The ID of the TiFlash member.",
    example: "123"
  }];
  string start_time = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The latest start time of the TiFlash member.",
    example: "\"2023-11-01T00:00:00Z\""
  }];
  string state = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The state of the TiFlash member.",
    example: "\"Up\""
  }];
}

message TiDBStatus {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "TiDBStatus"
      description: "TiDBStatus is the status of the TiDB component."
      required: [
          "phase"
          "replicas"
          "resource"
          "host"
          "port"
          "members"
]
    }
  };

  string phase = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The phase of the TiDB component. Values include \"Normal\", \"Scale\" and \"Upgrade\".",
    example: "\"Normal\""
  }];
  uint32 replicas = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The number of replicas of the TiDB component.",
    example: "1"
  }];
  Resource resource = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The resource of the TiDB component for each replica."}];
  map<string, google.protobuf.Value> config = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The config of the TiDB component. JSON format."}];
  string host = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The host (IP or domain name) of the TiDB component."}];
  uint32 port = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The port of the TiDB component.",
    example: "4000"
  }];
  repeated TiDBMember members = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The members of the TiDB component."}];
}

message TiDBMember {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "TiDBMember"
      description: "TiDBMember is a member status of the TiDB component."
      required: [
          "name"
          "start_time"
          "health"
]
    }
  };

  string name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The name of the TiDB member.",
    example: "\"tidb-0\""
  }];
  string start_time = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The latest start time of the TiDB member.",
    example: "\"2023-11-01T00:00:00Z\""
  }];
  bool health = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Whether the TiDB member is healthy.",
    example: "true"
  }];
}

message PrometheusStatus {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "PrometheusStatus"
      description: "PrometheusStatus is the status of the Prometheus component."
      required: [
          "version"
          "resource"
]
    }
  };

  string version = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The version of the Prometheus component.",
    example: "\"v2.27.1\""
  }];
  Resource resource = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The resource of the Prometheus component."}];
  repeated string command_options = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The command options of the Prometheus component."}];
}

message GrafanaStatus {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "GrafanaStatus"
      description: "GrafanaStatus is the status of the Grafana component."
      required: [
          "version"
          "resource"
          "host"
          "port"
]
    }
  };

  string version = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The version of the Grafana component.",
    example: "\"7.5.11\""
  }];
  Resource resource = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The resource of the Grafana component."}];
  map<string, string> envs = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The environment variables of the Grafana component."}];
  string host = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The host (IP or domain name) of the Grafana component."}];
  uint32 port = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The port of the Grafana component.",
    example: "3000"
  }];
}
